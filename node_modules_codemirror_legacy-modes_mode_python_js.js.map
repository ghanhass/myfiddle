{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_python_js.js","mappings":";;;;;;;;;;;;;;;AAAA,SAASA,UAAUA,CAACC,KAAK,EAAE;EACzB,OAAO,IAAIC,MAAM,CAAC,KAAK,GAAGD,KAAK,CAACE,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;AACxD;AAEA,IAAIC,aAAa,GAAGJ,UAAU,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC1D,IAAIK,cAAc,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAC5C,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EACjD,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EACvC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EACnC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC;AAC7E,IAAIC,cAAc,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,EAClE,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EACvE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAC7D,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAC5D,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,EAAE,KAAK,EACzD,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAC3D,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAC1D,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EACtD,QAAQ,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EACxD,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,gBAAgB,EACrD,UAAU,EAAE,WAAW,CAAC;AAE9C,SAASC,GAAGA,CAACC,KAAK,EAAE;EAClB,OAAOA,KAAK,CAACC,MAAM,CAACD,KAAK,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC;AAC9C;AAEO,SAASC,QAAQA,CAACC,UAAU,EAAE;EACnC,IAAIC,UAAU,GAAG,OAAO;EAExB,IAAIC,UAAU,GAAGF,UAAU,CAACE,UAAU,IAAIF,UAAU,CAACG,gBAAgB,IAAI,2BAA2B;EACpG;EACA,IAAIC,SAAS,GAAG,CAACJ,UAAU,CAACK,eAAe,EAAEL,UAAU,CAACM,eAAe,EAAEN,UAAU,CAACO,gBAAgB,EAAEP,UAAU,CAACQ,gBAAgB,EAChHR,UAAU,CAACI,SAAS,IAAI,wDAAwD,CAAC;EAClG,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,SAAS,CAACN,MAAM,EAAEW,CAAC,EAAE,EAAE,IAAI,CAACL,SAAS,CAACK,CAAC,CAAC,EAAEL,SAAS,CAACM,MAAM,CAACD,CAAC,EAAE,EAAE,CAAC,CAAC;EAEtF,IAAIE,aAAa,GAAGX,UAAU,CAACW,aAAa;EAE5C,IAAIC,UAAU,GAAGnB,cAAc;IAAEoB,UAAU,GAAGnB,cAAc;EAC5D,IAAIM,UAAU,CAACc,cAAc,IAAIC,SAAS,EACxCH,UAAU,GAAGA,UAAU,CAACI,MAAM,CAAChB,UAAU,CAACc,cAAc,CAAC;EAE3D,IAAId,UAAU,CAACiB,cAAc,IAAIF,SAAS,EACxCF,UAAU,GAAGA,UAAU,CAACG,MAAM,CAAChB,UAAU,CAACiB,cAAc,CAAC;EAE3D,IAAIC,GAAG,GAAG,EAAElB,UAAU,CAACmB,OAAO,IAAIC,MAAM,CAACpB,UAAU,CAACmB,OAAO,CAAC,GAAG,CAAC,CAAC;EACjE,IAAID,GAAG,EAAE;IACP;IACA,IAAIG,WAAW,GAAGrB,UAAU,CAACqB,WAAW,IAAG,mDAAmD;IAC9FT,UAAU,GAAGA,UAAU,CAACI,MAAM,CAAC,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IACvHH,UAAU,GAAGA,UAAU,CAACG,MAAM,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACnE,IAAIM,cAAc,GAAG,IAAIhC,MAAM,CAAC,oDAAoD,EAAE,GAAG,CAAC;EAC5F,CAAC,MAAM;IACL,IAAI+B,WAAW,GAAGrB,UAAU,CAACqB,WAAW,IAAG,yBAAyB;IACpET,UAAU,GAAGA,UAAU,CAACI,MAAM,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACjDH,UAAU,GAAGA,UAAU,CAACG,MAAM,CAAC,CAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAC5D,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EACzD,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IACvE,IAAIM,cAAc,GAAG,IAAIhC,MAAM,CAAC,0CAA0C,EAAE,GAAG,CAAC;EAClF;EACA,IAAIiC,QAAQ,GAAGnC,UAAU,CAACwB,UAAU,CAAC;EACrC,IAAIY,QAAQ,GAAGpC,UAAU,CAACyB,UAAU,CAAC;;EAErC;EACA,SAASY,SAASA,CAACC,MAAM,EAAE9B,KAAK,EAAE;IAChC,IAAI+B,GAAG,GAAGD,MAAM,CAACC,GAAG,CAAC,CAAC,IAAI/B,KAAK,CAACgC,SAAS,IAAI,IAAI;IACjD,IAAID,GAAG,EAAE/B,KAAK,CAACiC,MAAM,GAAGH,MAAM,CAACI,WAAW,CAAC,CAAC;IAC5C;IACA,IAAIH,GAAG,IAAIhC,GAAG,CAACC,KAAK,CAAC,CAACmC,IAAI,IAAI,IAAI,EAAE;MAClC,IAAIC,WAAW,GAAGrC,GAAG,CAACC,KAAK,CAAC,CAACqC,MAAM;MACnC,IAAIP,MAAM,CAACQ,QAAQ,CAAC,CAAC,EAAE;QACrB,IAAIC,UAAU,GAAGT,MAAM,CAACI,WAAW,CAAC,CAAC;QACrC,IAAIK,UAAU,GAAGH,WAAW,EAC1BI,WAAW,CAACV,MAAM,EAAE9B,KAAK,CAAC,CAAC,KACxB,IAAIuC,UAAU,GAAGH,WAAW,IAAIK,MAAM,CAACX,MAAM,EAAE9B,KAAK,CAAC,IAAI8B,MAAM,CAACY,IAAI,CAAC,CAAC,IAAI,GAAG,EAChF1C,KAAK,CAAC2C,UAAU,GAAG,IAAI;QACzB,OAAO,IAAI;MACb,CAAC,MAAM;QACL,IAAIC,KAAK,GAAGC,cAAc,CAACf,MAAM,EAAE9B,KAAK,CAAC;QACzC,IAAIoC,WAAW,GAAG,CAAC,IAAIK,MAAM,CAACX,MAAM,EAAE9B,KAAK,CAAC,EAC1C4C,KAAK,IAAI,GAAG,GAAGvC,UAAU;QAC3B,OAAOuC,KAAK;MACd;IACF;IACA,OAAOC,cAAc,CAACf,MAAM,EAAE9B,KAAK,CAAC;EACtC;EAEA,SAAS6C,cAAcA,CAACf,MAAM,EAAE9B,KAAK,EAAE8C,QAAQ,EAAE;IAC/C,IAAIhB,MAAM,CAACQ,QAAQ,CAAC,CAAC,EAAE,OAAO,IAAI;;IAElC;IACA,IAAI,CAACQ,QAAQ,IAAIhB,MAAM,CAACiB,KAAK,CAAC,MAAM,CAAC,EAAE,OAAO,SAAS;;IAEvD;IACA,IAAIjB,MAAM,CAACiB,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE;MACnC,IAAIC,YAAY,GAAG,KAAK;MACxB;MACA,IAAIlB,MAAM,CAACiB,KAAK,CAAC,6BAA6B,CAAC,EAAE;QAAEC,YAAY,GAAG,IAAI;MAAE;MACxE,IAAIlB,MAAM,CAACiB,KAAK,CAAC,cAAc,CAAC,EAAE;QAAEC,YAAY,GAAG,IAAI;MAAE;MACzD,IAAIlB,MAAM,CAACiB,KAAK,CAAC,QAAQ,CAAC,EAAE;QAAEC,YAAY,GAAG,IAAI;MAAE;MACnD,IAAIA,YAAY,EAAE;QAChB;QACAlB,MAAM,CAACmB,GAAG,CAAC,IAAI,CAAC;QAChB,OAAO,QAAQ;MACjB;MACA;MACA,IAAIC,UAAU,GAAG,KAAK;MACtB;MACA,IAAIpB,MAAM,CAACiB,KAAK,CAAC,gBAAgB,CAAC,EAAEG,UAAU,GAAG,IAAI;MACrD;MACA,IAAIpB,MAAM,CAACiB,KAAK,CAAC,YAAY,CAAC,EAAEG,UAAU,GAAG,IAAI;MACjD;MACA,IAAIpB,MAAM,CAACiB,KAAK,CAAC,aAAa,CAAC,EAAEG,UAAU,GAAG,IAAI;MAClD;MACA,IAAIpB,MAAM,CAACiB,KAAK,CAAC,+BAA+B,CAAC,EAAE;QACjD;QACAjB,MAAM,CAACmB,GAAG,CAAC,IAAI,CAAC;QAChB;QACAC,UAAU,GAAG,IAAI;MACnB;MACA;MACA,IAAIpB,MAAM,CAACiB,KAAK,CAAC,cAAc,CAAC,EAAEG,UAAU,GAAG,IAAI;MACnD,IAAIA,UAAU,EAAE;QACd;QACApB,MAAM,CAACmB,GAAG,CAAC,IAAI,CAAC;QAChB,OAAO,QAAQ;MACjB;IACF;;IAEA;IACA,IAAInB,MAAM,CAACiB,KAAK,CAACrB,cAAc,CAAC,EAAE;MAChC,IAAIyB,WAAW,GAAGrB,MAAM,CAACsB,OAAO,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;MACpE,IAAI,CAACH,WAAW,EAAE;QAChBnD,KAAK,CAACuD,QAAQ,GAAGC,kBAAkB,CAAC1B,MAAM,CAACsB,OAAO,CAAC,CAAC,EAAEpD,KAAK,CAACuD,QAAQ,CAAC;QACrE,OAAOvD,KAAK,CAACuD,QAAQ,CAACzB,MAAM,EAAE9B,KAAK,CAAC;MACtC,CAAC,MAAM;QACLA,KAAK,CAACuD,QAAQ,GAAGE,mBAAmB,CAAC3B,MAAM,CAACsB,OAAO,CAAC,CAAC,EAAEpD,KAAK,CAACuD,QAAQ,CAAC;QACtE,OAAOvD,KAAK,CAACuD,QAAQ,CAACzB,MAAM,EAAE9B,KAAK,CAAC;MACtC;IACF;IAEA,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,SAAS,CAACN,MAAM,EAAEW,CAAC,EAAE,EACvC,IAAIiB,MAAM,CAACiB,KAAK,CAACvC,SAAS,CAACK,CAAC,CAAC,CAAC,EAAE,OAAO,UAAU;IAEnD,IAAIiB,MAAM,CAACiB,KAAK,CAACzC,UAAU,CAAC,EAAE,OAAO,aAAa;IAElD,IAAIN,KAAK,CAACgC,SAAS,IAAI,GAAG,IAAIF,MAAM,CAACiB,KAAK,CAACtB,WAAW,CAAC,EACrD,OAAO,UAAU;IAEnB,IAAIK,MAAM,CAACiB,KAAK,CAACpB,QAAQ,CAAC,IAAIG,MAAM,CAACiB,KAAK,CAACnD,aAAa,CAAC,EACvD,OAAO,SAAS;IAElB,IAAIkC,MAAM,CAACiB,KAAK,CAACnB,QAAQ,CAAC,EACxB,OAAO,SAAS;IAElB,IAAIE,MAAM,CAACiB,KAAK,CAAC,eAAe,CAAC,EAC/B,OAAO,MAAM;IAEf,IAAIjB,MAAM,CAACiB,KAAK,CAACtB,WAAW,CAAC,EAAE;MAC7B,IAAIzB,KAAK,CAACgC,SAAS,IAAI,KAAK,IAAIhC,KAAK,CAACgC,SAAS,IAAI,OAAO,EACxD,OAAO,KAAK;MACd,OAAO,UAAU;IACnB;;IAEA;IACAF,MAAM,CAAC4B,IAAI,CAAC,CAAC;IACb,OAAOZ,QAAQ,GAAG,IAAI,GAAEzC,UAAU;EACpC;EAEA,SAASoD,mBAAmBA,CAACE,SAAS,EAAEC,UAAU,EAAE;IAClD,OAAO,MAAM,CAACN,OAAO,CAACK,SAAS,CAACE,MAAM,CAAC,CAAC,CAAC,CAACR,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,EAC3DM,SAAS,GAAGA,SAAS,CAACG,MAAM,CAAC,CAAC,CAAC;IAEjC,IAAIC,UAAU,GAAGJ,SAAS,CAACzD,MAAM,IAAI,CAAC;IACtC,IAAI8D,QAAQ,GAAG,QAAQ;IAEvB,SAASC,eAAeA,CAACC,KAAK,EAAE;MAC9B,OAAO,UAASpC,MAAM,EAAE9B,KAAK,EAAE;QAC7B,IAAImE,KAAK,GAAGtB,cAAc,CAACf,MAAM,EAAE9B,KAAK,EAAE,IAAI,CAAC;QAC/C,IAAImE,KAAK,IAAI,aAAa,EAAE;UAC1B,IAAIrC,MAAM,CAACsB,OAAO,CAAC,CAAC,IAAI,GAAG,EAAE;YAC3BpD,KAAK,CAACuD,QAAQ,GAAGU,eAAe,CAACC,KAAK,GAAG,CAAC,CAAC;UAC7C,CAAC,MAAM,IAAIpC,MAAM,CAACsB,OAAO,CAAC,CAAC,IAAI,GAAG,EAAE;YAClC,IAAIc,KAAK,GAAG,CAAC,EAAElE,KAAK,CAACuD,QAAQ,GAAGU,eAAe,CAACC,KAAK,GAAG,CAAC,CAAC,MACrDlE,KAAK,CAACuD,QAAQ,GAAGa,WAAW;UACnC;QACF;QACA,OAAOD,KAAK;MACd,CAAC;IACH;IAEA,SAASC,WAAWA,CAACtC,MAAM,EAAE9B,KAAK,EAAE;MAClC,OAAO,CAAC8B,MAAM,CAACuC,GAAG,CAAC,CAAC,EAAE;QACpBvC,MAAM,CAACwC,QAAQ,CAAC,aAAa,CAAC;QAC9B,IAAIxC,MAAM,CAACmB,GAAG,CAAC,IAAI,CAAC,EAAE;UACpBnB,MAAM,CAAC4B,IAAI,CAAC,CAAC;UACb,IAAIK,UAAU,IAAIjC,MAAM,CAACuC,GAAG,CAAC,CAAC,EAC5B,OAAOL,QAAQ;QACnB,CAAC,MAAM,IAAIlC,MAAM,CAACiB,KAAK,CAACY,SAAS,CAAC,EAAE;UAClC3D,KAAK,CAACuD,QAAQ,GAAGK,UAAU;UAC3B,OAAOI,QAAQ;QACjB,CAAC,MAAM,IAAIlC,MAAM,CAACiB,KAAK,CAAC,IAAI,CAAC,EAAE;UAC7B;UACA,OAAOiB,QAAQ;QACjB,CAAC,MAAM,IAAIlC,MAAM,CAACiB,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE;UACnC;UACA/C,KAAK,CAACuD,QAAQ,GAAGU,eAAe,CAAC,CAAC,CAAC;UACnC,IAAInC,MAAM,CAACsB,OAAO,CAAC,CAAC,EAAE,OAAOY,QAAQ,CAAC,KACjC,OAAOhE,KAAK,CAACuD,QAAQ,CAACzB,MAAM,EAAE9B,KAAK,CAAC;QAC3C,CAAC,MAAM,IAAI8B,MAAM,CAACiB,KAAK,CAAC,IAAI,CAAC,EAAE;UAC7B,OAAOiB,QAAQ;QACjB,CAAC,MAAM,IAAIlC,MAAM,CAACiB,KAAK,CAAC,GAAG,CAAC,EAAE;UAC5B;UACA,OAAO1C,UAAU;QACnB,CAAC,MAAM;UACLyB,MAAM,CAACmB,GAAG,CAAC,MAAM,CAAC;QACpB;MACF;MACA,IAAIc,UAAU,EAAE;QACd,IAAI3D,UAAU,CAACmE,sBAAsB,EACnC,OAAOlE,UAAU,CAAC,KAElBL,KAAK,CAACuD,QAAQ,GAAGK,UAAU;MAC/B;MACA,OAAOI,QAAQ;IACjB;IACAI,WAAW,CAACI,QAAQ,GAAG,IAAI;IAC3B,OAAOJ,WAAW;EACpB;EAEA,SAASZ,kBAAkBA,CAACG,SAAS,EAAEC,UAAU,EAAE;IACjD,OAAO,MAAM,CAACN,OAAO,CAACK,SAAS,CAACE,MAAM,CAAC,CAAC,CAAC,CAACR,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,EAC3DM,SAAS,GAAGA,SAAS,CAACG,MAAM,CAAC,CAAC,CAAC;IAEjC,IAAIC,UAAU,GAAGJ,SAAS,CAACzD,MAAM,IAAI,CAAC;IACtC,IAAI8D,QAAQ,GAAG,QAAQ;IAEvB,SAASI,WAAWA,CAACtC,MAAM,EAAE9B,KAAK,EAAE;MAClC,OAAO,CAAC8B,MAAM,CAACuC,GAAG,CAAC,CAAC,EAAE;QACpBvC,MAAM,CAACwC,QAAQ,CAAC,SAAS,CAAC;QAC1B,IAAIxC,MAAM,CAACmB,GAAG,CAAC,IAAI,CAAC,EAAE;UACpBnB,MAAM,CAAC4B,IAAI,CAAC,CAAC;UACb,IAAIK,UAAU,IAAIjC,MAAM,CAACuC,GAAG,CAAC,CAAC,EAC5B,OAAOL,QAAQ;QACnB,CAAC,MAAM,IAAIlC,MAAM,CAACiB,KAAK,CAACY,SAAS,CAAC,EAAE;UAClC3D,KAAK,CAACuD,QAAQ,GAAGK,UAAU;UAC3B,OAAOI,QAAQ;QACjB,CAAC,MAAM;UACLlC,MAAM,CAACmB,GAAG,CAAC,MAAM,CAAC;QACpB;MACF;MACA,IAAIc,UAAU,EAAE;QACd,IAAI3D,UAAU,CAACmE,sBAAsB,EACnC,OAAOlE,UAAU,CAAC,KAElBL,KAAK,CAACuD,QAAQ,GAAGK,UAAU;MAC/B;MACA,OAAOI,QAAQ;IACjB;IACAI,WAAW,CAACI,QAAQ,GAAG,IAAI;IAC3B,OAAOJ,WAAW;EACpB;EAEA,SAAS5B,WAAWA,CAACV,MAAM,EAAE9B,KAAK,EAAE;IAClC,OAAOD,GAAG,CAACC,KAAK,CAAC,CAACmC,IAAI,IAAI,IAAI,EAAEnC,KAAK,CAACC,MAAM,CAACwE,GAAG,CAAC,CAAC;IAClDzE,KAAK,CAACC,MAAM,CAACyE,IAAI,CAAC;MAACrC,MAAM,EAAEtC,GAAG,CAACC,KAAK,CAAC,CAACqC,MAAM,GAAGP,MAAM,CAAC6C,UAAU;MAC7CxC,IAAI,EAAE,IAAI;MACVyC,KAAK,EAAE;IAAI,CAAC,CAAC;EAClC;EAEA,SAASC,gBAAgBA,CAAC/C,MAAM,EAAE9B,KAAK,EAAEmC,IAAI,EAAE;IAC7C,IAAIyC,KAAK,GAAG9C,MAAM,CAACiB,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,GAAG,IAAI,GAAGjB,MAAM,CAACgD,MAAM,CAAC,CAAC,GAAG,CAAC;IACnF9E,KAAK,CAACC,MAAM,CAACyE,IAAI,CAAC;MAACrC,MAAM,EAAErC,KAAK,CAACiC,MAAM,IAAIlB,aAAa,IAAIe,MAAM,CAAC6C,UAAU,CAAC;MAC3DxC,IAAI,EAAEA,IAAI;MACVyC,KAAK,EAAEA;IAAK,CAAC,CAAC;EACnC;EAEA,SAASnC,MAAMA,CAACX,MAAM,EAAE9B,KAAK,EAAE;IAC7B,IAAI+E,QAAQ,GAAGjD,MAAM,CAACI,WAAW,CAAC,CAAC;IACnC,OAAOlC,KAAK,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,IAAIH,GAAG,CAACC,KAAK,CAAC,CAACqC,MAAM,GAAG0C,QAAQ,EAAE;MAC9D,IAAIhF,GAAG,CAACC,KAAK,CAAC,CAACmC,IAAI,IAAI,IAAI,EAAE,OAAO,IAAI;MACxCnC,KAAK,CAACC,MAAM,CAACwE,GAAG,CAAC,CAAC;IACpB;IACA,OAAO1E,GAAG,CAACC,KAAK,CAAC,CAACqC,MAAM,IAAI0C,QAAQ;EACtC;EAEA,SAASC,UAAUA,CAAClD,MAAM,EAAE9B,KAAK,EAAE;IACjC,IAAI8B,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE;MAChB/B,KAAK,CAACiF,eAAe,GAAG,IAAI;MAC5BjF,KAAK,CAACyC,MAAM,GAAG,KAAK;IACtB;IAEA,IAAIG,KAAK,GAAG5C,KAAK,CAACuD,QAAQ,CAACzB,MAAM,EAAE9B,KAAK,CAAC;IACzC,IAAIoD,OAAO,GAAGtB,MAAM,CAACsB,OAAO,CAAC,CAAC;;IAE9B;IACA,IAAIpD,KAAK,CAACiF,eAAe,IAAI7B,OAAO,IAAI,GAAG,EACzC,OAAOtB,MAAM,CAACiB,KAAK,CAACtB,WAAW,EAAE,KAAK,CAAC,GAAG,MAAM,GAAGH,GAAG,GAAG,UAAU,GAAGjB,UAAU;IAElF,IAAI,IAAI,CAAC6E,IAAI,CAAC9B,OAAO,CAAC,EAAEpD,KAAK,CAACiF,eAAe,GAAG,KAAK;IAErD,IAAI,CAACrC,KAAK,IAAI,UAAU,IAAIA,KAAK,IAAI,SAAS,KACvC5C,KAAK,CAACgC,SAAS,IAAI,MAAM,EAC9BY,KAAK,GAAG,MAAM;;IAEhB;IACA,IAAIQ,OAAO,IAAI,MAAM,IAAIA,OAAO,IAAI,QAAQ,EAC1CpD,KAAK,CAACyC,MAAM,GAAG,IAAI;IAErB,IAAIW,OAAO,IAAI,QAAQ,EAAEpD,KAAK,CAACmF,MAAM,GAAG,IAAI;IAC5C,IAAI/B,OAAO,IAAI,GAAG,IAAI,CAACpD,KAAK,CAACmF,MAAM,IAAIpF,GAAG,CAACC,KAAK,CAAC,CAACmC,IAAI,IAAI,IAAI,IAAIL,MAAM,CAACiB,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,EAClGP,WAAW,CAACV,MAAM,EAAE9B,KAAK,CAAC;IAE5B,IAAIoD,OAAO,CAAClD,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAACgF,IAAI,CAACtC,KAAK,CAAC,EAAE;MACxD,IAAIwC,eAAe,GAAG,KAAK,CAAC9B,OAAO,CAACF,OAAO,CAAC;MAC5C,IAAIgC,eAAe,IAAI,CAAC,CAAC,EACvBP,gBAAgB,CAAC/C,MAAM,EAAE9B,KAAK,EAAE,KAAK,CAACqF,KAAK,CAACD,eAAe,EAAEA,eAAe,GAAC,CAAC,CAAC,CAAC;MAElFA,eAAe,GAAG,KAAK,CAAC9B,OAAO,CAACF,OAAO,CAAC;MACxC,IAAIgC,eAAe,IAAI,CAAC,CAAC,EAAE;QACzB,IAAIrF,GAAG,CAACC,KAAK,CAAC,CAACmC,IAAI,IAAIiB,OAAO,EAAEpD,KAAK,CAACiC,MAAM,GAAGjC,KAAK,CAACC,MAAM,CAACwE,GAAG,CAAC,CAAC,CAACpC,MAAM,IAAItB,aAAa,IAAIe,MAAM,CAAC6C,UAAU,CAAC,MAC1G,OAAOtE,UAAU;MACxB;IACF;IACA,IAAIL,KAAK,CAACyC,MAAM,IAAIX,MAAM,CAACuC,GAAG,CAAC,CAAC,IAAItE,GAAG,CAACC,KAAK,CAAC,CAACmC,IAAI,IAAI,IAAI,IAAInC,KAAK,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,EACpFF,KAAK,CAACC,MAAM,CAACwE,GAAG,CAAC,CAAC;IAEpB,OAAO7B,KAAK;EACd;EAEA,OAAO;IACL0C,IAAI,EAAE,QAAQ;IAEdC,UAAU,EAAE,SAAAA,CAAA,EAAW;MACrB,OAAO;QACLhC,QAAQ,EAAE1B,SAAS;QACnB5B,MAAM,EAAE,CAAC;UAACoC,MAAM,EAAE,CAAC;UAAEF,IAAI,EAAE,IAAI;UAAEyC,KAAK,EAAE;QAAI,CAAC,CAAC;QAC9C3C,MAAM,EAAE,CAAC;QACTD,SAAS,EAAE,IAAI;QACfmD,MAAM,EAAE,KAAK;QACb1C,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IAED+C,KAAK,EAAE,SAAAA,CAAS1D,MAAM,EAAE9B,KAAK,EAAE;MAC7B,IAAIyF,MAAM,GAAGzF,KAAK,CAAC2C,UAAU;MAC7B,IAAI8C,MAAM,EAAEzF,KAAK,CAAC2C,UAAU,GAAG,KAAK;MACpC,IAAIC,KAAK,GAAGoC,UAAU,CAAClD,MAAM,EAAE9B,KAAK,CAAC;MAErC,IAAI4C,KAAK,IAAIA,KAAK,IAAI,SAAS,EAC7B5C,KAAK,CAACgC,SAAS,GAAIY,KAAK,IAAI,SAAS,IAAIA,KAAK,IAAI,aAAa,GAAId,MAAM,CAACsB,OAAO,CAAC,CAAC,GAAGR,KAAK;MAC7F,IAAIA,KAAK,IAAI,aAAa,EAAEA,KAAK,GAAG,IAAI;MAExC,IAAId,MAAM,CAACuC,GAAG,CAAC,CAAC,IAAIrE,KAAK,CAACmF,MAAM,EAC9BnF,KAAK,CAACmF,MAAM,GAAG,KAAK;MACtB,OAAOM,MAAM,GAAGpF,UAAU,GAAGuC,KAAK;IACpC,CAAC;IAEDX,MAAM,EAAE,SAAAA,CAASjC,KAAK,EAAE0F,SAAS,EAAEC,EAAE,EAAE;MACrC,IAAI3F,KAAK,CAACuD,QAAQ,IAAI1B,SAAS,EAC7B,OAAO7B,KAAK,CAACuD,QAAQ,CAACiB,QAAQ,GAAG,IAAI,GAAG,CAAC;MAE3C,IAAIoB,KAAK,GAAG7F,GAAG,CAACC,KAAK,CAAC;MACtB,IAAI6F,OAAO,GAAGD,KAAK,CAACzD,IAAI,IAAIuD,SAAS,CAAC7B,MAAM,CAAC,CAAC,CAAC,IAC3C+B,KAAK,CAACzD,IAAI,IAAI,IAAI,IAAI,CAACnC,KAAK,CAACyC,MAAM,IAAI,iCAAiC,CAACyC,IAAI,CAACQ,SAAS,CAAC;MAC5F,IAAIE,KAAK,CAAChB,KAAK,IAAI,IAAI,EACrB,OAAOgB,KAAK,CAAChB,KAAK,IAAIiB,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,MAEtC,OAAOD,KAAK,CAACvD,MAAM,IAAIwD,OAAO,GAAG9E,aAAa,IAAI4E,EAAE,CAACG,IAAI,GAAG,CAAC,CAAC;IAClE,CAAC;IAEDC,YAAY,EAAE;MACZC,YAAY,EAAEnG,cAAc,CAACuB,MAAM,CAACtB,cAAc,CAAC,CAACsB,MAAM,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;MAC7E6E,aAAa,EAAE,8CAA8C;MAC7DC,aAAa,EAAE;QAACC,IAAI,EAAE;MAAG,CAAC;MAC1BC,aAAa,EAAE;QAACC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK;MAAC;IACnE;EACF,CAAC;AACH;AAAC;AAED,IAAI5G,KAAK,GAAG,SAAAA,CAAS6G,GAAG,EAAE;EAAE,OAAOA,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC;AAAE,CAAC;AAE7C,MAAMC,MAAM,GAAGrG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAE3B,MAAMsG,MAAM,GAAGtG,QAAQ,CAAC;EAC7Be,cAAc,EAAEzB,KAAK,CAAC,6CAA6C,GAC7C,2CAA2C,GAC3C,wCAAwC;AAChE,CAAC,CAAC,C","sources":["./node_modules/@codemirror/legacy-modes/mode/python.js"],"sourcesContent":["function wordRegexp(words) {\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n}\n\nvar wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\nvar commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\",\n                      \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\",\n                      \"for\", \"from\", \"global\", \"if\", \"import\",\n                      \"lambda\", \"pass\", \"raise\", \"return\",\n                      \"try\", \"while\", \"with\", \"yield\", \"in\", \"False\", \"True\"];\nvar commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\",\n                      \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\",\n                      \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\",\n                      \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\",\n                      \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\",\n                      \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\",\n                      \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\",\n                      \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\",\n                      \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\",\n                      \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\",\n                      \"Ellipsis\", \"__debug__\"];\n\nfunction top(state) {\n  return state.scopes[state.scopes.length - 1];\n}\n\nexport function mkPython(parserConf) {\n  var ERRORCLASS = \"error\";\n\n  var delimiters = parserConf.delimiters || parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]/;\n  //               (Backwards-compatibility with old, cumbersome config system)\n  var operators = [parserConf.singleOperators, parserConf.doubleOperators, parserConf.doubleDelimiters, parserConf.tripleDelimiters,\n                   parserConf.operators || /^([-+*/%\\/&|^]=?|[<>=]+|\\/\\/=?|\\*\\*=?|!=|[~!@]|\\.\\.\\.)/]\n  for (var i = 0; i < operators.length; i++) if (!operators[i]) operators.splice(i--, 1)\n\n  var hangingIndent = parserConf.hangingIndent;\n\n  var myKeywords = commonKeywords, myBuiltins = commonBuiltins;\n  if (parserConf.extra_keywords != undefined)\n    myKeywords = myKeywords.concat(parserConf.extra_keywords);\n\n  if (parserConf.extra_builtins != undefined)\n    myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n\n  var py3 = !(parserConf.version && Number(parserConf.version) < 3)\n  if (py3) {\n    // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n    var identifiers = parserConf.identifiers|| /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n    myKeywords = myKeywords.concat([\"nonlocal\", \"None\", \"aiter\", \"anext\", \"async\", \"await\", \"breakpoint\", \"match\", \"case\"]);\n    myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n    var stringPrefixes = new RegExp(\"^(([rbuf]|(br)|(rb)|(fr)|(rf))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n  } else {\n    var identifiers = parserConf.identifiers|| /^[_A-Za-z][_A-Za-z0-9]*/;\n    myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n    myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\",\n                                    \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\",\n                                    \"unichr\", \"unicode\", \"xrange\", \"None\"]);\n    var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n  }\n  var keywords = wordRegexp(myKeywords);\n  var builtins = wordRegexp(myBuiltins);\n\n  // tokenizers\n  function tokenBase(stream, state) {\n    var sol = stream.sol() && state.lastToken != \"\\\\\"\n    if (sol) state.indent = stream.indentation()\n    // Handle scope changes\n    if (sol && top(state).type == \"py\") {\n      var scopeOffset = top(state).offset;\n      if (stream.eatSpace()) {\n        var lineOffset = stream.indentation();\n        if (lineOffset > scopeOffset)\n          pushPyScope(stream, state);\n        else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\")\n          state.errorToken = true;\n        return null;\n      } else {\n        var style = tokenBaseInner(stream, state);\n        if (scopeOffset > 0 && dedent(stream, state))\n          style += \" \" + ERRORCLASS;\n        return style;\n      }\n    }\n    return tokenBaseInner(stream, state);\n  }\n\n  function tokenBaseInner(stream, state, inFormat) {\n    if (stream.eatSpace()) return null;\n\n    // Handle Comments\n    if (!inFormat && stream.match(/^#.*/)) return \"comment\";\n\n    // Handle Number Literals\n    if (stream.match(/^[0-9\\.]/, false)) {\n      var floatLiteral = false;\n      // Floats\n      if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) { floatLiteral = true; }\n      if (stream.match(/^[\\d_]+\\.\\d*/)) { floatLiteral = true; }\n      if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n      if (floatLiteral) {\n        // Float literals may be \"imaginary\"\n        stream.eat(/J/i);\n        return \"number\";\n      }\n      // Integers\n      var intLiteral = false;\n      // Hex\n      if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true;\n      // Binary\n      if (stream.match(/^0b[01_]+/i)) intLiteral = true;\n      // Octal\n      if (stream.match(/^0o[0-7_]+/i)) intLiteral = true;\n      // Decimal\n      if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n        // Decimal literals may be \"imaginary\"\n        stream.eat(/J/i);\n        // TODO - Can you have imaginary longs?\n        intLiteral = true;\n      }\n      // Zero by itself with no other piece of number.\n      if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n      if (intLiteral) {\n        // Integer literals may be \"long\"\n        stream.eat(/L/i);\n        return \"number\";\n      }\n    }\n\n    // Handle Strings\n    if (stream.match(stringPrefixes)) {\n      var isFmtString = stream.current().toLowerCase().indexOf('f') !== -1;\n      if (!isFmtString) {\n        state.tokenize = tokenStringFactory(stream.current(), state.tokenize);\n        return state.tokenize(stream, state);\n      } else {\n        state.tokenize = formatStringFactory(stream.current(), state.tokenize);\n        return state.tokenize(stream, state);\n      }\n    }\n\n    for (var i = 0; i < operators.length; i++)\n      if (stream.match(operators[i])) return \"operator\"\n\n    if (stream.match(delimiters)) return \"punctuation\";\n\n    if (state.lastToken == \".\" && stream.match(identifiers))\n      return \"property\";\n\n    if (stream.match(keywords) || stream.match(wordOperators))\n      return \"keyword\";\n\n    if (stream.match(builtins))\n      return \"builtin\";\n\n    if (stream.match(/^(self|cls)\\b/))\n      return \"self\";\n\n    if (stream.match(identifiers)) {\n      if (state.lastToken == \"def\" || state.lastToken == \"class\")\n        return \"def\";\n      return \"variable\";\n    }\n\n    // Handle non-detected items\n    stream.next();\n    return inFormat ? null :ERRORCLASS;\n  }\n\n  function formatStringFactory(delimiter, tokenOuter) {\n    while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n      delimiter = delimiter.substr(1);\n\n    var singleline = delimiter.length == 1;\n    var OUTCLASS = \"string\";\n\n    function tokenNestedExpr(depth) {\n      return function(stream, state) {\n        var inner = tokenBaseInner(stream, state, true)\n        if (inner == \"punctuation\") {\n          if (stream.current() == \"{\") {\n            state.tokenize = tokenNestedExpr(depth + 1)\n          } else if (stream.current() == \"}\") {\n            if (depth > 1) state.tokenize = tokenNestedExpr(depth - 1)\n            else state.tokenize = tokenString\n          }\n        }\n        return inner\n      }\n    }\n\n    function tokenString(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^'\"\\{\\}\\\\]/);\n        if (stream.eat(\"\\\\\")) {\n          stream.next();\n          if (singleline && stream.eol())\n            return OUTCLASS;\n        } else if (stream.match(delimiter)) {\n          state.tokenize = tokenOuter;\n          return OUTCLASS;\n        } else if (stream.match('{{')) {\n          // ignore {{ in f-str\n          return OUTCLASS;\n        } else if (stream.match('{', false)) {\n          // switch to nested mode\n          state.tokenize = tokenNestedExpr(0)\n          if (stream.current()) return OUTCLASS;\n          else return state.tokenize(stream, state)\n        } else if (stream.match('}}')) {\n          return OUTCLASS;\n        } else if (stream.match('}')) {\n          // single } in f-string is an error\n          return ERRORCLASS;\n        } else {\n          stream.eat(/['\"]/);\n        }\n      }\n      if (singleline) {\n        if (parserConf.singleLineStringErrors)\n          return ERRORCLASS;\n        else\n          state.tokenize = tokenOuter;\n      }\n      return OUTCLASS;\n    }\n    tokenString.isString = true;\n    return tokenString;\n  }\n\n  function tokenStringFactory(delimiter, tokenOuter) {\n    while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n      delimiter = delimiter.substr(1);\n\n    var singleline = delimiter.length == 1;\n    var OUTCLASS = \"string\";\n\n    function tokenString(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^'\"\\\\]/);\n        if (stream.eat(\"\\\\\")) {\n          stream.next();\n          if (singleline && stream.eol())\n            return OUTCLASS;\n        } else if (stream.match(delimiter)) {\n          state.tokenize = tokenOuter;\n          return OUTCLASS;\n        } else {\n          stream.eat(/['\"]/);\n        }\n      }\n      if (singleline) {\n        if (parserConf.singleLineStringErrors)\n          return ERRORCLASS;\n        else\n          state.tokenize = tokenOuter;\n      }\n      return OUTCLASS;\n    }\n    tokenString.isString = true;\n    return tokenString;\n  }\n\n  function pushPyScope(stream, state) {\n    while (top(state).type != \"py\") state.scopes.pop()\n    state.scopes.push({offset: top(state).offset + stream.indentUnit,\n                       type: \"py\",\n                       align: null})\n  }\n\n  function pushBracketScope(stream, state, type) {\n    var align = stream.match(/^[\\s\\[\\{\\(]*(?:#|$)/, false) ? null : stream.column() + 1\n    state.scopes.push({offset: state.indent + (hangingIndent || stream.indentUnit),\n                       type: type,\n                       align: align})\n  }\n\n  function dedent(stream, state) {\n    var indented = stream.indentation();\n    while (state.scopes.length > 1 && top(state).offset > indented) {\n      if (top(state).type != \"py\") return true;\n      state.scopes.pop();\n    }\n    return top(state).offset != indented;\n  }\n\n  function tokenLexer(stream, state) {\n    if (stream.sol()) {\n      state.beginningOfLine = true;\n      state.dedent = false;\n    }\n\n    var style = state.tokenize(stream, state);\n    var current = stream.current();\n\n    // Handle decorators\n    if (state.beginningOfLine && current == \"@\")\n      return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n\n    if (/\\S/.test(current)) state.beginningOfLine = false;\n\n    if ((style == \"variable\" || style == \"builtin\")\n        && state.lastToken == \"meta\")\n      style = \"meta\";\n\n    // Handle scope changes.\n    if (current == \"pass\" || current == \"return\")\n      state.dedent = true;\n\n    if (current == \"lambda\") state.lambda = true;\n    if (current == \":\" && !state.lambda && top(state).type == \"py\" && stream.match(/^\\s*(?:#|$)/, false))\n      pushPyScope(stream, state);\n\n    if (current.length == 1 && !/string|comment/.test(style)) {\n      var delimiter_index = \"[({\".indexOf(current);\n      if (delimiter_index != -1)\n        pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n\n      delimiter_index = \"])}\".indexOf(current);\n      if (delimiter_index != -1) {\n        if (top(state).type == current) state.indent = state.scopes.pop().offset - (hangingIndent || stream.indentUnit)\n        else return ERRORCLASS;\n      }\n    }\n    if (state.dedent && stream.eol() && top(state).type == \"py\" && state.scopes.length > 1)\n      state.scopes.pop();\n\n    return style;\n  }\n\n  return {\n    name: \"python\",\n\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        scopes: [{offset: 0, type: \"py\", align: null}],\n        indent: 0,\n        lastToken: null,\n        lambda: false,\n        dedent: 0\n      };\n    },\n\n    token: function(stream, state) {\n      var addErr = state.errorToken;\n      if (addErr) state.errorToken = false;\n      var style = tokenLexer(stream, state);\n\n      if (style && style != \"comment\")\n        state.lastToken = (style == \"keyword\" || style == \"punctuation\") ? stream.current() : style;\n      if (style == \"punctuation\") style = null;\n\n      if (stream.eol() && state.lambda)\n        state.lambda = false;\n      return addErr ? ERRORCLASS : style;\n    },\n\n    indent: function(state, textAfter, cx) {\n      if (state.tokenize != tokenBase)\n        return state.tokenize.isString ? null : 0;\n\n      var scope = top(state)\n      var closing = scope.type == textAfter.charAt(0) ||\n          scope.type == \"py\" && !state.dedent && /^(else:|elif |except |finally:)/.test(textAfter)\n      if (scope.align != null)\n        return scope.align - (closing ? 1 : 0)\n      else\n        return scope.offset - (closing ? hangingIndent || cx.unit : 0)\n    },\n\n    languageData: {\n      autocomplete: commonKeywords.concat(commonBuiltins).concat([\"exec\", \"print\"]),\n      indentOnInput: /^\\s*([\\}\\]\\)]|else:|elif |except |finally:)$/,\n      commentTokens: {line: \"#\"},\n      closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"'''\", '\"\"\"']}\n    }\n  };\n};\n\nvar words = function(str) { return str.split(\" \"); };\n\nexport const python = mkPython({})\n\nexport const cython = mkPython({\n  extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \"+\n                        \"extern gil include nogil property public \"+\n                        \"readonly struct union DEF IF ELIF ELSE\")\n})\n"],"names":["wordRegexp","words","RegExp","join","wordOperators","commonKeywords","commonBuiltins","top","state","scopes","length","mkPython","parserConf","ERRORCLASS","delimiters","singleDelimiters","operators","singleOperators","doubleOperators","doubleDelimiters","tripleDelimiters","i","splice","hangingIndent","myKeywords","myBuiltins","extra_keywords","undefined","concat","extra_builtins","py3","version","Number","identifiers","stringPrefixes","keywords","builtins","tokenBase","stream","sol","lastToken","indent","indentation","type","scopeOffset","offset","eatSpace","lineOffset","pushPyScope","dedent","peek","errorToken","style","tokenBaseInner","inFormat","match","floatLiteral","eat","intLiteral","isFmtString","current","toLowerCase","indexOf","tokenize","tokenStringFactory","formatStringFactory","next","delimiter","tokenOuter","charAt","substr","singleline","OUTCLASS","tokenNestedExpr","depth","inner","tokenString","eol","eatWhile","singleLineStringErrors","isString","pop","push","indentUnit","align","pushBracketScope","column","indented","tokenLexer","beginningOfLine","test","lambda","delimiter_index","slice","name","startState","token","addErr","textAfter","cx","scope","closing","unit","languageData","autocomplete","indentOnInput","commentTokens","line","closeBrackets","brackets","str","split","python","cython"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}