{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_octave_js.js","mappings":"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","sources":["./node_modules/@codemirror/legacy-modes/mode/octave.js"],"sourcesContent":["function wordRegexp(words) {\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n}\n\nvar singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/&|\\\\^~<>!@'\\\\\\\\]\");\nvar singleDelimiters = new RegExp('^[\\\\(\\\\[\\\\{\\\\},:=;\\\\.]');\nvar doubleOperators = new RegExp(\"^((==)|(~=)|(<=)|(>=)|(<<)|(>>)|(\\\\.[\\\\+\\\\-\\\\*/\\\\^\\\\\\\\]))\");\nvar doubleDelimiters = new RegExp(\"^((!=)|(\\\\+=)|(\\\\-=)|(\\\\*=)|(/=)|(&=)|(\\\\|=)|(\\\\^=))\");\nvar tripleDelimiters = new RegExp(\"^((>>=)|(<<=))\");\nvar expressionEnd = new RegExp(\"^[\\\\]\\\\)]\");\nvar identifiers = new RegExp(\"^[_A-Za-z\\xa1-\\uffff][_A-Za-z0-9\\xa1-\\uffff]*\");\n\nvar builtins = wordRegexp([\n  'error', 'eval', 'function', 'abs', 'acos', 'atan', 'asin', 'cos',\n  'cosh', 'exp', 'log', 'prod', 'sum', 'log10', 'max', 'min', 'sign', 'sin', 'sinh',\n  'sqrt', 'tan', 'reshape', 'break', 'zeros', 'default', 'margin', 'round', 'ones',\n  'rand', 'syn', 'ceil', 'floor', 'size', 'clear', 'zeros', 'eye', 'mean', 'std', 'cov',\n  'det', 'eig', 'inv', 'norm', 'rank', 'trace', 'expm', 'logm', 'sqrtm', 'linspace', 'plot',\n  'title', 'xlabel', 'ylabel', 'legend', 'text', 'grid', 'meshgrid', 'mesh', 'num2str',\n  'fft', 'ifft', 'arrayfun', 'cellfun', 'input', 'fliplr', 'flipud', 'ismember'\n]);\n\nvar keywords = wordRegexp([\n  'return', 'case', 'switch', 'else', 'elseif', 'end', 'endif', 'endfunction',\n  'if', 'otherwise', 'do', 'for', 'while', 'try', 'catch', 'classdef', 'properties', 'events',\n  'methods', 'global', 'persistent', 'endfor', 'endwhile', 'printf', 'sprintf', 'disp', 'until',\n  'continue', 'pkg'\n]);\n\n\n// tokenizers\nfunction tokenTranspose(stream, state) {\n  if (!stream.sol() && stream.peek() === '\\'') {\n    stream.next();\n    state.tokenize = tokenBase;\n    return 'operator';\n  }\n  state.tokenize = tokenBase;\n  return tokenBase(stream, state);\n}\n\n\nfunction tokenComment(stream, state) {\n  if (stream.match(/^.*%}/)) {\n    state.tokenize = tokenBase;\n    return 'comment';\n  };\n  stream.skipToEnd();\n  return 'comment';\n}\n\nfunction tokenBase(stream, state) {\n  // whitespaces\n  if (stream.eatSpace()) return null;\n\n  // Handle one line Comments\n  if (stream.match('%{')){\n    state.tokenize = tokenComment;\n    stream.skipToEnd();\n    return 'comment';\n  }\n\n  if (stream.match(/^[%#]/)){\n    stream.skipToEnd();\n    return 'comment';\n  }\n\n  // Handle Number Literals\n  if (stream.match(/^[0-9\\.+-]/, false)) {\n    if (stream.match(/^[+-]?0x[0-9a-fA-F]+[ij]?/)) {\n      stream.tokenize = tokenBase;\n      return 'number'; };\n    if (stream.match(/^[+-]?\\d*\\.\\d+([EeDd][+-]?\\d+)?[ij]?/)) { return 'number'; };\n    if (stream.match(/^[+-]?\\d+([EeDd][+-]?\\d+)?[ij]?/)) { return 'number'; };\n  }\n  if (stream.match(wordRegexp(['nan','NaN','inf','Inf']))) { return 'number'; };\n\n  // Handle Strings\n  var m = stream.match(/^\"(?:[^\"]|\"\")*(\"|$)/) || stream.match(/^'(?:[^']|'')*('|$)/)\n  if (m) { return m[1] ? 'string' : \"error\"; }\n\n  // Handle words\n  if (stream.match(keywords)) { return 'keyword'; } ;\n  if (stream.match(builtins)) { return 'builtin'; } ;\n  if (stream.match(identifiers)) { return 'variable'; } ;\n\n  if (stream.match(singleOperators) || stream.match(doubleOperators)) { return 'operator'; };\n  if (stream.match(singleDelimiters) || stream.match(doubleDelimiters) || stream.match(tripleDelimiters)) { return null; };\n\n  if (stream.match(expressionEnd)) {\n    state.tokenize = tokenTranspose;\n    return null;\n  };\n\n\n  // Handle non-detected items\n  stream.next();\n  return 'error';\n};\n\n\nexport const octave = {\n  name: \"octave\",\n\n  startState: function() {\n    return {\n      tokenize: tokenBase\n    };\n  },\n\n  token: function(stream, state) {\n    var style = state.tokenize(stream, state);\n    if (style === 'number' || style === 'variable'){\n      state.tokenize = tokenTranspose;\n    }\n    return style;\n  },\n\n  languageData: {\n    commentTokens: {line: \"%\"}\n  }\n};\n\n"],"names":["wordRegexp","words","RegExp","join","singleOperators","singleDelimiters","doubleOperators","doubleDelimiters","tripleDelimiters","expressionEnd","identifiers","builtins","keywords","tokenTranspose","stream","state","sol","peek","next","tokenize","tokenBase","tokenComment","match","skipToEnd","eatSpace","m","octave","name","startState","token","style","languageData","commentTokens","line"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}