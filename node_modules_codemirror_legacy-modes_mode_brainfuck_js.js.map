{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_brainfuck_js.js","mappings":";;;;;;;;;;;;;AAAA,IAAIA,OAAO,GAAG,UAAU,CAACC,KAAK,CAAC,EAAE,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,SAAS,GAAG;EACvBC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE,SAAAA,CAAA,EAAW;IACrB,OAAO;MACLC,WAAW,EAAE,KAAK;MAClBC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,KAAK,EAAE,SAAAA,CAASC,MAAM,EAAEC,KAAK,EAAE;IAC7B,IAAID,MAAM,CAACE,QAAQ,CAAC,CAAC,EAAE,OAAO,IAAI;IAClC,IAAGF,MAAM,CAACG,GAAG,CAAC,CAAC,EAAC;MACdF,KAAK,CAACN,WAAW,GAAG,KAAK;IAC3B;IACA,IAAIS,EAAE,GAAGJ,MAAM,CAACK,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACjC,IAAGhB,OAAO,CAACiB,OAAO,CAACH,EAAE,CAAC,KAAK,CAAC,CAAC,EAAC;MAC5B,IAAGH,KAAK,CAACN,WAAW,KAAK,IAAI,EAAC;QAC5B,IAAGK,MAAM,CAACQ,GAAG,CAAC,CAAC,EAAC;UACdP,KAAK,CAACN,WAAW,GAAG,KAAK;QAC3B;QACA,OAAO,SAAS;MAClB;MACA,IAAGS,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAC;QAC1B,IAAGA,EAAE,KAAK,GAAG,EAAC;UACZH,KAAK,CAACL,IAAI,EAAE;QACd,CAAC,MACG;UACFK,KAAK,CAACJ,KAAK,EAAE;QACf;QACA,OAAO,SAAS;MAClB,CAAC,MACI,IAAGO,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAC;QAC/B,OAAO,SAAS;MAClB,CAAC,MACI,IAAGA,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAC;QAC/B,OAAO,MAAM;MACf,CAAC,MACI,IAAGA,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAC;QAC/B,OAAO,KAAK;MACd;IACF,CAAC,MACG;MACFH,KAAK,CAACN,WAAW,GAAG,IAAI;MACxB,IAAGK,MAAM,CAACQ,GAAG,CAAC,CAAC,EAAC;QACdP,KAAK,CAACN,WAAW,GAAG,KAAK;MAC3B;MACA,OAAO,SAAS;IAClB;IACA,IAAGK,MAAM,CAACQ,GAAG,CAAC,CAAC,EAAC;MACdP,KAAK,CAACN,WAAW,GAAG,KAAK;IAC3B;EACF;AACF,CAAC,C","sources":["./node_modules/@codemirror/legacy-modes/mode/brainfuck.js"],"sourcesContent":["var reserve = \"><+-.,[]\".split(\"\");\n/*\n  comments can be either:\n  placed behind lines\n\n  +++    this is a comment\n\n  where reserved characters cannot be used\n  or in a loop\n  [\n  this is ok to use [ ] and stuff\n  ]\n  or preceded by #\n*/\nexport const brainfuck = {\n  name: \"brainfuck\",\n  startState: function() {\n    return {\n      commentLine: false,\n      left: 0,\n      right: 0,\n      commentLoop: false\n    }\n  },\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null\n    if(stream.sol()){\n      state.commentLine = false;\n    }\n    var ch = stream.next().toString();\n    if(reserve.indexOf(ch) !== -1){\n      if(state.commentLine === true){\n        if(stream.eol()){\n          state.commentLine = false;\n        }\n        return \"comment\";\n      }\n      if(ch === \"]\" || ch === \"[\"){\n        if(ch === \"[\"){\n          state.left++;\n        }\n        else{\n          state.right++;\n        }\n        return \"bracket\";\n      }\n      else if(ch === \"+\" || ch === \"-\"){\n        return \"keyword\";\n      }\n      else if(ch === \"<\" || ch === \">\"){\n        return \"atom\";\n      }\n      else if(ch === \".\" || ch === \",\"){\n        return \"def\";\n      }\n    }\n    else{\n      state.commentLine = true;\n      if(stream.eol()){\n        state.commentLine = false;\n      }\n      return \"comment\";\n    }\n    if(stream.eol()){\n      state.commentLine = false;\n    }\n  }\n};\n"],"names":["reserve","split","brainfuck","name","startState","commentLine","left","right","commentLoop","token","stream","state","eatSpace","sol","ch","next","toString","indexOf","eol"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}