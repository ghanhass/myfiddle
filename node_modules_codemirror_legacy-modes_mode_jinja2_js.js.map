{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_jinja2_js.js","mappings":"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","sources":["./node_modules/@codemirror/legacy-modes/mode/jinja2.js"],"sourcesContent":["var keywords = [\"and\", \"as\", \"block\", \"endblock\", \"by\", \"cycle\", \"debug\", \"else\", \"elif\",\n                \"extends\", \"filter\", \"endfilter\", \"firstof\", \"do\", \"for\",\n                \"endfor\", \"if\", \"endif\", \"ifchanged\", \"endifchanged\",\n                \"ifequal\", \"endifequal\", \"ifnotequal\", \"set\", \"raw\", \"endraw\",\n                \"endifnotequal\", \"in\", \"include\", \"load\", \"not\", \"now\", \"or\",\n                \"parsed\", \"regroup\", \"reversed\", \"spaceless\", \"call\", \"endcall\", \"macro\",\n                \"endmacro\", \"endspaceless\", \"ssi\", \"templatetag\", \"openblock\",\n                \"closeblock\", \"openvariable\", \"closevariable\", \"without\", \"context\",\n                \"openbrace\", \"closebrace\", \"opencomment\",\n                \"closecomment\", \"widthratio\", \"url\", \"with\", \"endwith\",\n                \"get_current_language\", \"trans\", \"endtrans\", \"noop\", \"blocktrans\",\n                \"endblocktrans\", \"get_available_languages\",\n                \"get_current_language_bidi\", \"pluralize\", \"autoescape\", \"endautoescape\"],\n    operator = /^[+\\-*&%=<>!?|~^]/,\n    sign = /^[:\\[\\(\\{]/,\n    atom = [\"true\", \"false\"],\n    number = /^(\\d[+\\-\\*\\/])?\\d+(\\.\\d+)?/;\n\nkeywords = new RegExp(\"((\" + keywords.join(\")|(\") + \"))\\\\b\");\natom = new RegExp(\"((\" + atom.join(\")|(\") + \"))\\\\b\");\n\nfunction tokenBase (stream, state) {\n  var ch = stream.peek();\n\n  //Comment\n  if (state.incomment) {\n    if(!stream.skipTo(\"#}\")) {\n      stream.skipToEnd();\n    } else {\n      stream.eatWhile(/\\#|}/);\n      state.incomment = false;\n    }\n    return \"comment\";\n    //Tag\n  } else if (state.intag) {\n    //After operator\n    if(state.operator) {\n      state.operator = false;\n      if(stream.match(atom)) {\n        return \"atom\";\n      }\n      if(stream.match(number)) {\n        return \"number\";\n      }\n    }\n    //After sign\n    if(state.sign) {\n      state.sign = false;\n      if(stream.match(atom)) {\n        return \"atom\";\n      }\n      if(stream.match(number)) {\n        return \"number\";\n      }\n    }\n\n    if(state.instring) {\n      if(ch == state.instring) {\n        state.instring = false;\n      }\n      stream.next();\n      return \"string\";\n    } else if(ch == \"'\" || ch == '\"') {\n      state.instring = ch;\n      stream.next();\n      return \"string\";\n    } else if (state.inbraces > 0 && ch ==\")\") {\n      stream.next()\n      state.inbraces--;\n    }\n    else if (ch == \"(\") {\n      stream.next()\n      state.inbraces++;\n    }\n    else if (state.inbrackets > 0 && ch ==\"]\") {\n      stream.next()\n      state.inbrackets--;\n    }\n    else if (ch == \"[\") {\n      stream.next()\n      state.inbrackets++;\n    } else if (!state.lineTag && (stream.match(state.intag + \"}\") || stream.eat(\"-\") && stream.match(state.intag + \"}\"))) {\n      state.intag = false;\n      return \"tag\";\n    } else if(stream.match(operator)) {\n      state.operator = true;\n      return \"operator\";\n    } else if(stream.match(sign)) {\n      state.sign = true;\n    } else {\n      if (stream.column() == 1 && state.lineTag && stream.match(keywords)) {\n        //allow nospace after tag before the keyword\n        return \"keyword\";\n      }\n      if(stream.eat(\" \") || stream.sol()) {\n        if(stream.match(keywords)) {\n          return \"keyword\";\n        }\n        if(stream.match(atom)) {\n          return \"atom\";\n        }\n        if(stream.match(number)) {\n          return \"number\";\n        }\n        if(stream.sol()) {\n          stream.next();\n        }\n      } else {\n        stream.next();\n      }\n\n    }\n    return \"variable\";\n  } else if (stream.eat(\"{\")) {\n    if (stream.eat(\"#\")) {\n      state.incomment = true;\n      if(!stream.skipTo(\"#}\")) {\n        stream.skipToEnd();\n      } else {\n        stream.eatWhile(/\\#|}/);\n        state.incomment = false;\n      }\n      return \"comment\";\n      //Open tag\n    } else if (ch = stream.eat(/\\{|%/)) {\n      //Cache close tag\n      state.intag = ch;\n      state.inbraces = 0;\n      state.inbrackets = 0;\n      if(ch == \"{\") {\n        state.intag = \"}\";\n      }\n      stream.eat(\"-\");\n      return \"tag\";\n    }\n    //Line statements\n  } else if (stream.eat('#')) {\n    if (stream.peek() == '#') {\n      stream.skipToEnd();\n      return \"comment\"\n    }\n    else if (!stream.eol()) {\n      state.intag = true;\n      state.lineTag = true;\n      state.inbraces = 0;\n      state.inbrackets = 0;\n      return \"tag\";\n    }\n  }\n  stream.next();\n};\n\nexport const jinja2 = {\n  name: \"jinja2\",\n  startState: function () {\n    return {tokenize: tokenBase, inbrackets: 0, inbraces: 0};\n  },\n  token: function(stream, state) {\n    var style = state.tokenize(stream, state);\n    if (stream.eol() && state.lineTag && !state.instring && state.inbraces == 0 && state.inbrackets == 0) {\n      //Close line statement at the EOL\n      state.intag = false\n      state.lineTag = false\n    }\n    return style;\n  },\n  languageData: {\n    commentTokens: {block: {open: \"{#\", close: \"#}\", line: \"##\"}}\n  }\n};\n"],"names":["keywords","operator","sign","atom","number","RegExp","join","tokenBase","stream","state","ch","peek","incomment","skipTo","skipToEnd","eatWhile","intag","match","instring","next","inbraces","inbrackets","lineTag","eat","column","sol","eol","jinja2","name","startState","tokenize","token","style","languageData","commentTokens","block","open","close","line"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}