{"version":3,"file":"default-node_modules_codemirror_legacy-modes_mode_javascript_js.js","mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,YAAYA,CAACC,YAAY,EAAE;EAClC,IAAIC,eAAe,GAAGD,YAAY,CAACC,eAAe;EAClD,IAAIC,UAAU,GAAGF,YAAY,CAACG,MAAM;EACpC,IAAIC,QAAQ,GAAGJ,YAAY,CAACK,IAAI,IAAIH,UAAU;EAC9C,IAAII,IAAI,GAAGN,YAAY,CAACO,UAAU;EAClC,IAAIC,MAAM,GAAGR,YAAY,CAACS,cAAc,IAAI,kBAAkB;;EAE9D;;EAEA,IAAIC,QAAQ,GAAG,YAAU;IACvB,SAASC,EAAEA,CAACC,IAAI,EAAE;MAAC,OAAO;QAACA,IAAI,EAAEA,IAAI;QAAEC,KAAK,EAAE;MAAS,CAAC;IAAC;IACzD,IAAIC,CAAC,GAAGH,EAAE,CAAC,WAAW,CAAC;MAAEI,CAAC,GAAGJ,EAAE,CAAC,WAAW,CAAC;MAAEK,CAAC,GAAGL,EAAE,CAAC,WAAW,CAAC;MAAEM,CAAC,GAAGN,EAAE,CAAC,WAAW,CAAC;IACtF,IAAIO,QAAQ,GAAGP,EAAE,CAAC,UAAU,CAAC;MAAEQ,IAAI,GAAG;QAACP,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAM,CAAC;IAEnE,OAAO;MACL,IAAI,EAAEF,EAAE,CAAC,IAAI,CAAC;MAAE,OAAO,EAAEG,CAAC;MAAE,MAAM,EAAEA,CAAC;MAAE,MAAM,EAAEC,CAAC;MAAE,IAAI,EAAEA,CAAC;MAAE,KAAK,EAAEA,CAAC;MAAE,SAAS,EAAEA,CAAC;MACjF,QAAQ,EAAEE,CAAC;MAAE,OAAO,EAAEA,CAAC;MAAE,UAAU,EAAEA,CAAC;MAAE,KAAK,EAAEN,EAAE,CAAC,KAAK,CAAC;MAAE,QAAQ,EAAEK,CAAC;MAAE,MAAM,EAAEA,CAAC;MAAE,OAAO,EAAEA,CAAC;MAC5F,UAAU,EAAEL,EAAE,CAAC,UAAU,CAAC;MAAE,KAAK,EAAEA,EAAE,CAAC,KAAK,CAAC;MAAE,OAAO,EAAEA,EAAE,CAAC,KAAK,CAAC;MAAE,KAAK,EAAEA,EAAE,CAAC,KAAK,CAAC;MAClF,UAAU,EAAEA,EAAE,CAAC,UAAU,CAAC;MAAE,OAAO,EAAEA,EAAE,CAAC,OAAO,CAAC;MAChD,KAAK,EAAEA,EAAE,CAAC,KAAK,CAAC;MAAE,QAAQ,EAAEA,EAAE,CAAC,QAAQ,CAAC;MAAE,MAAM,EAAEA,EAAE,CAAC,MAAM,CAAC;MAAE,SAAS,EAAEA,EAAE,CAAC,SAAS,CAAC;MACtF,IAAI,EAAEO,QAAQ;MAAE,QAAQ,EAAEA,QAAQ;MAAE,YAAY,EAAEA,QAAQ;MAC1D,MAAM,EAAEC,IAAI;MAAE,OAAO,EAAEA,IAAI;MAAE,MAAM,EAAEA,IAAI;MAAE,WAAW,EAAEA,IAAI;MAAE,KAAK,EAAEA,IAAI;MAAE,UAAU,EAAEA,IAAI;MAC3F,MAAM,EAAER,EAAE,CAAC,MAAM,CAAC;MAAE,OAAO,EAAEA,EAAE,CAAC,OAAO,CAAC;MAAE,OAAO,EAAEA,EAAE,CAAC,MAAM,CAAC;MAC7D,OAAO,EAAEK,CAAC;MAAE,QAAQ,EAAEL,EAAE,CAAC,QAAQ,CAAC;MAAE,QAAQ,EAAEA,EAAE,CAAC,QAAQ,CAAC;MAAE,SAAS,EAAEK,CAAC;MACxE,OAAO,EAAEA;IACX,CAAC;EACH,CAAC,CAAC,CAAC;EAEH,IAAII,cAAc,GAAG,mBAAmB;EACxC,IAAIC,eAAe,GAAG,uFAAuF;EAE7G,SAASC,UAAUA,CAACC,MAAM,EAAE;IAC1B,IAAIC,OAAO,GAAG,KAAK;MAAEC,IAAI;MAAEC,KAAK,GAAG,KAAK;IACxC,OAAO,CAACD,IAAI,GAAGF,MAAM,CAACE,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE;MACrC,IAAI,CAACD,OAAO,EAAE;QACZ,IAAIC,IAAI,IAAI,GAAG,IAAI,CAACC,KAAK,EAAE;QAC3B,IAAID,IAAI,IAAI,GAAG,EAAEC,KAAK,GAAG,IAAI,CAAC,KACzB,IAAIA,KAAK,IAAID,IAAI,IAAI,GAAG,EAAEC,KAAK,GAAG,KAAK;MAC9C;MACAF,OAAO,GAAG,CAACA,OAAO,IAAIC,IAAI,IAAI,IAAI;IACpC;EACF;;EAEA;EACA;EACA,IAAIb,IAAI,EAAEe,OAAO;EACjB,SAASC,GAAGA,CAACC,EAAE,EAAEhB,KAAK,EAAEiB,IAAI,EAAE;IAC5BlB,IAAI,GAAGiB,EAAE;IAAEF,OAAO,GAAGG,IAAI;IACzB,OAAOjB,KAAK;EACd;EACA,SAASkB,SAASA,CAACR,MAAM,EAAES,KAAK,EAAE;IAChC,IAAIC,EAAE,GAAGV,MAAM,CAACE,IAAI,CAAC,CAAC;IACtB,IAAIQ,EAAE,IAAI,GAAG,IAAIA,EAAE,IAAI,GAAG,EAAE;MAC1BD,KAAK,CAACE,QAAQ,GAAGC,WAAW,CAACF,EAAE,CAAC;MAChC,OAAOD,KAAK,CAACE,QAAQ,CAACX,MAAM,EAAES,KAAK,CAAC;IACtC,CAAC,MAAM,IAAIC,EAAE,IAAI,GAAG,IAAIV,MAAM,CAACa,KAAK,CAAC,gCAAgC,CAAC,EAAE;MACtE,OAAOR,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;IAChC,CAAC,MAAM,IAAIK,EAAE,IAAI,GAAG,IAAIV,MAAM,CAACa,KAAK,CAAC,IAAI,CAAC,EAAE;MAC1C,OAAOR,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;IAC9B,CAAC,MAAM,IAAI,oBAAoB,CAACS,IAAI,CAACJ,EAAE,CAAC,EAAE;MACxC,OAAOL,GAAG,CAACK,EAAE,CAAC;IAChB,CAAC,MAAM,IAAIA,EAAE,IAAI,GAAG,IAAIV,MAAM,CAACe,GAAG,CAAC,GAAG,CAAC,EAAE;MACvC,OAAOV,GAAG,CAAC,IAAI,EAAE,UAAU,CAAC;IAC9B,CAAC,MAAM,IAAIK,EAAE,IAAI,GAAG,IAAIV,MAAM,CAACa,KAAK,CAAC,uCAAuC,CAAC,EAAE;MAC7E,OAAOR,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;IAChC,CAAC,MAAM,IAAI,IAAI,CAACS,IAAI,CAACJ,EAAE,CAAC,EAAE;MACxBV,MAAM,CAACa,KAAK,CAAC,kDAAkD,CAAC;MAChE,OAAOR,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;IAChC,CAAC,MAAM,IAAIK,EAAE,IAAI,GAAG,EAAE;MACpB,IAAIV,MAAM,CAACe,GAAG,CAAC,GAAG,CAAC,EAAE;QACnBN,KAAK,CAACE,QAAQ,GAAGK,YAAY;QAC7B,OAAOA,YAAY,CAAChB,MAAM,EAAES,KAAK,CAAC;MACpC,CAAC,MAAM,IAAIT,MAAM,CAACe,GAAG,CAAC,GAAG,CAAC,EAAE;QAC1Bf,MAAM,CAACiB,SAAS,CAAC,CAAC;QAClB,OAAOZ,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;MAClC,CAAC,MAAM,IAAIa,iBAAiB,CAAClB,MAAM,EAAES,KAAK,EAAE,CAAC,CAAC,EAAE;QAC9CV,UAAU,CAACC,MAAM,CAAC;QAClBA,MAAM,CAACa,KAAK,CAAC,mCAAmC,CAAC;QACjD,OAAOR,GAAG,CAAC,QAAQ,EAAE,gBAAgB,CAAC;MACxC,CAAC,MAAM;QACLL,MAAM,CAACe,GAAG,CAAC,GAAG,CAAC;QACf,OAAOV,GAAG,CAAC,UAAU,EAAE,UAAU,EAAEL,MAAM,CAACmB,OAAO,CAAC,CAAC,CAAC;MACtD;IACF,CAAC,MAAM,IAAIT,EAAE,IAAI,GAAG,EAAE;MACpBD,KAAK,CAACE,QAAQ,GAAGS,UAAU;MAC3B,OAAOA,UAAU,CAACpB,MAAM,EAAES,KAAK,CAAC;IAClC,CAAC,MAAM,IAAIC,EAAE,IAAI,GAAG,IAAIV,MAAM,CAACqB,IAAI,CAAC,CAAC,IAAI,GAAG,EAAE;MAC5CrB,MAAM,CAACiB,SAAS,CAAC,CAAC;MAClB,OAAOZ,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC;IAC5B,CAAC,MAAM,IAAIK,EAAE,IAAI,GAAG,IAAIV,MAAM,CAACsB,QAAQ,CAACrC,MAAM,CAAC,EAAE;MAC/C,OAAOoB,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC;IACpC,CAAC,MAAM,IAAIK,EAAE,IAAI,GAAG,IAAIV,MAAM,CAACa,KAAK,CAAC,KAAK,CAAC,IAC/BH,EAAE,IAAI,GAAG,IAAIV,MAAM,CAACa,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAACC,IAAI,CAACd,MAAM,CAACuB,MAAM,CAACC,KAAK,CAAC,CAAC,EAAExB,MAAM,CAACyB,KAAK,CAAC,CAAE,EAAE;MAChGzB,MAAM,CAACiB,SAAS,CAAC,CAAC;MAClB,OAAOZ,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;IAClC,CAAC,MAAM,IAAIR,cAAc,CAACiB,IAAI,CAACJ,EAAE,CAAC,EAAE;MAClC,IAAIA,EAAE,IAAI,GAAG,IAAI,CAACD,KAAK,CAACiB,OAAO,IAAIjB,KAAK,CAACiB,OAAO,CAACrC,IAAI,IAAI,GAAG,EAAE;QAC5D,IAAIW,MAAM,CAACe,GAAG,CAAC,GAAG,CAAC,EAAE;UACnB,IAAIL,EAAE,IAAI,GAAG,IAAIA,EAAE,IAAI,GAAG,EAAEV,MAAM,CAACe,GAAG,CAAC,GAAG,CAAC;QAC7C,CAAC,MAAM,IAAI,aAAa,CAACD,IAAI,CAACJ,EAAE,CAAC,EAAE;UACjCV,MAAM,CAACe,GAAG,CAACL,EAAE,CAAC;UACd,IAAIA,EAAE,IAAI,GAAG,EAAEV,MAAM,CAACe,GAAG,CAACL,EAAE,CAAC;QAC/B;MACF;MACA,IAAIA,EAAE,IAAI,GAAG,IAAIV,MAAM,CAACe,GAAG,CAAC,GAAG,CAAC,EAAE,OAAOV,GAAG,CAAC,GAAG,CAAC;MACjD,OAAOA,GAAG,CAAC,UAAU,EAAE,UAAU,EAAEL,MAAM,CAACmB,OAAO,CAAC,CAAC,CAAC;IACtD,CAAC,MAAM,IAAIlC,MAAM,CAAC6B,IAAI,CAACJ,EAAE,CAAC,EAAE;MAC1BV,MAAM,CAACsB,QAAQ,CAACrC,MAAM,CAAC;MACvB,IAAI0C,IAAI,GAAG3B,MAAM,CAACmB,OAAO,CAAC,CAAC;MAC3B,IAAIV,KAAK,CAACmB,QAAQ,IAAI,GAAG,EAAE;QACzB,IAAIzC,QAAQ,CAAC0C,oBAAoB,CAACF,IAAI,CAAC,EAAE;UACvC,IAAIvC,EAAE,GAAGD,QAAQ,CAACwC,IAAI,CAAC;UACvB,OAAOtB,GAAG,CAACjB,EAAE,CAACC,IAAI,EAAED,EAAE,CAACE,KAAK,EAAEqC,IAAI,CAAC;QACrC;QACA,IAAIA,IAAI,IAAI,OAAO,IAAI3B,MAAM,CAACa,KAAK,CAAC,0CAA0C,EAAE,KAAK,CAAC,EACpF,OAAOR,GAAG,CAAC,OAAO,EAAE,SAAS,EAAEsB,IAAI,CAAC;MACxC;MACA,OAAOtB,GAAG,CAAC,UAAU,EAAE,UAAU,EAAEsB,IAAI,CAAC;IAC1C;EACF;EAEA,SAASf,WAAWA,CAACkB,KAAK,EAAE;IAC1B,OAAO,UAAS9B,MAAM,EAAES,KAAK,EAAE;MAC7B,IAAIR,OAAO,GAAG,KAAK;QAAEC,IAAI;MACzB,IAAIvB,UAAU,IAAIqB,MAAM,CAACqB,IAAI,CAAC,CAAC,IAAI,GAAG,IAAIrB,MAAM,CAACa,KAAK,CAACf,eAAe,CAAC,EAAC;QACtEW,KAAK,CAACE,QAAQ,GAAGH,SAAS;QAC1B,OAAOH,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC;MACtC;MACA,OAAO,CAACH,IAAI,GAAGF,MAAM,CAACE,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE;QACrC,IAAIA,IAAI,IAAI4B,KAAK,IAAI,CAAC7B,OAAO,EAAE;QAC/BA,OAAO,GAAG,CAACA,OAAO,IAAIC,IAAI,IAAI,IAAI;MACpC;MACA,IAAI,CAACD,OAAO,EAAEQ,KAAK,CAACE,QAAQ,GAAGH,SAAS;MACxC,OAAOH,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;IAChC,CAAC;EACH;EAEA,SAASW,YAAYA,CAAChB,MAAM,EAAES,KAAK,EAAE;IACnC,IAAIsB,QAAQ,GAAG,KAAK;MAAErB,EAAE;IACxB,OAAOA,EAAE,GAAGV,MAAM,CAACE,IAAI,CAAC,CAAC,EAAE;MACzB,IAAIQ,EAAE,IAAI,GAAG,IAAIqB,QAAQ,EAAE;QACzBtB,KAAK,CAACE,QAAQ,GAAGH,SAAS;QAC1B;MACF;MACAuB,QAAQ,GAAIrB,EAAE,IAAI,GAAI;IACxB;IACA,OAAOL,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;EAClC;EAEA,SAASe,UAAUA,CAACpB,MAAM,EAAES,KAAK,EAAE;IACjC,IAAIR,OAAO,GAAG,KAAK;MAAEC,IAAI;IACzB,OAAO,CAACA,IAAI,GAAGF,MAAM,CAACE,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE;MACrC,IAAI,CAACD,OAAO,KAAKC,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,IAAIF,MAAM,CAACe,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;QAC/DN,KAAK,CAACE,QAAQ,GAAGH,SAAS;QAC1B;MACF;MACAP,OAAO,GAAG,CAACA,OAAO,IAAIC,IAAI,IAAI,IAAI;IACpC;IACA,OAAOG,GAAG,CAAC,OAAO,EAAE,gBAAgB,EAAEL,MAAM,CAACmB,OAAO,CAAC,CAAC,CAAC;EACzD;EAEA,IAAIa,QAAQ,GAAG,QAAQ;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAASC,YAAYA,CAACjC,MAAM,EAAES,KAAK,EAAE;IACnC,IAAIA,KAAK,CAACyB,UAAU,EAAEzB,KAAK,CAACyB,UAAU,GAAG,IAAI;IAC7C,IAAIC,KAAK,GAAGnC,MAAM,CAACuB,MAAM,CAACa,OAAO,CAAC,IAAI,EAAEpC,MAAM,CAACyB,KAAK,CAAC;IACrD,IAAIU,KAAK,GAAG,CAAC,EAAE;IAEf,IAAIpD,IAAI,EAAE;MAAE;MACV,IAAIsD,CAAC,GAAG,4CAA4C,CAACC,IAAI,CAACtC,MAAM,CAACuB,MAAM,CAACC,KAAK,CAACxB,MAAM,CAACyB,KAAK,EAAEU,KAAK,CAAC,CAAC;MACnG,IAAIE,CAAC,EAAEF,KAAK,GAAGE,CAAC,CAACE,KAAK;IACxB;IAEA,IAAIC,KAAK,GAAG,CAAC;MAAEC,YAAY,GAAG,KAAK;IACnC,KAAK,IAAIC,GAAG,GAAGP,KAAK,GAAG,CAAC,EAAEO,GAAG,IAAI,CAAC,EAAE,EAAEA,GAAG,EAAE;MACzC,IAAIhC,EAAE,GAAGV,MAAM,CAACuB,MAAM,CAACoB,MAAM,CAACD,GAAG,CAAC;MAClC,IAAIE,OAAO,GAAGZ,QAAQ,CAACI,OAAO,CAAC1B,EAAE,CAAC;MAClC,IAAIkC,OAAO,IAAI,CAAC,IAAIA,OAAO,GAAG,CAAC,EAAE;QAC/B,IAAI,CAACJ,KAAK,EAAE;UAAE,EAAEE,GAAG;UAAE;QAAO;QAC5B,IAAI,EAAEF,KAAK,IAAI,CAAC,EAAE;UAAE,IAAI9B,EAAE,IAAI,GAAG,EAAE+B,YAAY,GAAG,IAAI;UAAE;QAAO;MACjE,CAAC,MAAM,IAAIG,OAAO,IAAI,CAAC,IAAIA,OAAO,GAAG,CAAC,EAAE;QACtC,EAAEJ,KAAK;MACT,CAAC,MAAM,IAAIvD,MAAM,CAAC6B,IAAI,CAACJ,EAAE,CAAC,EAAE;QAC1B+B,YAAY,GAAG,IAAI;MACrB,CAAC,MAAM,IAAI,SAAS,CAAC3B,IAAI,CAACJ,EAAE,CAAC,EAAE;QAC7B,QAAQ,EAAEgC,GAAG,EAAE;UACb,IAAIA,GAAG,IAAI,CAAC,EAAE;UACd,IAAIxC,IAAI,GAAGF,MAAM,CAACuB,MAAM,CAACoB,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC;UACxC,IAAIxC,IAAI,IAAIQ,EAAE,IAAIV,MAAM,CAACuB,MAAM,CAACoB,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE;YAAEA,GAAG,EAAE;YAAE;UAAM;QAC1E;MACF,CAAC,MAAM,IAAID,YAAY,IAAI,CAACD,KAAK,EAAE;QACjC,EAAEE,GAAG;QACL;MACF;IACF;IACA,IAAID,YAAY,IAAI,CAACD,KAAK,EAAE/B,KAAK,CAACyB,UAAU,GAAGQ,GAAG;EACpD;;EAEA;;EAEA,IAAIG,WAAW,GAAG;IAAC,MAAM,EAAE,IAAI;IAAE,QAAQ,EAAE,IAAI;IAAE,UAAU,EAAE,IAAI;IAAE,QAAQ,EAAE,IAAI;IAC9D,QAAQ,EAAE,IAAI;IAAE,MAAM,EAAE,IAAI;IAAE,QAAQ,EAAE,IAAI;IAAE,gBAAgB,EAAE;EAAI,CAAC;EAExF,SAASC,SAASA,CAACC,QAAQ,EAAEC,MAAM,EAAE3D,IAAI,EAAE4D,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC5D,IAAI,CAACJ,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC3D,IAAI,GAAGA,IAAI;IAChB,IAAI,CAAC6D,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAIF,KAAK,IAAI,IAAI,EAAE,IAAI,CAACA,KAAK,GAAGA,KAAK;EACvC;EAEA,SAASG,OAAOA,CAAC3C,KAAK,EAAE4C,OAAO,EAAE;IAC/B,KAAK,IAAIC,CAAC,GAAG7C,KAAK,CAAC8C,SAAS,EAAED,CAAC,EAAEA,CAAC,GAAGA,CAAC,CAACpD,IAAI,EACzC,IAAIoD,CAAC,CAACE,IAAI,IAAIH,OAAO,EAAE,OAAO,IAAI;IACpC,KAAK,IAAII,EAAE,GAAGhD,KAAK,CAACiD,OAAO,EAAED,EAAE,EAAEA,EAAE,GAAGA,EAAE,CAACP,IAAI,EAAE;MAC7C,KAAK,IAAII,CAAC,GAAGG,EAAE,CAACE,IAAI,EAAEL,CAAC,EAAEA,CAAC,GAAGA,CAAC,CAACpD,IAAI,EACjC,IAAIoD,CAAC,CAACE,IAAI,IAAIH,OAAO,EAAE,OAAO,IAAI;IACtC;EACF;EAEA,SAASO,OAAOA,CAACnD,KAAK,EAAEnB,KAAK,EAAED,IAAI,EAAEe,OAAO,EAAEJ,MAAM,EAAE;IACpD,IAAI6D,EAAE,GAAGpD,KAAK,CAACoD,EAAE;IACjB;IACA;IACAJ,EAAE,CAAChD,KAAK,GAAGA,KAAK;IAAEgD,EAAE,CAACzD,MAAM,GAAGA,MAAM;IAAEyD,EAAE,CAACK,MAAM,GAAG,IAAI;IAAEL,EAAE,CAACI,EAAE,GAAGA,EAAE;IAAEJ,EAAE,CAACnE,KAAK,GAAGA,KAAK;IAEpF,IAAI,CAACmB,KAAK,CAACiB,OAAO,CAACqC,cAAc,CAAC,OAAO,CAAC,EACxCtD,KAAK,CAACiB,OAAO,CAACuB,KAAK,GAAG,IAAI;IAE5B,OAAM,IAAI,EAAE;MACV,IAAIe,UAAU,GAAGH,EAAE,CAACI,MAAM,GAAGJ,EAAE,CAACK,GAAG,CAAC,CAAC,GAAGrF,QAAQ,GAAGsF,UAAU,GAAGC,SAAS;MACzE,IAAIJ,UAAU,CAAC3E,IAAI,EAAEe,OAAO,CAAC,EAAE;QAC7B,OAAMyD,EAAE,CAACI,MAAM,IAAIJ,EAAE,CAACA,EAAE,CAACI,MAAM,GAAG,CAAC,CAAC,CAACI,GAAG,EACtCR,EAAE,CAACK,GAAG,CAAC,CAAC,CAAC,CAAC;QACZ,IAAIT,EAAE,CAACK,MAAM,EAAE,OAAOL,EAAE,CAACK,MAAM;QAC/B,IAAIzE,IAAI,IAAI,UAAU,IAAI+D,OAAO,CAAC3C,KAAK,EAAEL,OAAO,CAAC,EAAE,OAAO,oBAAoB;QAC9E,OAAOd,KAAK;MACd;IACF;EACF;;EAEA;;EAEA,IAAImE,EAAE,GAAG;IAAChD,KAAK,EAAE,IAAI;IAAEuC,MAAM,EAAE,IAAI;IAAEc,MAAM,EAAE,IAAI;IAAED,EAAE,EAAE;EAAI,CAAC;EAC5D,SAASS,IAAIA,CAAA,EAAG;IACd,KAAK,IAAIC,CAAC,GAAGC,SAAS,CAACP,MAAM,GAAG,CAAC,EAAEM,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAEd,EAAE,CAACI,EAAE,CAACY,IAAI,CAACD,SAAS,CAACD,CAAC,CAAC,CAAC;EAC1E;EACA,SAAShE,IAAIA,CAAA,EAAG;IACd+D,IAAI,CAACI,KAAK,CAAC,IAAI,EAAEF,SAAS,CAAC;IAC3B,OAAO,IAAI;EACb;EACA,SAASG,MAAMA,CAACnB,IAAI,EAAEoB,IAAI,EAAE;IAC1B,KAAK,IAAItB,CAAC,GAAGsB,IAAI,EAAEtB,CAAC,EAAEA,CAAC,GAAGA,CAAC,CAACpD,IAAI,EAAE,IAAIoD,CAAC,CAACE,IAAI,IAAIA,IAAI,EAAE,OAAO,IAAI;IACjE,OAAO,KAAK;EACd;EACA,SAASqB,QAAQA,CAACxB,OAAO,EAAE;IACzB,IAAI5C,KAAK,GAAGgD,EAAE,CAAChD,KAAK;IACpBgD,EAAE,CAACK,MAAM,GAAG,KAAK;IACjB,IAAIrD,KAAK,CAACiD,OAAO,EAAE;MACjB,IAAIjD,KAAK,CAACiB,OAAO,CAACyB,IAAI,IAAI,KAAK,IAAI1C,KAAK,CAACiD,OAAO,IAAIjD,KAAK,CAACiD,OAAO,CAACoB,KAAK,EAAE;QACvE;QACA,IAAIC,UAAU,GAAGC,iBAAiB,CAAC3B,OAAO,EAAE5C,KAAK,CAACiD,OAAO,CAAC;QAC1D,IAAIqB,UAAU,IAAI,IAAI,EAAE;UACtBtE,KAAK,CAACiD,OAAO,GAAGqB,UAAU;UAC1B;QACF;MACF,CAAC,MAAM,IAAI,CAACJ,MAAM,CAACtB,OAAO,EAAE5C,KAAK,CAAC8C,SAAS,CAAC,EAAE;QAC5C9C,KAAK,CAAC8C,SAAS,GAAG,IAAI0B,GAAG,CAAC5B,OAAO,EAAE5C,KAAK,CAAC8C,SAAS,CAAC;QACnD;MACF;IACF;IACA;IACA,IAAI9E,YAAY,CAACyG,UAAU,IAAI,CAACP,MAAM,CAACtB,OAAO,EAAE5C,KAAK,CAACyE,UAAU,CAAC,EAC/DzE,KAAK,CAACyE,UAAU,GAAG,IAAID,GAAG,CAAC5B,OAAO,EAAE5C,KAAK,CAACyE,UAAU,CAAC;EACzD;EACA,SAASF,iBAAiBA,CAAC3B,OAAO,EAAEK,OAAO,EAAE;IAC3C,IAAI,CAACA,OAAO,EAAE;MACZ,OAAO,IAAI;IACb,CAAC,MAAM,IAAIA,OAAO,CAACoB,KAAK,EAAE;MACxB,IAAIK,KAAK,GAAGH,iBAAiB,CAAC3B,OAAO,EAAEK,OAAO,CAACR,IAAI,CAAC;MACpD,IAAI,CAACiC,KAAK,EAAE,OAAO,IAAI;MACvB,IAAIA,KAAK,IAAIzB,OAAO,CAACR,IAAI,EAAE,OAAOQ,OAAO;MACzC,OAAO,IAAI0B,OAAO,CAACD,KAAK,EAAEzB,OAAO,CAACC,IAAI,EAAE,IAAI,CAAC;IAC/C,CAAC,MAAM,IAAIgB,MAAM,CAACtB,OAAO,EAAEK,OAAO,CAACC,IAAI,CAAC,EAAE;MACxC,OAAOD,OAAO;IAChB,CAAC,MAAM;MACL,OAAO,IAAI0B,OAAO,CAAC1B,OAAO,CAACR,IAAI,EAAE,IAAI+B,GAAG,CAAC5B,OAAO,EAAEK,OAAO,CAACC,IAAI,CAAC,EAAE,KAAK,CAAC;IACzE;EACF;EAEA,SAAS0B,UAAUA,CAAC7B,IAAI,EAAE;IACxB,OAAOA,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,SAAS,IAAIA,IAAI,IAAI,WAAW,IAAIA,IAAI,IAAI,UAAU,IAAIA,IAAI,IAAI,UAAU;EACjH;;EAEA;;EAEA,SAAS4B,OAAOA,CAAClC,IAAI,EAAES,IAAI,EAAEmB,KAAK,EAAE;IAAE,IAAI,CAAC5B,IAAI,GAAGA,IAAI;IAAE,IAAI,CAACS,IAAI,GAAGA,IAAI;IAAE,IAAI,CAACmB,KAAK,GAAGA,KAAK;EAAC;EAC7F,SAASG,GAAGA,CAACzB,IAAI,EAAEtD,IAAI,EAAE;IAAE,IAAI,CAACsD,IAAI,GAAGA,IAAI;IAAE,IAAI,CAACtD,IAAI,GAAGA,IAAI;EAAC;EAE9D,IAAIoF,WAAW,GAAG,IAAIL,GAAG,CAAC,MAAM,EAAE,IAAIA,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;EAC7D,SAASM,WAAWA,CAAA,EAAG;IACrB9B,EAAE,CAAChD,KAAK,CAACiD,OAAO,GAAG,IAAI0B,OAAO,CAAC3B,EAAE,CAAChD,KAAK,CAACiD,OAAO,EAAED,EAAE,CAAChD,KAAK,CAAC8C,SAAS,EAAE,KAAK,CAAC;IAC3EE,EAAE,CAAChD,KAAK,CAAC8C,SAAS,GAAG+B,WAAW;EAClC;EACA,SAASE,gBAAgBA,CAAA,EAAG;IAC1B/B,EAAE,CAAChD,KAAK,CAACiD,OAAO,GAAG,IAAI0B,OAAO,CAAC3B,EAAE,CAAChD,KAAK,CAACiD,OAAO,EAAED,EAAE,CAAChD,KAAK,CAAC8C,SAAS,EAAE,IAAI,CAAC;IAC1EE,EAAE,CAAChD,KAAK,CAAC8C,SAAS,GAAG,IAAI;EAC3B;EACAgC,WAAW,CAAClB,GAAG,GAAGmB,gBAAgB,CAACnB,GAAG,GAAG,IAAI;EAC7C,SAASoB,UAAUA,CAAA,EAAG;IACpBhC,EAAE,CAAChD,KAAK,CAAC8C,SAAS,GAAGE,EAAE,CAAChD,KAAK,CAACiD,OAAO,CAACC,IAAI;IAC1CF,EAAE,CAAChD,KAAK,CAACiD,OAAO,GAAGD,EAAE,CAAChD,KAAK,CAACiD,OAAO,CAACR,IAAI;EAC1C;EACAuC,UAAU,CAACpB,GAAG,GAAG,IAAI;EACrB,SAASqB,OAAOA,CAACrG,IAAI,EAAE8D,IAAI,EAAE;IAC3B,IAAIwC,MAAM,GAAG,SAAAA,CAAA,EAAW;MACtB,IAAIlF,KAAK,GAAGgD,EAAE,CAAChD,KAAK;QAAEmF,MAAM,GAAGnF,KAAK,CAACsC,QAAQ;MAC7C,IAAItC,KAAK,CAACiB,OAAO,CAACrC,IAAI,IAAI,MAAM,EAAEuG,MAAM,GAAGnF,KAAK,CAACiB,OAAO,CAACqB,QAAQ,CAAC,KAC7D,KAAK,IAAI8C,KAAK,GAAGpF,KAAK,CAACiB,OAAO,EAAEmE,KAAK,IAAIA,KAAK,CAACxG,IAAI,IAAI,GAAG,IAAIwG,KAAK,CAAC5C,KAAK,EAAE4C,KAAK,GAAGA,KAAK,CAAC3C,IAAI,EAChG0C,MAAM,GAAGC,KAAK,CAAC9C,QAAQ;MACzBtC,KAAK,CAACiB,OAAO,GAAG,IAAIoB,SAAS,CAAC8C,MAAM,EAAEnC,EAAE,CAACzD,MAAM,CAACgD,MAAM,CAAC,CAAC,EAAE3D,IAAI,EAAE,IAAI,EAAEoB,KAAK,CAACiB,OAAO,EAAEyB,IAAI,CAAC;IAC5F,CAAC;IACDwC,MAAM,CAACtB,GAAG,GAAG,IAAI;IACjB,OAAOsB,MAAM;EACf;EACA,SAASG,MAAMA,CAAA,EAAG;IAChB,IAAIrF,KAAK,GAAGgD,EAAE,CAAChD,KAAK;IACpB,IAAIA,KAAK,CAACiB,OAAO,CAACwB,IAAI,EAAE;MACtB,IAAIzC,KAAK,CAACiB,OAAO,CAACrC,IAAI,IAAI,GAAG,EAC3BoB,KAAK,CAACsC,QAAQ,GAAGtC,KAAK,CAACiB,OAAO,CAACqB,QAAQ;MACzCtC,KAAK,CAACiB,OAAO,GAAGjB,KAAK,CAACiB,OAAO,CAACwB,IAAI;IACpC;EACF;EACA4C,MAAM,CAACzB,GAAG,GAAG,IAAI;EAEjB,SAAS0B,MAAMA,CAACC,MAAM,EAAE;IACtB,SAASC,GAAGA,CAAC5G,IAAI,EAAE;MACjB,IAAIA,IAAI,IAAI2G,MAAM,EAAE,OAAOzF,IAAI,CAAC,CAAC,CAAC,KAC7B,IAAIyF,MAAM,IAAI,GAAG,IAAI3G,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOiF,IAAI,CAAC,CAAC,CAAC,KAC9E,OAAO/D,IAAI,CAAC0F,GAAG,CAAC;IACvB;IAAC;IACD,OAAOA,GAAG;EACZ;EAEA,SAAS7B,SAASA,CAAC/E,IAAI,EAAE6G,KAAK,EAAE;IAC9B,IAAI7G,IAAI,IAAI,KAAK,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,QAAQ,EAAEQ,KAAK,CAAC,EAAEC,MAAM,EAAEJ,MAAM,CAAC,GAAG,CAAC,EAAED,MAAM,CAAC;IACrF,IAAIzG,IAAI,IAAI,WAAW,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEU,SAAS,EAAEhC,SAAS,EAAE0B,MAAM,CAAC;IACnF,IAAIzG,IAAI,IAAI,WAAW,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEtB,SAAS,EAAE0B,MAAM,CAAC;IACxE,IAAIzG,IAAI,IAAI,WAAW,EAAE,OAAOoE,EAAE,CAACzD,MAAM,CAACa,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,GAAGN,IAAI,CAAC,CAAC,GAAGA,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEW,eAAe,EAAEN,MAAM,CAAC,GAAG,CAAC,EAAED,MAAM,CAAC;IACtI,IAAIzG,IAAI,IAAI,UAAU,EAAE,OAAOkB,IAAI,CAACwF,MAAM,CAAC,GAAG,CAAC,CAAC;IAChD,IAAI1G,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAEF,gBAAgB,EAAEV,KAAK,EAAEgB,MAAM,EAAEL,UAAU,CAAC;IACvF,IAAIpG,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC,CAAC;IAC9B,IAAIlB,IAAI,IAAI,IAAI,EAAE;MAChB,IAAIoE,EAAE,CAAChD,KAAK,CAACiB,OAAO,CAACyB,IAAI,IAAI,MAAM,IAAIM,EAAE,CAAChD,KAAK,CAACoD,EAAE,CAACJ,EAAE,CAAChD,KAAK,CAACoD,EAAE,CAACI,MAAM,GAAG,CAAC,CAAC,IAAI6B,MAAM,EAClFrC,EAAE,CAAChD,KAAK,CAACoD,EAAE,CAACK,GAAG,CAAC,CAAC,CAAC,CAAC;MACrB,OAAO3D,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEU,SAAS,EAAEhC,SAAS,EAAE0B,MAAM,EAAEQ,SAAS,CAAC;IACvE;IACA,IAAIjH,IAAI,IAAI,UAAU,EAAE,OAAOkB,IAAI,CAACgG,WAAW,CAAC;IAChD,IAAIlH,IAAI,IAAI,KAAK,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEF,gBAAgB,EAAEgB,OAAO,EAAEpC,SAAS,EAAEqB,UAAU,EAAEK,MAAM,CAAC;IACzG,IAAIzG,IAAI,IAAI,OAAO,IAAKN,IAAI,IAAImH,KAAK,IAAI,WAAY,EAAE;MACrDzC,EAAE,CAACK,MAAM,GAAG,SAAS;MACrB,OAAOvD,IAAI,CAACmF,OAAO,CAAC,MAAM,EAAErG,IAAI,IAAI,OAAO,GAAGA,IAAI,GAAG6G,KAAK,CAAC,EAAEO,SAAS,EAAEX,MAAM,CAAC;IACjF;IACA,IAAIzG,IAAI,IAAI,UAAU,EAAE;MACtB,IAAIN,IAAI,IAAImH,KAAK,IAAI,SAAS,EAAE;QAC9BzC,EAAE,CAACK,MAAM,GAAG,SAAS;QACrB,OAAOvD,IAAI,CAAC6D,SAAS,CAAC;MACxB,CAAC,MAAM,IAAIrF,IAAI,KAAKmH,KAAK,IAAI,QAAQ,IAAIA,KAAK,IAAI,MAAM,IAAIA,KAAK,IAAI,MAAM,CAAC,IAAIzC,EAAE,CAACzD,MAAM,CAACa,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;QAChH4C,EAAE,CAACK,MAAM,GAAG,SAAS;QACrB,IAAIoC,KAAK,IAAI,MAAM,EAAE,OAAO3F,IAAI,CAACmG,OAAO,CAAC,CAAC,KACrC,IAAIR,KAAK,IAAI,MAAM,EAAE,OAAO3F,IAAI,CAACoG,QAAQ,EAAEZ,MAAM,CAAC,UAAU,CAAC,EAAEa,QAAQ,EAAEb,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KACtF,OAAOxF,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEmB,OAAO,EAAEd,MAAM,CAAC,GAAG,CAAC,EAAEL,OAAO,CAAC,GAAG,CAAC,EAAEZ,KAAK,EAAEgB,MAAM,EAAEA,MAAM,CAAC;MAC9F,CAAC,MAAM,IAAI/G,IAAI,IAAImH,KAAK,IAAI,WAAW,EAAE;QACvCzC,EAAE,CAACK,MAAM,GAAG,SAAS;QACrB,OAAOvD,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEvB,UAAU,EAAEC,SAAS,EAAE0B,MAAM,CAAC;MAC7D,CAAC,MAAM,IAAI/G,IAAI,IAAImH,KAAK,IAAI,UAAU,EAAE;QACtCzC,EAAE,CAACK,MAAM,GAAG,SAAS;QACrB,OAAOvD,IAAI,CAAC6D,SAAS,CAAC;MACxB,CAAC,MAAM;QACL,OAAO7D,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEoB,UAAU,CAAC;MAC1C;IACF;IACA,IAAIzH,IAAI,IAAI,QAAQ,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEU,SAAS,EAAEL,MAAM,CAAC,GAAG,CAAC,EAAEL,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAEF,gBAAgB,EACjFV,KAAK,EAAEgB,MAAM,EAAEA,MAAM,EAAEL,UAAU,CAAC;IACpE,IAAIpG,IAAI,IAAI,MAAM,EAAE,OAAOkB,IAAI,CAAC4D,UAAU,EAAE4B,MAAM,CAAC,GAAG,CAAC,CAAC;IACxD,IAAI1G,IAAI,IAAI,SAAS,EAAE,OAAOkB,IAAI,CAACwF,MAAM,CAAC,GAAG,CAAC,CAAC;IAC/C,IAAI1G,IAAI,IAAI,OAAO,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEH,WAAW,EAAEwB,iBAAiB,EAAE3C,SAAS,EAAE0B,MAAM,EAAEL,UAAU,CAAC;IAChH,IAAIpG,IAAI,IAAI,QAAQ,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEsB,WAAW,EAAElB,MAAM,CAAC;IACvE,IAAIzG,IAAI,IAAI,QAAQ,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEuB,WAAW,EAAEnB,MAAM,CAAC;IACvE,IAAIzG,IAAI,IAAI,OAAO,EAAE,OAAOkB,IAAI,CAAC6D,SAAS,CAAC;IAC3C,IAAI8B,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAAC4D,UAAU,EAAEC,SAAS,CAAC;IACpD,OAAOE,IAAI,CAACoB,OAAO,CAAC,MAAM,CAAC,EAAEvB,UAAU,EAAE4B,MAAM,CAAC,GAAG,CAAC,EAAED,MAAM,CAAC;EAC/D;EACA,SAASiB,iBAAiBA,CAAC1H,IAAI,EAAE;IAC/B,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC2G,MAAM,EAAEnB,MAAM,CAAC,GAAG,CAAC,CAAC;EACnD;EACA,SAAS5B,UAAUA,CAAC9E,IAAI,EAAE6G,KAAK,EAAE;IAC/B,OAAOiB,eAAe,CAAC9H,IAAI,EAAE6G,KAAK,EAAE,KAAK,CAAC;EAC5C;EACA,SAASkB,iBAAiBA,CAAC/H,IAAI,EAAE6G,KAAK,EAAE;IACtC,OAAOiB,eAAe,CAAC9H,IAAI,EAAE6G,KAAK,EAAE,IAAI,CAAC;EAC3C;EACA,SAASE,SAASA,CAAC/G,IAAI,EAAE;IACvB,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOiF,IAAI,CAAC,CAAC;IAC9B,OAAO/D,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAEW,eAAe,EAAEN,MAAM,CAAC,GAAG,CAAC,EAAED,MAAM,CAAC;EACjE;EACA,SAASqB,eAAeA,CAAC9H,IAAI,EAAE6G,KAAK,EAAEmB,OAAO,EAAE;IAC7C,IAAI5D,EAAE,CAAChD,KAAK,CAACyB,UAAU,IAAIuB,EAAE,CAACzD,MAAM,CAACyB,KAAK,EAAE;MAC1C,IAAI6F,IAAI,GAAGD,OAAO,GAAGE,gBAAgB,GAAGC,SAAS;MACjD,IAAInI,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACgF,WAAW,EAAEG,OAAO,CAAC,GAAG,CAAC,EAAE+B,QAAQ,CAACP,MAAM,EAAE,GAAG,CAAC,EAAEpB,MAAM,EAAEC,MAAM,CAAC,IAAI,CAAC,EAAEuB,IAAI,EAAE7B,UAAU,CAAC,CAAC,KAClH,IAAIpG,IAAI,IAAI,UAAU,EAAE,OAAOiF,IAAI,CAACiB,WAAW,EAAEsB,OAAO,EAAEd,MAAM,CAAC,IAAI,CAAC,EAAEuB,IAAI,EAAE7B,UAAU,CAAC;IAChG;IAEA,IAAIiC,OAAO,GAAGL,OAAO,GAAGM,oBAAoB,GAAGC,kBAAkB;IACjE,IAAI/E,WAAW,CAACkB,cAAc,CAAC1E,IAAI,CAAC,EAAE,OAAOkB,IAAI,CAACmH,OAAO,CAAC;IAC1D,IAAIrI,IAAI,IAAI,UAAU,EAAE,OAAOkB,IAAI,CAACgG,WAAW,EAAEmB,OAAO,CAAC;IACzD,IAAIrI,IAAI,IAAI,OAAO,IAAKN,IAAI,IAAImH,KAAK,IAAI,WAAY,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAACmF,OAAO,CAAC,MAAM,CAAC,EAAEmC,eAAe,EAAE/B,MAAM,CAAC;IAAE;IACvI,IAAIzG,IAAI,IAAI,WAAW,IAAIA,IAAI,IAAI,OAAO,EAAE,OAAOkB,IAAI,CAAC8G,OAAO,GAAGD,iBAAiB,GAAGjD,UAAU,CAAC;IACjG,IAAI9E,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAEW,eAAe,EAAEN,MAAM,CAAC,GAAG,CAAC,EAAED,MAAM,EAAE4B,OAAO,CAAC;IACzF,IAAIrI,IAAI,IAAI,UAAU,IAAIA,IAAI,IAAI,QAAQ,EAAE,OAAOkB,IAAI,CAAC8G,OAAO,GAAGD,iBAAiB,GAAGjD,UAAU,CAAC;IACjG,IAAI9E,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAEoC,YAAY,EAAEhC,MAAM,EAAE4B,OAAO,CAAC;IACzE,IAAIrI,IAAI,IAAI,GAAG,EAAE,OAAO0I,YAAY,CAACC,OAAO,EAAE,GAAG,EAAE,IAAI,EAAEN,OAAO,CAAC;IACjE,IAAIrI,IAAI,IAAI,OAAO,EAAE,OAAOiF,IAAI,CAAC2D,KAAK,EAAEP,OAAO,CAAC;IAChD,IAAIrI,IAAI,IAAI,KAAK,EAAE,OAAOkB,IAAI,CAAC2H,WAAW,CAACb,OAAO,CAAC,CAAC;IACpD,OAAO9G,IAAI,CAAC,CAAC;EACf;EACA,SAAS8F,eAAeA,CAAChH,IAAI,EAAE;IAC7B,IAAIA,IAAI,CAACwB,KAAK,CAAC,YAAY,CAAC,EAAE,OAAOyD,IAAI,CAAC,CAAC;IAC3C,OAAOA,IAAI,CAACH,UAAU,CAAC;EACzB;EAEA,SAASyD,kBAAkBA,CAACvI,IAAI,EAAE6G,KAAK,EAAE;IACvC,IAAI7G,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC8F,eAAe,CAAC;IAC7C,OAAOsB,oBAAoB,CAACtI,IAAI,EAAE6G,KAAK,EAAE,KAAK,CAAC;EACjD;EACA,SAASyB,oBAAoBA,CAACtI,IAAI,EAAE6G,KAAK,EAAEmB,OAAO,EAAE;IAClD,IAAIc,EAAE,GAAGd,OAAO,IAAI,KAAK,GAAGO,kBAAkB,GAAGD,oBAAoB;IACrE,IAAIS,IAAI,GAAGf,OAAO,IAAI,KAAK,GAAGlD,UAAU,GAAGiD,iBAAiB;IAC5D,IAAI/H,IAAI,IAAI,IAAI,EAAE,OAAOkB,IAAI,CAACgF,WAAW,EAAE8B,OAAO,GAAGE,gBAAgB,GAAGC,SAAS,EAAE/B,UAAU,CAAC;IAC9F,IAAIpG,IAAI,IAAI,UAAU,EAAE;MACtB,IAAI,SAAS,CAACyB,IAAI,CAACoF,KAAK,CAAC,IAAInH,IAAI,IAAImH,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAAC4H,EAAE,CAAC;MAClE,IAAIpJ,IAAI,IAAImH,KAAK,IAAI,GAAG,IAAIzC,EAAE,CAACzD,MAAM,CAACa,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,EAC5E,OAAON,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAE+B,QAAQ,CAACb,QAAQ,EAAE,GAAG,CAAC,EAAEd,MAAM,EAAEqC,EAAE,CAAC;MAChE,IAAIjC,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAAC4D,UAAU,EAAE4B,MAAM,CAAC,GAAG,CAAC,EAAEqC,IAAI,CAAC;MAC5D,OAAO7H,IAAI,CAAC6H,IAAI,CAAC;IACnB;IACA,IAAI/I,IAAI,IAAI,OAAO,EAAE;MAAE,OAAOiF,IAAI,CAAC2D,KAAK,EAAEE,EAAE,CAAC;IAAE;IAC/C,IAAI9I,IAAI,IAAI,GAAG,EAAE;IACjB,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAO0I,YAAY,CAACX,iBAAiB,EAAE,GAAG,EAAE,MAAM,EAAEe,EAAE,CAAC;IACxE,IAAI9I,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC8H,QAAQ,EAAEF,EAAE,CAAC;IAC1C,IAAI9I,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAEW,eAAe,EAAEN,MAAM,CAAC,GAAG,CAAC,EAAED,MAAM,EAAEqC,EAAE,CAAC;IACpF,IAAIpJ,IAAI,IAAImH,KAAK,IAAI,IAAI,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAACqG,QAAQ,EAAEuB,EAAE,CAAC;IAAC;IAC9E,IAAI9I,IAAI,IAAI,QAAQ,EAAE;MACpBoE,EAAE,CAAChD,KAAK,CAACmB,QAAQ,GAAG6B,EAAE,CAACK,MAAM,GAAG,UAAU;MAC1CL,EAAE,CAACzD,MAAM,CAACsI,MAAM,CAAC7E,EAAE,CAACzD,MAAM,CAAC0C,GAAG,GAAGe,EAAE,CAACzD,MAAM,CAACyB,KAAK,GAAG,CAAC,CAAC;MACrD,OAAOlB,IAAI,CAAC6H,IAAI,CAAC;IACnB;EACF;EACA,SAASH,KAAKA,CAAC5I,IAAI,EAAE6G,KAAK,EAAE;IAC1B,IAAI7G,IAAI,IAAI,OAAO,EAAE,OAAOiF,IAAI,CAAC,CAAC;IAClC,IAAI4B,KAAK,CAAC1E,KAAK,CAAC0E,KAAK,CAACjC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE,OAAO1D,IAAI,CAAC0H,KAAK,CAAC;IAC7D,OAAO1H,IAAI,CAAC8F,eAAe,EAAEkC,aAAa,CAAC;EAC7C;EACA,SAASA,aAAaA,CAAClJ,IAAI,EAAE;IAC3B,IAAIA,IAAI,IAAI,GAAG,EAAE;MACfoE,EAAE,CAACK,MAAM,GAAG,gBAAgB;MAC5BL,EAAE,CAAChD,KAAK,CAACE,QAAQ,GAAGS,UAAU;MAC9B,OAAOb,IAAI,CAAC0H,KAAK,CAAC;IACpB;EACF;EACA,SAAST,SAASA,CAACnI,IAAI,EAAE;IACvB4C,YAAY,CAACwB,EAAE,CAACzD,MAAM,EAAEyD,EAAE,CAAChD,KAAK,CAAC;IACjC,OAAO6D,IAAI,CAACjF,IAAI,IAAI,GAAG,GAAG+E,SAAS,GAAGD,UAAU,CAAC;EACnD;EACA,SAASoD,gBAAgBA,CAAClI,IAAI,EAAE;IAC9B4C,YAAY,CAACwB,EAAE,CAACzD,MAAM,EAAEyD,EAAE,CAAChD,KAAK,CAAC;IACjC,OAAO6D,IAAI,CAACjF,IAAI,IAAI,GAAG,GAAG+E,SAAS,GAAGgD,iBAAiB,CAAC;EAC1D;EACA,SAASc,WAAWA,CAACb,OAAO,EAAE;IAC5B,OAAO,UAAShI,IAAI,EAAE;MACpB,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC8G,OAAO,GAAGmB,aAAa,GAAGC,MAAM,CAAC,CAAC,KAC1D,IAAIpJ,IAAI,IAAI,UAAU,IAAIN,IAAI,EAAE,OAAOwB,IAAI,CAACmI,aAAa,EAAErB,OAAO,GAAGM,oBAAoB,GAAGC,kBAAkB,CAAC,MAC/G,OAAOtD,IAAI,CAAC+C,OAAO,GAAGD,iBAAiB,GAAGjD,UAAU,CAAC;IAC5D,CAAC;EACH;EACA,SAASsE,MAAMA,CAACE,CAAC,EAAEzC,KAAK,EAAE;IACxB,IAAIA,KAAK,IAAI,QAAQ,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAACqH,kBAAkB,CAAC;IAAE;EACnF;EACA,SAASY,aAAaA,CAACG,CAAC,EAAEzC,KAAK,EAAE;IAC/B,IAAIA,KAAK,IAAI,QAAQ,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAACoH,oBAAoB,CAAC;IAAE;EACrF;EACA,SAASb,UAAUA,CAACzH,IAAI,EAAE;IACxB,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACuF,MAAM,EAAE1B,SAAS,CAAC;IAC/C,OAAOE,IAAI,CAACsD,kBAAkB,EAAE7B,MAAM,CAAC,GAAG,CAAC,EAAED,MAAM,CAAC;EACtD;EACA,SAASuC,QAAQA,CAAChJ,IAAI,EAAE;IACtB,IAAIA,IAAI,IAAI,UAAU,EAAE;MAACoE,EAAE,CAACK,MAAM,GAAG,UAAU;MAAE,OAAOvD,IAAI,CAAC,CAAC;IAAC;EACjE;EACA,SAASyH,OAAOA,CAAC3I,IAAI,EAAE6G,KAAK,EAAE;IAC5B,IAAI7G,IAAI,IAAI,OAAO,EAAE;MACnBoE,EAAE,CAACK,MAAM,GAAG,UAAU;MACtB,OAAOvD,IAAI,CAACyH,OAAO,CAAC;IACtB,CAAC,MAAM,IAAI3I,IAAI,IAAI,UAAU,IAAIoE,EAAE,CAACnE,KAAK,IAAI,SAAS,EAAE;MACtDmE,EAAE,CAACK,MAAM,GAAG,UAAU;MACtB,IAAIoC,KAAK,IAAI,KAAK,IAAIA,KAAK,IAAI,KAAK,EAAE,OAAO3F,IAAI,CAACqI,YAAY,CAAC;MAC/D,IAAIvG,CAAC,EAAC;MACN,IAAItD,IAAI,IAAI0E,EAAE,CAAChD,KAAK,CAACyB,UAAU,IAAIuB,EAAE,CAACzD,MAAM,CAACyB,KAAK,KAAKY,CAAC,GAAGoB,EAAE,CAACzD,MAAM,CAACa,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAC5F4C,EAAE,CAAChD,KAAK,CAACyB,UAAU,GAAGuB,EAAE,CAACzD,MAAM,CAAC0C,GAAG,GAAGL,CAAC,CAAC,CAAC,CAAC,CAAC4B,MAAM;MACnD,OAAO1D,IAAI,CAACsI,SAAS,CAAC;IACxB,CAAC,MAAM,IAAIxJ,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,QAAQ,EAAE;MAC/CoE,EAAE,CAACK,MAAM,GAAGnF,UAAU,GAAG,UAAU,GAAI8E,EAAE,CAACnE,KAAK,GAAG,WAAY;MAC9D,OAAOiB,IAAI,CAACsI,SAAS,CAAC;IACxB,CAAC,MAAM,IAAIxJ,IAAI,IAAI,gBAAgB,EAAE;MACnC,OAAOkB,IAAI,CAACsI,SAAS,CAAC;IACxB,CAAC,MAAM,IAAI9J,IAAI,IAAIsG,UAAU,CAACa,KAAK,CAAC,EAAE;MACpCzC,EAAE,CAACK,MAAM,GAAG,SAAS;MACrB,OAAOvD,IAAI,CAACyH,OAAO,CAAC;IACtB,CAAC,MAAM,IAAI3I,IAAI,IAAI,GAAG,EAAE;MACtB,OAAOkB,IAAI,CAAC4D,UAAU,EAAE2E,SAAS,EAAE/C,MAAM,CAAC,GAAG,CAAC,EAAE8C,SAAS,CAAC;IAC5D,CAAC,MAAM,IAAIxJ,IAAI,IAAI,QAAQ,EAAE;MAC3B,OAAOkB,IAAI,CAAC6G,iBAAiB,EAAEyB,SAAS,CAAC;IAC3C,CAAC,MAAM,IAAI3C,KAAK,IAAI,GAAG,EAAE;MACvBzC,EAAE,CAACK,MAAM,GAAG,SAAS;MACrB,OAAOvD,IAAI,CAACyH,OAAO,CAAC;IACtB,CAAC,MAAM,IAAI3I,IAAI,IAAI,GAAG,EAAE;MACtB,OAAOiF,IAAI,CAACuE,SAAS,CAAC;IACxB;EACF;EACA,SAASD,YAAYA,CAACvJ,IAAI,EAAE;IAC1B,IAAIA,IAAI,IAAI,UAAU,EAAE,OAAOiF,IAAI,CAACuE,SAAS,CAAC;IAC9CpF,EAAE,CAACK,MAAM,GAAG,UAAU;IACtB,OAAOvD,IAAI,CAACgG,WAAW,CAAC;EAC1B;EACA,SAASsC,SAASA,CAACxJ,IAAI,EAAE;IACvB,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC6G,iBAAiB,CAAC;IAC/C,IAAI/H,IAAI,IAAI,GAAG,EAAE,OAAOiF,IAAI,CAACiC,WAAW,CAAC;EAC3C;EACA,SAASkB,QAAQA,CAACsB,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAE;IAChC,SAASC,OAAOA,CAAC7J,IAAI,EAAE6G,KAAK,EAAE;MAC5B,IAAI+C,GAAG,GAAGA,GAAG,CAAC7G,OAAO,CAAC/C,IAAI,CAAC,GAAG,CAAC,CAAC,GAAGA,IAAI,IAAI,GAAG,EAAE;QAC9C,IAAIgF,GAAG,GAAGZ,EAAE,CAAChD,KAAK,CAACiB,OAAO;QAC1B,IAAI2C,GAAG,CAAClB,IAAI,IAAI,MAAM,EAAEkB,GAAG,CAAC3B,GAAG,GAAG,CAAC2B,GAAG,CAAC3B,GAAG,IAAI,CAAC,IAAI,CAAC;QACpD,OAAOnC,IAAI,CAAC,UAASlB,IAAI,EAAE6G,KAAK,EAAE;UAChC,IAAI7G,IAAI,IAAI2J,GAAG,IAAI9C,KAAK,IAAI8C,GAAG,EAAE,OAAO1E,IAAI,CAAC,CAAC;UAC9C,OAAOA,IAAI,CAACyE,IAAI,CAAC;QACnB,CAAC,EAAEG,OAAO,CAAC;MACb;MACA,IAAI7J,IAAI,IAAI2J,GAAG,IAAI9C,KAAK,IAAI8C,GAAG,EAAE,OAAOzI,IAAI,CAAC,CAAC;MAC9C,IAAI0I,GAAG,IAAIA,GAAG,CAAC7G,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,OAAOkC,IAAI,CAACyE,IAAI,CAAC;MACnD,OAAOxI,IAAI,CAACwF,MAAM,CAACiD,GAAG,CAAC,CAAC;IAC1B;IACA,OAAO,UAAS3J,IAAI,EAAE6G,KAAK,EAAE;MAC3B,IAAI7G,IAAI,IAAI2J,GAAG,IAAI9C,KAAK,IAAI8C,GAAG,EAAE,OAAOzI,IAAI,CAAC,CAAC;MAC9C,OAAO+D,IAAI,CAACyE,IAAI,EAAEG,OAAO,CAAC;IAC5B,CAAC;EACH;EACA,SAASnB,YAAYA,CAACgB,IAAI,EAAEC,GAAG,EAAE7F,IAAI,EAAE;IACrC,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACP,MAAM,EAAEM,CAAC,EAAE,EACvCd,EAAE,CAACI,EAAE,CAACY,IAAI,CAACD,SAAS,CAACD,CAAC,CAAC,CAAC;IAC1B,OAAOhE,IAAI,CAACmF,OAAO,CAACsD,GAAG,EAAE7F,IAAI,CAAC,EAAEsE,QAAQ,CAACsB,IAAI,EAAEC,GAAG,CAAC,EAAElD,MAAM,CAAC;EAC9D;EACA,SAAShB,KAAKA,CAACzF,IAAI,EAAE;IACnB,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC,CAAC;IAC9B,OAAO+D,IAAI,CAACF,SAAS,EAAEU,KAAK,CAAC;EAC/B;EACA,SAASgE,SAASA,CAACzJ,IAAI,EAAE6G,KAAK,EAAE;IAC9B,IAAInH,IAAI,EAAE;MACR,IAAIM,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACqG,QAAQ,CAAC;MACtC,IAAIV,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAACuI,SAAS,CAAC;IAC1C;EACF;EACA,SAASK,aAAaA,CAAC9J,IAAI,EAAE6G,KAAK,EAAE;IAClC,IAAInH,IAAI,KAAKM,IAAI,IAAI,GAAG,IAAI6G,KAAK,IAAI,IAAI,CAAC,EAAE,OAAO3F,IAAI,CAACqG,QAAQ,CAAC;EACnE;EACA,SAASwC,YAAYA,CAAC/J,IAAI,EAAE;IAC1B,IAAIN,IAAI,IAAIM,IAAI,IAAI,GAAG,EAAE;MACvB,IAAIoE,EAAE,CAACzD,MAAM,CAACa,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,EAAE,OAAON,IAAI,CAAC4D,UAAU,EAAEkF,IAAI,EAAEzC,QAAQ,CAAC,MAChF,OAAOrG,IAAI,CAACqG,QAAQ,CAAC;IAC5B;EACF;EACA,SAASyC,IAAIA,CAACV,CAAC,EAAEzC,KAAK,EAAE;IACtB,IAAIA,KAAK,IAAI,IAAI,EAAE;MACjBzC,EAAE,CAACK,MAAM,GAAG,SAAS;MACrB,OAAOvD,IAAI,CAAC,CAAC;IACf;EACF;EACA,SAASqG,QAAQA,CAACvH,IAAI,EAAE6G,KAAK,EAAE;IAC7B,IAAIA,KAAK,IAAI,OAAO,IAAIA,KAAK,IAAI,QAAQ,IAAIA,KAAK,IAAI,OAAO,IAAIA,KAAK,IAAI,UAAU,EAAE;MACpFzC,EAAE,CAACK,MAAM,GAAG,SAAS;MACrB,OAAOvD,IAAI,CAAC2F,KAAK,IAAI,QAAQ,GAAGkB,iBAAiB,GAAGR,QAAQ,CAAC;IAC/D;IACA,IAAIvH,IAAI,IAAI,UAAU,IAAI6G,KAAK,IAAI,MAAM,EAAE;MACzCzC,EAAE,CAACK,MAAM,GAAG,MAAM;MAClB,OAAOvD,IAAI,CAAC+I,SAAS,CAAC;IACxB;IACA,IAAIpD,KAAK,IAAI,GAAG,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAACqG,QAAQ,CAAC;IACvD,IAAIvH,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,MAAM,EAAE,OAAOkB,IAAI,CAAC+I,SAAS,CAAC;IAClF,IAAIjK,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAE+B,QAAQ,CAACb,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,EAAEd,MAAM,EAAEwD,SAAS,CAAC;IAC3F,IAAIjK,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAE6D,SAAS,EAAEzD,MAAM,EAAEwD,SAAS,CAAC;IACxE,IAAIjK,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACkH,QAAQ,CAAC+B,OAAO,EAAE,GAAG,CAAC,EAAEC,eAAe,EAAEH,SAAS,CAAC;IAChF,IAAIjK,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACkH,QAAQ,CAACb,QAAQ,EAAE,GAAG,CAAC,EAAEA,QAAQ,CAAC;IAC/D,IAAIvH,IAAI,IAAI,OAAO,EAAE,OAAOiF,IAAI,CAACoF,SAAS,EAAEJ,SAAS,CAAC;EACxD;EACA,SAASG,eAAeA,CAACpK,IAAI,EAAE;IAC7B,IAAIA,IAAI,IAAI,IAAI,EAAE,OAAOkB,IAAI,CAACqG,QAAQ,CAAC;EACzC;EACA,SAAS2C,SAASA,CAAClK,IAAI,EAAE;IACvB,IAAIA,IAAI,CAACwB,KAAK,CAAC,UAAU,CAAC,EAAE,OAAON,IAAI,CAAC,CAAC;IACzC,IAAIlB,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACgJ,SAAS,CAAC;IACtD,OAAOjF,IAAI,CAACqF,QAAQ,EAAEJ,SAAS,CAAC;EAClC;EACA,SAASI,QAAQA,CAACtK,IAAI,EAAE6G,KAAK,EAAE;IAC7B,IAAI7G,IAAI,IAAI,UAAU,IAAIoE,EAAE,CAACnE,KAAK,IAAI,SAAS,EAAE;MAC/CmE,EAAE,CAACK,MAAM,GAAG,UAAU;MACtB,OAAOvD,IAAI,CAACoJ,QAAQ,CAAC;IACvB,CAAC,MAAM,IAAIzD,KAAK,IAAI,GAAG,IAAI7G,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,QAAQ,EAAE;MAC/D,OAAOkB,IAAI,CAACoJ,QAAQ,CAAC;IACvB,CAAC,MAAM,IAAItK,IAAI,IAAI,GAAG,EAAE;MACtB,OAAOkB,IAAI,CAACqG,QAAQ,CAAC;IACvB,CAAC,MAAM,IAAIvH,IAAI,IAAI,GAAG,EAAE;MACtB,OAAOkB,IAAI,CAACwF,MAAM,CAAC,UAAU,CAAC,EAAEoD,aAAa,EAAEpD,MAAM,CAAC,GAAG,CAAC,EAAE4D,QAAQ,CAAC;IACvE,CAAC,MAAM,IAAItK,IAAI,IAAI,GAAG,EAAE;MACtB,OAAOiF,IAAI,CAACsF,YAAY,EAAED,QAAQ,CAAC;IACrC,CAAC,MAAM,IAAI,CAACtK,IAAI,CAACwB,KAAK,CAAC,YAAY,CAAC,EAAE;MACpC,OAAON,IAAI,CAAC,CAAC;IACf;EACF;EACA,SAASmJ,SAASA,CAACrK,IAAI,EAAE6G,KAAK,EAAE;IAC9B,IAAI7G,IAAI,IAAI,OAAO,EAAE,OAAOiF,IAAI,CAAC,CAAC;IAClC,IAAI4B,KAAK,CAAC1E,KAAK,CAAC0E,KAAK,CAACjC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE,OAAO1D,IAAI,CAACmJ,SAAS,CAAC;IACjE,OAAOnJ,IAAI,CAACqG,QAAQ,EAAEiD,iBAAiB,CAAC;EAC1C;EACA,SAASA,iBAAiBA,CAACxK,IAAI,EAAE;IAChC,IAAIA,IAAI,IAAI,GAAG,EAAE;MACdoE,EAAE,CAACK,MAAM,GAAG,gBAAgB;MAC5BL,EAAE,CAAChD,KAAK,CAACE,QAAQ,GAAGS,UAAU;MAC9B,OAAOb,IAAI,CAACmJ,SAAS,CAAC;IACxB;EACF;EACA,SAASF,OAAOA,CAACnK,IAAI,EAAE6G,KAAK,EAAE;IAC5B,IAAI7G,IAAI,IAAI,UAAU,IAAIoE,EAAE,CAACzD,MAAM,CAACa,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,IAAIqF,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAACiJ,OAAO,CAAC;IAClG,IAAInK,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACqG,QAAQ,CAAC;IACtC,IAAIvH,IAAI,IAAI,QAAQ,EAAE,OAAOkB,IAAI,CAACiJ,OAAO,CAAC;IAC1C,OAAOlF,IAAI,CAACsC,QAAQ,CAAC;EACvB;EACA,SAAS0C,SAASA,CAACjK,IAAI,EAAE6G,KAAK,EAAE;IAC9B,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAE+B,QAAQ,CAACb,QAAQ,EAAE,GAAG,CAAC,EAAEd,MAAM,EAAEwD,SAAS,CAAC;IACvF,IAAIpD,KAAK,IAAI,GAAG,IAAI7G,IAAI,IAAI,GAAG,IAAI6G,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAACqG,QAAQ,CAAC;IACtE,IAAIvH,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACqG,QAAQ,EAAEb,MAAM,CAAC,GAAG,CAAC,EAAEuD,SAAS,CAAC;IAC9D,IAAIpD,KAAK,IAAI,SAAS,IAAIA,KAAK,IAAI,YAAY,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAACqG,QAAQ,CAAC;IAAC;IAChG,IAAIV,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAACqG,QAAQ,EAAEb,MAAM,CAAC,GAAG,CAAC,EAAEa,QAAQ,CAAC;EAChE;EACA,SAAS8B,aAAaA,CAACC,CAAC,EAAEzC,KAAK,EAAE;IAC/B,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAE+B,QAAQ,CAACb,QAAQ,EAAE,GAAG,CAAC,EAAEd,MAAM,EAAEwD,SAAS,CAAC;EACzF;EACA,SAASQ,SAASA,CAAA,EAAG;IACnB,OAAOxF,IAAI,CAACsC,QAAQ,EAAEmD,gBAAgB,CAAC;EACzC;EACA,SAASA,gBAAgBA,CAACpB,CAAC,EAAEzC,KAAK,EAAE;IAClC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAACqG,QAAQ,CAAC;EACzC;EACA,SAAST,MAAMA,CAACwC,CAAC,EAAEzC,KAAK,EAAE;IACxB,IAAIA,KAAK,IAAI,MAAM,EAAE;MAACzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAACmG,OAAO,CAAC;IAAA;IACjE,OAAOpC,IAAI,CAACuC,OAAO,EAAEiC,SAAS,EAAEkB,WAAW,EAAEC,UAAU,CAAC;EAC1D;EACA,SAASpD,OAAOA,CAACxH,IAAI,EAAE6G,KAAK,EAAE;IAC5B,IAAInH,IAAI,IAAIsG,UAAU,CAACa,KAAK,CAAC,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAACsG,OAAO,CAAC;IAAC;IAC7E,IAAIxH,IAAI,IAAI,UAAU,EAAE;MAAEwF,QAAQ,CAACqB,KAAK,CAAC;MAAE,OAAO3F,IAAI,CAAC,CAAC;IAAE;IAC1D,IAAIlB,IAAI,IAAI,QAAQ,EAAE,OAAOkB,IAAI,CAACsG,OAAO,CAAC;IAC1C,IAAIxH,IAAI,IAAI,GAAG,EAAE,OAAO0I,YAAY,CAACmC,UAAU,EAAE,GAAG,CAAC;IACrD,IAAI7K,IAAI,IAAI,GAAG,EAAE,OAAO0I,YAAY,CAACoC,WAAW,EAAE,GAAG,CAAC;EACxD;EACA,SAASA,WAAWA,CAAC9K,IAAI,EAAE6G,KAAK,EAAE;IAChC,IAAI7G,IAAI,IAAI,UAAU,IAAI,CAACoE,EAAE,CAACzD,MAAM,CAACa,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;MAC1DgE,QAAQ,CAACqB,KAAK,CAAC;MACf,OAAO3F,IAAI,CAACyJ,WAAW,CAAC;IAC1B;IACA,IAAI3K,IAAI,IAAI,UAAU,EAAEoE,EAAE,CAACK,MAAM,GAAG,UAAU;IAC9C,IAAIzE,IAAI,IAAI,QAAQ,EAAE,OAAOkB,IAAI,CAACsG,OAAO,CAAC;IAC1C,IAAIxH,IAAI,IAAI,GAAG,EAAE,OAAOiF,IAAI,CAAC,CAAC;IAC9B,IAAIjF,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC4D,UAAU,EAAE4B,MAAM,CAAC,GAAG,CAAC,EAAEA,MAAM,CAAC,GAAG,CAAC,EAAEoE,WAAW,CAAC;IAC/E,OAAO5J,IAAI,CAACwF,MAAM,CAAC,GAAG,CAAC,EAAEc,OAAO,EAAEmD,WAAW,CAAC;EAChD;EACA,SAASE,UAAUA,CAAA,EAAG;IACpB,OAAO5F,IAAI,CAACuC,OAAO,EAAEmD,WAAW,CAAC;EACnC;EACA,SAASA,WAAWA,CAACI,KAAK,EAAElE,KAAK,EAAE;IACjC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAAC6G,iBAAiB,CAAC;EAClD;EACA,SAAS6C,UAAUA,CAAC5K,IAAI,EAAE;IACxB,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC4F,MAAM,CAAC;EACtC;EACA,SAASG,SAASA,CAACjH,IAAI,EAAE6G,KAAK,EAAE;IAC9B,IAAI7G,IAAI,IAAI,WAAW,IAAI6G,KAAK,IAAI,MAAM,EAAE,OAAO3F,IAAI,CAACmF,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,EAAEtB,SAAS,EAAE0B,MAAM,CAAC;EACrG;EACA,SAASU,OAAOA,CAACnH,IAAI,EAAE6G,KAAK,EAAE;IAC5B,IAAIA,KAAK,IAAI,OAAO,EAAE,OAAO3F,IAAI,CAACiG,OAAO,CAAC;IAC1C,IAAInH,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAE2E,QAAQ,EAAEvE,MAAM,CAAC;EAC9D;EACA,SAASuE,QAAQA,CAAChL,IAAI,EAAE;IACtB,IAAIA,IAAI,IAAI,KAAK,EAAE,OAAOkB,IAAI,CAAC4F,MAAM,EAAEmE,QAAQ,CAAC;IAChD,IAAIjL,IAAI,IAAI,UAAU,EAAE,OAAOkB,IAAI,CAAC+J,QAAQ,CAAC;IAC7C,OAAOhG,IAAI,CAACgG,QAAQ,CAAC;EACvB;EACA,SAASA,QAAQA,CAACjL,IAAI,EAAE6G,KAAK,EAAE;IAC7B,IAAI7G,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC,CAAC;IAC9B,IAAIlB,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC+J,QAAQ,CAAC;IACtC,IAAIpE,KAAK,IAAI,IAAI,IAAIA,KAAK,IAAI,IAAI,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAAC4D,UAAU,EAAEmG,QAAQ,CAAC;IAAC;IAC/F,OAAOhG,IAAI,CAACH,UAAU,EAAEmG,QAAQ,CAAC;EACnC;EACA,SAAS/D,WAAWA,CAAClH,IAAI,EAAE6G,KAAK,EAAE;IAChC,IAAIA,KAAK,IAAI,GAAG,EAAE;MAACzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAACgG,WAAW,CAAC;IAAC;IACnE,IAAIlH,IAAI,IAAI,UAAU,EAAE;MAACwF,QAAQ,CAACqB,KAAK,CAAC;MAAE,OAAO3F,IAAI,CAACgG,WAAW,CAAC;IAAC;IACnE,IAAIlH,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACgF,WAAW,EAAEG,OAAO,CAAC,GAAG,CAAC,EAAE+B,QAAQ,CAACP,MAAM,EAAE,GAAG,CAAC,EAAEpB,MAAM,EAAEsD,YAAY,EAAEhF,SAAS,EAAEqB,UAAU,CAAC;IAC3H,IAAI1G,IAAI,IAAImH,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAE+B,QAAQ,CAACqC,SAAS,EAAE,GAAG,CAAC,EAAEhE,MAAM,EAAES,WAAW,CAAC;EACpG;EACA,SAASqD,YAAYA,CAACvK,IAAI,EAAE6G,KAAK,EAAE;IACjC,IAAIA,KAAK,IAAI,GAAG,EAAE;MAACzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAACqJ,YAAY,CAAC;IAAC;IACpE,IAAIvK,IAAI,IAAI,UAAU,EAAE;MAACwF,QAAQ,CAACqB,KAAK,CAAC;MAAE,OAAO3F,IAAI,CAACqJ,YAAY,CAAC;IAAC;IACpE,IAAIvK,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACgF,WAAW,EAAEG,OAAO,CAAC,GAAG,CAAC,EAAE+B,QAAQ,CAACP,MAAM,EAAE,GAAG,CAAC,EAAEpB,MAAM,EAAEsD,YAAY,EAAE3D,UAAU,CAAC;IAChH,IAAI1G,IAAI,IAAImH,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAE+B,QAAQ,CAACqC,SAAS,EAAE,GAAG,CAAC,EAAEhE,MAAM,EAAE8D,YAAY,CAAC;EACrG;EACA,SAASjD,QAAQA,CAACtH,IAAI,EAAE6G,KAAK,EAAE;IAC7B,IAAI7G,IAAI,IAAI,SAAS,IAAIA,IAAI,IAAI,UAAU,EAAE;MAC3CoE,EAAE,CAACK,MAAM,GAAG,MAAM;MAClB,OAAOvD,IAAI,CAACoG,QAAQ,CAAC;IACvB,CAAC,MAAM,IAAIT,KAAK,IAAI,GAAG,EAAE;MACvB,OAAO3F,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAE+B,QAAQ,CAACqC,SAAS,EAAE,GAAG,CAAC,EAAEhE,MAAM,CAAC;IAC7D;EACF;EACA,SAASoB,MAAMA,CAAC7H,IAAI,EAAE6G,KAAK,EAAE;IAC3B,IAAIA,KAAK,IAAI,GAAG,EAAE3F,IAAI,CAAC4D,UAAU,EAAE+C,MAAM,CAAC;IAC1C,IAAI7H,IAAI,IAAI,QAAQ,EAAE,OAAOkB,IAAI,CAAC2G,MAAM,CAAC;IACzC,IAAInI,IAAI,IAAIsG,UAAU,CAACa,KAAK,CAAC,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAAC2G,MAAM,CAAC;IAAE;IAC7E,IAAInI,IAAI,IAAIM,IAAI,IAAI,MAAM,EAAE,OAAOkB,IAAI,CAACuI,SAAS,EAAEkB,WAAW,CAAC;IAC/D,OAAO1F,IAAI,CAACuC,OAAO,EAAEiC,SAAS,EAAEkB,WAAW,CAAC;EAC9C;EACA,SAASnC,eAAeA,CAACxI,IAAI,EAAE6G,KAAK,EAAE;IACpC;IACA,IAAI7G,IAAI,IAAI,UAAU,EAAE,OAAOoH,SAAS,CAACpH,IAAI,EAAE6G,KAAK,CAAC;IACrD,OAAOqE,cAAc,CAAClL,IAAI,EAAE6G,KAAK,CAAC;EACpC;EACA,SAASO,SAASA,CAACpH,IAAI,EAAE6G,KAAK,EAAE;IAC9B,IAAI7G,IAAI,IAAI,UAAU,EAAE;MAACwF,QAAQ,CAACqB,KAAK,CAAC;MAAE,OAAO3F,IAAI,CAACgK,cAAc,CAAC;IAAC;EACxE;EACA,SAASA,cAAcA,CAAClL,IAAI,EAAE6G,KAAK,EAAE;IACnC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAE+B,QAAQ,CAACqC,SAAS,EAAE,GAAG,CAAC,EAAEhE,MAAM,EAAEyE,cAAc,CAAC;IAC7F,IAAIrE,KAAK,IAAI,SAAS,IAAIA,KAAK,IAAI,YAAY,IAAKnH,IAAI,IAAIM,IAAI,IAAI,GAAI,EAAE;MACxE,IAAI6G,KAAK,IAAI,YAAY,EAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAChD,OAAOvD,IAAI,CAACxB,IAAI,GAAG6H,QAAQ,GAAGzC,UAAU,EAAEoG,cAAc,CAAC;IAC3D;IACA,IAAIlL,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACmF,OAAO,CAAC,GAAG,CAAC,EAAE8E,SAAS,EAAE1E,MAAM,CAAC;EAC/D;EACA,SAAS0E,SAASA,CAACnL,IAAI,EAAE6G,KAAK,EAAE;IAC9B,IAAI7G,IAAI,IAAI,OAAO,IACdA,IAAI,IAAI,UAAU,KACjB6G,KAAK,IAAI,QAAQ,IAAIA,KAAK,IAAI,KAAK,IAAIA,KAAK,IAAI,KAAK,IAAKnH,IAAI,IAAIsG,UAAU,CAACa,KAAK,CAAE,CAAC,IACtFzC,EAAE,CAACzD,MAAM,CAACa,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAE,EAAE;MACtD4C,EAAE,CAACK,MAAM,GAAG,SAAS;MACrB,OAAOvD,IAAI,CAACiK,SAAS,CAAC;IACxB;IACA,IAAInL,IAAI,IAAI,UAAU,IAAIoE,EAAE,CAACnE,KAAK,IAAI,SAAS,EAAE;MAC/CmE,EAAE,CAACK,MAAM,GAAG,UAAU;MACtB,OAAOvD,IAAI,CAACkK,UAAU,EAAED,SAAS,CAAC;IACpC;IACA,IAAInL,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,QAAQ,EAAE,OAAOkB,IAAI,CAACkK,UAAU,EAAED,SAAS,CAAC;IAC5E,IAAInL,IAAI,IAAI,GAAG,EACb,OAAOkB,IAAI,CAAC4D,UAAU,EAAE2E,SAAS,EAAE/C,MAAM,CAAC,GAAG,CAAC,EAAE0E,UAAU,EAAED,SAAS,CAAC;IACxE,IAAItE,KAAK,IAAI,GAAG,EAAE;MAChBzC,EAAE,CAACK,MAAM,GAAG,SAAS;MACrB,OAAOvD,IAAI,CAACiK,SAAS,CAAC;IACxB;IACA,IAAIzL,IAAI,IAAIM,IAAI,IAAI,GAAG,EAAE,OAAOiF,IAAI,CAACsF,YAAY,EAAEY,SAAS,CAAC;IAC7D,IAAInL,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACiK,SAAS,CAAC;IACtD,IAAInL,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC,CAAC;IAC9B,IAAI2F,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAAC4D,UAAU,EAAEqG,SAAS,CAAC;EACtD;EACA,SAASC,UAAUA,CAACpL,IAAI,EAAE6G,KAAK,EAAE;IAC/B,IAAIA,KAAK,IAAI,GAAG,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAACkK,UAAU,CAAC;IACzD,IAAIpL,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACqG,QAAQ,EAAEoD,WAAW,CAAC;IACnD,IAAI9D,KAAK,IAAI,GAAG,EAAE,OAAO3F,IAAI,CAAC6G,iBAAiB,CAAC;IAChD,IAAI1D,OAAO,GAAGD,EAAE,CAAChD,KAAK,CAACiB,OAAO,CAACwB,IAAI;MAAEwH,WAAW,GAAGhH,OAAO,IAAIA,OAAO,CAACP,IAAI,IAAI,WAAW;IACzF,OAAOmB,IAAI,CAACoG,WAAW,GAAGd,YAAY,GAAGrD,WAAW,CAAC;EACvD;EACA,SAASS,WAAWA,CAAC3H,IAAI,EAAE6G,KAAK,EAAE;IAChC,IAAIA,KAAK,IAAI,GAAG,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAACoK,SAAS,EAAE5E,MAAM,CAAC,GAAG,CAAC,CAAC;IAAE;IAChF,IAAIG,KAAK,IAAI,SAAS,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAAC4D,UAAU,EAAE4B,MAAM,CAAC,GAAG,CAAC,CAAC;IAAE;IACvF,IAAI1G,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACkH,QAAQ,CAACmD,WAAW,EAAE,GAAG,CAAC,EAAED,SAAS,EAAE5E,MAAM,CAAC,GAAG,CAAC,CAAC;IAChF,OAAOzB,IAAI,CAACF,SAAS,CAAC;EACxB;EACA,SAASwG,WAAWA,CAACvL,IAAI,EAAE6G,KAAK,EAAE;IAChC,IAAIA,KAAK,IAAI,IAAI,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAACwF,MAAM,CAAC,UAAU,CAAC,CAAC;IAAE;IAC7E,IAAI1G,IAAI,IAAI,UAAU,EAAE,OAAOiF,IAAI,CAAC8C,iBAAiB,EAAEwD,WAAW,CAAC;EACrE;EACA,SAAS3D,WAAWA,CAAC5H,IAAI,EAAE;IACzB,IAAIA,IAAI,IAAI,QAAQ,EAAE,OAAOkB,IAAI,CAAC,CAAC;IACnC,IAAIlB,IAAI,IAAI,GAAG,EAAE,OAAOiF,IAAI,CAACH,UAAU,CAAC;IACxC,IAAI9E,IAAI,IAAI,GAAG,EAAE,OAAOiF,IAAI,CAACsD,kBAAkB,CAAC;IAChD,OAAOtD,IAAI,CAACuG,UAAU,EAAEC,gBAAgB,EAAEH,SAAS,CAAC;EACtD;EACA,SAASE,UAAUA,CAACxL,IAAI,EAAE6G,KAAK,EAAE;IAC/B,IAAI7G,IAAI,IAAI,GAAG,EAAE,OAAO0I,YAAY,CAAC8C,UAAU,EAAE,GAAG,CAAC;IACrD,IAAIxL,IAAI,IAAI,UAAU,EAAEwF,QAAQ,CAACqB,KAAK,CAAC;IACvC,IAAIA,KAAK,IAAI,GAAG,EAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;IACvC,OAAOvD,IAAI,CAACwK,OAAO,CAAC;EACtB;EACA,SAASD,gBAAgBA,CAACzL,IAAI,EAAE;IAC9B,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAACsK,UAAU,EAAEC,gBAAgB,CAAC;EAC5D;EACA,SAASC,OAAOA,CAACX,KAAK,EAAElE,KAAK,EAAE;IAC7B,IAAIA,KAAK,IAAI,IAAI,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAACsK,UAAU,CAAC;IAAE;EACvE;EACA,SAASF,SAASA,CAACP,KAAK,EAAElE,KAAK,EAAE;IAC/B,IAAIA,KAAK,IAAI,MAAM,EAAE;MAAEzC,EAAE,CAACK,MAAM,GAAG,SAAS;MAAE,OAAOvD,IAAI,CAAC4D,UAAU,CAAC;IAAE;EACzE;EACA,SAAS2D,YAAYA,CAACzI,IAAI,EAAE;IAC1B,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOkB,IAAI,CAAC,CAAC;IAC9B,OAAO+D,IAAI,CAACmD,QAAQ,CAACL,iBAAiB,EAAE,GAAG,CAAC,CAAC;EAC/C;EACA,SAASV,OAAOA,CAAA,EAAG;IACjB,OAAOpC,IAAI,CAACoB,OAAO,CAAC,MAAM,CAAC,EAAEmB,OAAO,EAAEd,MAAM,CAAC,GAAG,CAAC,EAAEL,OAAO,CAAC,GAAG,CAAC,EAAE+B,QAAQ,CAACuD,UAAU,EAAE,GAAG,CAAC,EAAElF,MAAM,EAAEA,MAAM,CAAC;EAC7G;EACA,SAASkF,UAAUA,CAAA,EAAG;IACpB,OAAO1G,IAAI,CAACuC,OAAO,EAAEmD,WAAW,CAAC;EACnC;EAEA,SAASiB,oBAAoBA,CAACxK,KAAK,EAAEyK,SAAS,EAAE;IAC9C,OAAOzK,KAAK,CAACmB,QAAQ,IAAI,UAAU,IAAInB,KAAK,CAACmB,QAAQ,IAAI,GAAG,IAC1D/B,cAAc,CAACiB,IAAI,CAACoK,SAAS,CAACvI,MAAM,CAAC,CAAC,CAAC,CAAC,IACxC,MAAM,CAAC7B,IAAI,CAACoK,SAAS,CAACvI,MAAM,CAAC,CAAC,CAAC,CAAC;EACpC;EAEA,SAASzB,iBAAiBA,CAAClB,MAAM,EAAES,KAAK,EAAE6H,MAAM,EAAE;IAChD,OAAO7H,KAAK,CAACE,QAAQ,IAAIH,SAAS,IAChC,gFAAgF,CAACM,IAAI,CAACL,KAAK,CAACmB,QAAQ,CAAC,IACpGnB,KAAK,CAACmB,QAAQ,IAAI,OAAO,IAAI,QAAQ,CAACd,IAAI,CAACd,MAAM,CAACuB,MAAM,CAACC,KAAK,CAAC,CAAC,EAAExB,MAAM,CAAC0C,GAAG,IAAI4F,MAAM,IAAI,CAAC,CAAC,CAAC,CAAE;EACpG;;EAEA;;EAEA,OAAO;IACL9E,IAAI,EAAE/E,YAAY,CAAC+E,IAAI;IAEvB2H,UAAU,EAAE,SAAAA,CAASC,UAAU,EAAE;MAC/B,IAAI3K,KAAK,GAAG;QACVE,QAAQ,EAAEH,SAAS;QACnBoB,QAAQ,EAAE,KAAK;QACfiC,EAAE,EAAE,EAAE;QACNnC,OAAO,EAAE,IAAIoB,SAAS,CAAC,CAACsI,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC;QACtD7H,SAAS,EAAE9E,YAAY,CAAC8E,SAAS;QACjCG,OAAO,EAAEjF,YAAY,CAAC8E,SAAS,IAAI,IAAI6B,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;QACjErC,QAAQ,EAAE;MACZ,CAAC;MACD,IAAItE,YAAY,CAACyG,UAAU,IAAI,OAAOzG,YAAY,CAACyG,UAAU,IAAI,QAAQ,EACvEzE,KAAK,CAACyE,UAAU,GAAGzG,YAAY,CAACyG,UAAU;MAC5C,OAAOzE,KAAK;IACd,CAAC;IAED4K,KAAK,EAAE,SAAAA,CAASrL,MAAM,EAAES,KAAK,EAAE;MAC7B,IAAIT,MAAM,CAACsL,GAAG,CAAC,CAAC,EAAE;QAChB,IAAI,CAAC7K,KAAK,CAACiB,OAAO,CAACqC,cAAc,CAAC,OAAO,CAAC,EACxCtD,KAAK,CAACiB,OAAO,CAACuB,KAAK,GAAG,KAAK;QAC7BxC,KAAK,CAACsC,QAAQ,GAAG/C,MAAM,CAACuL,WAAW,CAAC,CAAC;QACrCtJ,YAAY,CAACjC,MAAM,EAAES,KAAK,CAAC;MAC7B;MACA,IAAIA,KAAK,CAACE,QAAQ,IAAIK,YAAY,IAAIhB,MAAM,CAACwL,QAAQ,CAAC,CAAC,EAAE,OAAO,IAAI;MACpE,IAAIlM,KAAK,GAAGmB,KAAK,CAACE,QAAQ,CAACX,MAAM,EAAES,KAAK,CAAC;MACzC,IAAIpB,IAAI,IAAI,SAAS,EAAE,OAAOC,KAAK;MACnCmB,KAAK,CAACmB,QAAQ,GAAGvC,IAAI,IAAI,UAAU,KAAKe,OAAO,IAAI,IAAI,IAAIA,OAAO,IAAI,IAAI,CAAC,GAAG,QAAQ,GAAGf,IAAI;MAC7F,OAAOuE,OAAO,CAACnD,KAAK,EAAEnB,KAAK,EAAED,IAAI,EAAEe,OAAO,EAAEJ,MAAM,CAAC;IACrD,CAAC;IAED4F,MAAM,EAAE,SAAAA,CAASnF,KAAK,EAAEyK,SAAS,EAAEzH,EAAE,EAAE;MACrC,IAAIhD,KAAK,CAACE,QAAQ,IAAIK,YAAY,IAAIP,KAAK,CAACE,QAAQ,IAAIS,UAAU,EAAE,OAAO,IAAI;MAC/E,IAAIX,KAAK,CAACE,QAAQ,IAAIH,SAAS,EAAE,OAAO,CAAC;MACzC,IAAIiL,SAAS,GAAGP,SAAS,IAAIA,SAAS,CAACvI,MAAM,CAAC,CAAC,CAAC;QAAEjB,OAAO,GAAGjB,KAAK,CAACiB,OAAO;QAAEgK,GAAG;MAC9E;MACA,IAAI,CAAC,YAAY,CAAC5K,IAAI,CAACoK,SAAS,CAAC,EAAE,KAAK,IAAI3G,CAAC,GAAG9D,KAAK,CAACoD,EAAE,CAACI,MAAM,GAAG,CAAC,EAAEM,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAChF,IAAIoH,CAAC,GAAGlL,KAAK,CAACoD,EAAE,CAACU,CAAC,CAAC;QACnB,IAAIoH,CAAC,IAAI7F,MAAM,EAAEpE,OAAO,GAAGA,OAAO,CAACwB,IAAI,CAAC,KACnC,IAAIyI,CAAC,IAAIrF,SAAS,IAAIqF,CAAC,IAAIlG,UAAU,EAAE;MAC9C;MACA,OAAO,CAAC/D,OAAO,CAACrC,IAAI,IAAI,MAAM,IAAIqC,OAAO,CAACrC,IAAI,IAAI,MAAM,MAChDoM,SAAS,IAAI,GAAG,IAAK,CAACC,GAAG,GAAGjL,KAAK,CAACoD,EAAE,CAACpD,KAAK,CAACoD,EAAE,CAACI,MAAM,GAAG,CAAC,CAAC,MACnCyH,GAAG,IAAI9D,kBAAkB,IAAI8D,GAAG,IAAI/D,oBAAoB,CAAC,IAC1D,CAAC,kBAAkB,CAAC7G,IAAI,CAACoK,SAAS,CAAE,CAAC,EAChExJ,OAAO,GAAGA,OAAO,CAACwB,IAAI;MACxB,IAAIxE,eAAe,IAAIgD,OAAO,CAACrC,IAAI,IAAI,GAAG,IAAIqC,OAAO,CAACwB,IAAI,CAAC7D,IAAI,IAAI,MAAM,EACvEqC,OAAO,GAAGA,OAAO,CAACwB,IAAI;MACxB,IAAI7D,IAAI,GAAGqC,OAAO,CAACrC,IAAI;QAAEuM,OAAO,GAAGH,SAAS,IAAIpM,IAAI;MAEpD,IAAIA,IAAI,IAAI,QAAQ,EAAE,OAAOqC,OAAO,CAACqB,QAAQ,IAAItC,KAAK,CAACmB,QAAQ,IAAI,UAAU,IAAInB,KAAK,CAACmB,QAAQ,IAAI,GAAG,GAAGF,OAAO,CAACyB,IAAI,CAACc,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KACjI,IAAI5E,IAAI,IAAI,MAAM,IAAIoM,SAAS,IAAI,GAAG,EAAE,OAAO/J,OAAO,CAACqB,QAAQ,CAAC,KAChE,IAAI1D,IAAI,IAAI,MAAM,EAAE,OAAOqC,OAAO,CAACqB,QAAQ,GAAGU,EAAE,CAACoI,IAAI,CAAC,KACtD,IAAIxM,IAAI,IAAI,MAAM,EACrB,OAAOqC,OAAO,CAACqB,QAAQ,IAAIkI,oBAAoB,CAACxK,KAAK,EAAEyK,SAAS,CAAC,GAAGxM,eAAe,IAAI+E,EAAE,CAACoI,IAAI,GAAG,CAAC,CAAC,CAAC,KACjG,IAAInK,OAAO,CAACyB,IAAI,IAAI,QAAQ,IAAI,CAACyI,OAAO,IAAInN,YAAY,CAACqN,kBAAkB,IAAI,KAAK,EACvF,OAAOpK,OAAO,CAACqB,QAAQ,IAAI,qBAAqB,CAACjC,IAAI,CAACoK,SAAS,CAAC,GAAGzH,EAAE,CAACoI,IAAI,GAAG,CAAC,GAAGpI,EAAE,CAACoI,IAAI,CAAC,CAAC,KACvF,IAAInK,OAAO,CAACuB,KAAK,EAAE,OAAOvB,OAAO,CAACsB,MAAM,IAAI4I,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAC7D,OAAOlK,OAAO,CAACqB,QAAQ,IAAI6I,OAAO,GAAG,CAAC,GAAGnI,EAAE,CAACoI,IAAI,CAAC;IACxD,CAAC;IAEDE,YAAY,EAAE;MACZC,aAAa,EAAE,mCAAmC;MAClDC,aAAa,EAAEpN,QAAQ,GAAGqN,SAAS,GAAG;QAACC,IAAI,EAAE,IAAI;QAAErH,KAAK,EAAE;UAACsH,IAAI,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAI;MAAC,CAAC;MACpFC,aAAa,EAAE;QAACtK,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;MAAC,CAAC;MACzDuK,SAAS,EAAE;IACb;EACF,CAAC;AACH;AAAC;AAEM,MAAMC,UAAU,GAAGhO,YAAY,CAAC;EAACgF,IAAI,EAAE;AAAY,CAAC,CAAC;AACrD,MAAM1E,IAAI,GAAGN,YAAY,CAAC;EAACgF,IAAI,EAAE,MAAM;EAAE1E,IAAI,EAAE;AAAI,CAAC,CAAC;AACrD,MAAMF,MAAM,GAAGJ,YAAY,CAAC;EAACgF,IAAI,EAAE,MAAM;EAAE5E,MAAM,EAAE;AAAI,CAAC,CAAC;AACzD,MAAMI,UAAU,GAAGR,YAAY,CAAC;EAACgF,IAAI,EAAE,YAAY;EAAExE,UAAU,EAAE;AAAI,CAAC,CAAC,C","sources":["./node_modules/@codemirror/legacy-modes/mode/javascript.js"],"sourcesContent":["function mkJavaScript(parserConfig) {\n  var statementIndent = parserConfig.statementIndent;\n  var jsonldMode = parserConfig.jsonld;\n  var jsonMode = parserConfig.json || jsonldMode;\n  var isTS = parserConfig.typescript;\n  var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n  // Tokenizer\n\n  var keywords = function(){\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\n\n    return {\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\n      \"return\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\n      \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\n      \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\n      \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"extends\": C,\n      \"await\": C\n    };\n  }();\n\n  var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\n  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n  function readRegexp(stream) {\n    var escaped = false, next, inSet = false;\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (next == \"/\" && !inSet) return;\n        if (next == \"[\") inSet = true;\n        else if (inSet && next == \"]\") inSet = false;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \".\" && stream.match(/^\\d[\\d_]*(?:[eE][+\\-]?[\\d_]+)?/)) {\n      return ret(\"number\", \"number\");\n    } else if (ch == \".\" && stream.match(\"..\")) {\n      return ret(\"spread\", \"meta\");\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return ret(ch);\n    } else if (ch == \"=\" && stream.eat(\">\")) {\n      return ret(\"=>\", \"operator\");\n    } else if (ch == \"0\" && stream.match(/^(?:x[\\dA-Fa-f_]+|o[0-7_]+|b[01_]+)n?/)) {\n      return ret(\"number\", \"number\");\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:n|(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)?/);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      } else if (expressionAllowed(stream, state, 1)) {\n        readRegexp(stream);\n        stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/);\n        return ret(\"regexp\", \"string.special\");\n      } else {\n        stream.eat(\"=\");\n        return ret(\"operator\", \"operator\", stream.current());\n      }\n    } else if (ch == \"`\") {\n      state.tokenize = tokenQuasi;\n      return tokenQuasi(stream, state);\n    } else if (ch == \"#\" && stream.peek() == \"!\") {\n      stream.skipToEnd();\n      return ret(\"meta\", \"meta\");\n    } else if (ch == \"#\" && stream.eatWhile(wordRE)) {\n      return ret(\"variable\", \"property\")\n    } else if (ch == \"<\" && stream.match(\"!--\") ||\n               (ch == \"-\" && stream.match(\"->\") && !/\\S/.test(stream.string.slice(0, stream.start)))) {\n      stream.skipToEnd()\n      return ret(\"comment\", \"comment\")\n    } else if (isOperatorChar.test(ch)) {\n      if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\n        if (stream.eat(\"=\")) {\n          if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\n        } else if (/[<>*+\\-|&?]/.test(ch)) {\n          stream.eat(ch)\n          if (ch == \">\") stream.eat(ch)\n        }\n      }\n      if (ch == \"?\" && stream.eat(\".\")) return ret(\".\")\n      return ret(\"operator\", \"operator\", stream.current());\n    } else if (wordRE.test(ch)) {\n      stream.eatWhile(wordRE);\n      var word = stream.current()\n      if (state.lastType != \".\") {\n        if (keywords.propertyIsEnumerable(word)) {\n          var kw = keywords[word]\n          return ret(kw.type, kw.style, word)\n        }\n        if (word == \"async\" && stream.match(/^(\\s|\\/\\*([^*]|\\*(?!\\/))*?\\*\\/)*[\\[\\(\\w]/, false))\n          return ret(\"async\", \"keyword\", word)\n      }\n      return ret(\"variable\", \"variable\", word)\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next;\n      if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)){\n        state.tokenize = tokenBase;\n        return ret(\"jsonld-keyword\", \"meta\");\n      }\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) break;\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenQuasi(stream, state) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return ret(\"quasi\", \"string.special\", stream.current());\n  }\n\n  var brackets = \"([{}])\";\n  // This is a crude lookahead trick to try and notice that we're\n  // parsing the argument patterns for a fat-arrow function before we\n  // actually hit the arrow token. It only works if the arrow is on\n  // the same line as the arguments and there's no strange noise\n  // (comments) in between. Fallback is to only notice when we hit the\n  // arrow, and not declare the arguments as locals for the arrow\n  // body.\n  function findFatArrow(stream, state) {\n    if (state.fatArrowAt) state.fatArrowAt = null;\n    var arrow = stream.string.indexOf(\"=>\", stream.start);\n    if (arrow < 0) return;\n\n    if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n      var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\n      if (m) arrow = m.index\n    }\n\n    var depth = 0, sawSomething = false;\n    for (var pos = arrow - 1; pos >= 0; --pos) {\n      var ch = stream.string.charAt(pos);\n      var bracket = brackets.indexOf(ch);\n      if (bracket >= 0 && bracket < 3) {\n        if (!depth) { ++pos; break; }\n        if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\n      } else if (bracket >= 3 && bracket < 6) {\n        ++depth;\n      } else if (wordRE.test(ch)) {\n        sawSomething = true;\n      } else if (/[\"'\\/`]/.test(ch)) {\n        for (;; --pos) {\n          if (pos == 0) return\n          var next = stream.string.charAt(pos - 1)\n          if (next == ch && stream.string.charAt(pos - 2) != \"\\\\\") { pos--; break }\n        }\n      } else if (sawSomething && !depth) {\n        ++pos;\n        break;\n      }\n    }\n    if (sawSomething && !depth) state.fatArrowAt = pos;\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true,\n                     \"regexp\": true, \"this\": true, \"import\": true, \"jsonld-keyword\": true};\n\n  function JSLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n    for (var cx = state.context; cx; cx = cx.prev) {\n      for (var v = cx.vars; v; v = v.next)\n        if (v.name == varname) return true;\n    }\n  }\n\n  function parseJS(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null; cx.cc = cc; cx.style = style;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variableName.local\";\n        return style;\n      }\n    }\n  }\n\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function inList(name, list) {\n    for (var v = list; v; v = v.next) if (v.name == name) return true\n    return false;\n  }\n  function register(varname) {\n    var state = cx.state;\n    cx.marked = \"def\";\n    if (state.context) {\n      if (state.lexical.info == \"var\" && state.context && state.context.block) {\n        // FIXME function decls are also not block scoped\n        var newContext = registerVarScoped(varname, state.context)\n        if (newContext != null) {\n          state.context = newContext\n          return\n        }\n      } else if (!inList(varname, state.localVars)) {\n        state.localVars = new Var(varname, state.localVars)\n        return\n      }\n    }\n    // Fall through means this is global\n    if (parserConfig.globalVars && !inList(varname, state.globalVars))\n      state.globalVars = new Var(varname, state.globalVars)\n  }\n  function registerVarScoped(varname, context) {\n    if (!context) {\n      return null\n    } else if (context.block) {\n      var inner = registerVarScoped(varname, context.prev)\n      if (!inner) return null\n      if (inner == context.prev) return context\n      return new Context(inner, context.vars, true)\n    } else if (inList(varname, context.vars)) {\n      return context\n    } else {\n      return new Context(context.prev, new Var(varname, context.vars), false)\n    }\n  }\n\n  function isModifier(name) {\n    return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\n  }\n\n  // Combinators\n\n  function Context(prev, vars, block) { this.prev = prev; this.vars = vars; this.block = block }\n  function Var(name, next) { this.name = name; this.next = next }\n\n  var defaultVars = new Var(\"this\", new Var(\"arguments\", null))\n  function pushcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, false)\n    cx.state.localVars = defaultVars\n  }\n  function pushblockcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, true)\n    cx.state.localVars = null\n  }\n  pushcontext.lex = pushblockcontext.lex = true\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars\n    cx.state.context = cx.state.context.prev\n  }\n  popcontext.lex = true\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state, indent = state.indented;\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n      else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n        indent = outer.indented;\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function exp(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\" || type == \"}\" || type == \")\" || type == \"]\") return pass();\n      else return cont(exp);\n    };\n    return exp;\n  }\n\n  function statement(type, value) {\n    if (type == \"var\") return cont(pushlex(\"vardef\", value), vardef, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\n    if (type == \"debugger\") return cont(expect(\";\"));\n    if (type == \"{\") return cont(pushlex(\"}\"), pushblockcontext, block, poplex, popcontext);\n    if (type == \";\") return cont();\n    if (type == \"if\") {\n      if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n        cx.state.cc.pop()();\n      return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\n    }\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), pushblockcontext, forspec, statement, popcontext, poplex);\n    if (type == \"class\" || (isTS && value == \"interface\")) {\n      cx.marked = \"keyword\"\n      return cont(pushlex(\"form\", type == \"class\" ? type : value), className, poplex)\n    }\n    if (type == \"variable\") {\n      if (isTS && value == \"declare\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\n        cx.marked = \"keyword\"\n        if (value == \"enum\") return cont(enumdef);\n        else if (value == \"type\") return cont(typename, expect(\"operator\"), typeexpr, expect(\";\"));\n        else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\n      } else if (isTS && value == \"namespace\") {\n        cx.marked = \"keyword\"\n        return cont(pushlex(\"form\"), expression, statement, poplex)\n      } else if (isTS && value == \"abstract\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else {\n        return cont(pushlex(\"stat\"), maybelabel);\n      }\n    }\n    if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"), pushblockcontext,\n                                      block, poplex, poplex, popcontext);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);\n    if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\n    if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\n    if (type == \"async\") return cont(statement)\n    if (value == \"@\") return cont(expression, statement)\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function maybeCatchBinding(type) {\n    if (type == \"(\") return cont(funarg, expect(\")\"))\n  }\n  function expression(type, value) {\n    return expressionInner(type, value, false);\n  }\n  function expressionNoComma(type, value) {\n    return expressionInner(type, value, true);\n  }\n  function parenExpr(type) {\n    if (type != \"(\") return pass()\n    return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex)\n  }\n  function expressionInner(type, value, noComma) {\n    if (cx.state.fatArrowAt == cx.stream.start) {\n      var body = noComma ? arrowBodyNoComma : arrowBody;\n      if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\n      else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n    }\n\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n    if (type == \"function\") return cont(functiondef, maybeop);\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\n    if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\n    if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n    if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n    if (type == \"quasi\") return pass(quasi, maybeop);\n    if (type == \"new\") return cont(maybeTarget(noComma));\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n\n  function maybeoperatorComma(type, value) {\n    if (type == \",\") return cont(maybeexpression);\n    return maybeoperatorNoComma(type, value, false);\n  }\n  function maybeoperatorNoComma(type, value, noComma) {\n    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n    var expr = noComma == false ? expression : expressionNoComma;\n    if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n    if (type == \"operator\") {\n      if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\n      if (isTS && value == \"<\" && cx.stream.match(/^([^<>]|<[^<>]*>)*>\\s*\\(/, false))\n        return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\n      if (value == \"?\") return cont(expression, expect(\":\"), expr);\n      return cont(expr);\n    }\n    if (type == \"quasi\") { return pass(quasi, me); }\n    if (type == \";\") return;\n    if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n    if (type == \".\") return cont(property, me);\n    if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n    if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\n    if (type == \"regexp\") {\n      cx.state.lastType = cx.marked = \"operator\"\n      cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\n      return cont(expr)\n    }\n  }\n  function quasi(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n    return cont(maybeexpression, continueQuasi);\n  }\n  function continueQuasi(type) {\n    if (type == \"}\") {\n      cx.marked = \"string.special\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasi);\n    }\n  }\n  function arrowBody(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expression);\n  }\n  function arrowBodyNoComma(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expressionNoComma);\n  }\n  function maybeTarget(noComma) {\n    return function(type) {\n      if (type == \".\") return cont(noComma ? targetNoComma : target);\n      else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\n      else return pass(noComma ? expressionNoComma : expression);\n    };\n  }\n  function target(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\n  }\n  function targetNoComma(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\n  }\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type, value) {\n    if (type == \"async\") {\n      cx.marked = \"property\";\n      return cont(objprop);\n    } else if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\n      var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n      if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\n        cx.state.fatArrowAt = cx.stream.pos + m[0].length\n      return cont(afterprop);\n    } else if (type == \"number\" || type == \"string\") {\n      cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n      return cont(afterprop);\n    } else if (type == \"jsonld-keyword\") {\n      return cont(afterprop);\n    } else if (isTS && isModifier(value)) {\n      cx.marked = \"keyword\"\n      return cont(objprop)\n    } else if (type == \"[\") {\n      return cont(expression, maybetype, expect(\"]\"), afterprop);\n    } else if (type == \"spread\") {\n      return cont(expressionNoComma, afterprop);\n    } else if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(objprop);\n    } else if (type == \":\") {\n      return pass(afterprop)\n    }\n  }\n  function getterSetter(type) {\n    if (type != \"variable\") return pass(afterprop);\n    cx.marked = \"property\";\n    return cont(functiondef);\n  }\n  function afterprop(type) {\n    if (type == \":\") return cont(expressionNoComma);\n    if (type == \"(\") return pass(functiondef);\n  }\n  function commasep(what, end, sep) {\n    function proceed(type, value) {\n      if (sep ? sep.indexOf(type) > -1 : type == \",\") {\n        var lex = cx.state.lexical;\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n        return cont(function(type, value) {\n          if (type == end || value == end) return pass()\n          return pass(what)\n        }, proceed);\n      }\n      if (type == end || value == end) return cont();\n      if (sep && sep.indexOf(\";\") > -1) return pass(what)\n      return cont(expect(end));\n    }\n    return function(type, value) {\n      if (type == end || value == end) return cont();\n      return pass(what, proceed);\n    };\n  }\n  function contCommasep(what, end, info) {\n    for (var i = 3; i < arguments.length; i++)\n      cx.cc.push(arguments[i]);\n    return cont(pushlex(end, info), commasep(what, end), poplex);\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function maybetype(type, value) {\n    if (isTS) {\n      if (type == \":\") return cont(typeexpr);\n      if (value == \"?\") return cont(maybetype);\n    }\n  }\n  function maybetypeOrIn(type, value) {\n    if (isTS && (type == \":\" || value == \"in\")) return cont(typeexpr)\n  }\n  function mayberettype(type) {\n    if (isTS && type == \":\") {\n      if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\n      else return cont(typeexpr)\n    }\n  }\n  function isKW(_, value) {\n    if (value == \"is\") {\n      cx.marked = \"keyword\"\n      return cont()\n    }\n  }\n  function typeexpr(type, value) {\n    if (value == \"keyof\" || value == \"typeof\" || value == \"infer\" || value == \"readonly\") {\n      cx.marked = \"keyword\"\n      return cont(value == \"typeof\" ? expressionNoComma : typeexpr)\n    }\n    if (type == \"variable\" || value == \"void\") {\n      cx.marked = \"type\"\n      return cont(afterType)\n    }\n    if (value == \"|\" || value == \"&\") return cont(typeexpr)\n    if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\n    if (type == \"{\") return cont(pushlex(\"}\"), typeprops, poplex, afterType)\n    if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType, afterType)\n    if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\n    if (type == \"quasi\") return pass(quasiType, afterType)\n  }\n  function maybeReturnType(type) {\n    if (type == \"=>\") return cont(typeexpr)\n  }\n  function typeprops(type) {\n    if (type.match(/[\\}\\)\\]]/)) return cont()\n    if (type == \",\" || type == \";\") return cont(typeprops)\n    return pass(typeprop, typeprops)\n  }\n  function typeprop(type, value) {\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\"\n      return cont(typeprop)\n    } else if (value == \"?\" || type == \"number\" || type == \"string\") {\n      return cont(typeprop)\n    } else if (type == \":\") {\n      return cont(typeexpr)\n    } else if (type == \"[\") {\n      return cont(expect(\"variable\"), maybetypeOrIn, expect(\"]\"), typeprop)\n    } else if (type == \"(\") {\n      return pass(functiondecl, typeprop)\n    } else if (!type.match(/[;\\}\\)\\],]/)) {\n      return cont()\n    }\n  }\n  function quasiType(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasiType);\n    return cont(typeexpr, continueQuasiType);\n  }\n  function continueQuasiType(type) {\n   if (type == \"}\") {\n      cx.marked = \"string.special\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasiType);\n    }\n  }\n  function typearg(type, value) {\n    if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\n    if (type == \":\") return cont(typeexpr)\n    if (type == \"spread\") return cont(typearg)\n    return pass(typeexpr)\n  }\n  function afterType(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n    if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\n    if (type == \"[\") return cont(typeexpr, expect(\"]\"), afterType)\n    if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\n    if (value == \"?\") return cont(typeexpr, expect(\":\"), typeexpr)\n  }\n  function maybeTypeArgs(_, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n  }\n  function typeparam() {\n    return pass(typeexpr, maybeTypeDefault)\n  }\n  function maybeTypeDefault(_, value) {\n    if (value == \"=\") return cont(typeexpr)\n  }\n  function vardef(_, value) {\n    if (value == \"enum\") {cx.marked = \"keyword\"; return cont(enumdef)}\n    return pass(pattern, maybetype, maybeAssign, vardefCont);\n  }\n  function pattern(type, value) {\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\n    if (type == \"variable\") { register(value); return cont(); }\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"[\") return contCommasep(eltpattern, \"]\");\n    if (type == \"{\") return contCommasep(proppattern, \"}\");\n  }\n  function proppattern(type, value) {\n    if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n      register(value);\n      return cont(maybeAssign);\n    }\n    if (type == \"variable\") cx.marked = \"property\";\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"}\") return pass();\n    if (type == \"[\") return cont(expression, expect(']'), expect(':'), proppattern);\n    return cont(expect(\":\"), pattern, maybeAssign);\n  }\n  function eltpattern() {\n    return pass(pattern, maybeAssign)\n  }\n  function maybeAssign(_type, value) {\n    if (value == \"=\") return cont(expressionNoComma);\n  }\n  function vardefCont(type) {\n    if (type == \",\") return cont(vardef);\n  }\n  function maybeelse(type, value) {\n    if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n  }\n  function forspec(type, value) {\n    if (value == \"await\") return cont(forspec);\n    if (type == \"(\") return cont(pushlex(\")\"), forspec1, poplex);\n  }\n  function forspec1(type) {\n    if (type == \"var\") return cont(vardef, forspec2);\n    if (type == \"variable\") return cont(forspec2);\n    return pass(forspec2)\n  }\n  function forspec2(type, value) {\n    if (type == \")\") return cont()\n    if (type == \";\") return cont(forspec2)\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression, forspec2) }\n    return pass(expression, forspec2)\n  }\n  function functiondef(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondef);}\n    if (type == \"variable\") {register(value); return cont(functiondef);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\n  }\n  function functiondecl(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondecl);}\n    if (type == \"variable\") {register(value); return cont(functiondecl);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondecl)\n  }\n  function typename(type, value) {\n    if (type == \"keyword\" || type == \"variable\") {\n      cx.marked = \"type\"\n      return cont(typename)\n    } else if (value == \"<\") {\n      return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex)\n    }\n  }\n  function funarg(type, value) {\n    if (value == \"@\") cont(expression, funarg)\n    if (type == \"spread\") return cont(funarg);\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\n    if (isTS && type == \"this\") return cont(maybetype, maybeAssign)\n    return pass(pattern, maybetype, maybeAssign);\n  }\n  function classExpression(type, value) {\n    // Class expressions may have an optional name.\n    if (type == \"variable\") return className(type, value);\n    return classNameAfter(type, value);\n  }\n  function className(type, value) {\n    if (type == \"variable\") {register(value); return cont(classNameAfter);}\n  }\n  function classNameAfter(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\n    if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\n      if (value == \"implements\") cx.marked = \"keyword\";\n      return cont(isTS ? typeexpr : expression, classNameAfter);\n    }\n    if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n  }\n  function classBody(type, value) {\n    if (type == \"async\" ||\n        (type == \"variable\" &&\n         (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\n         cx.stream.match(/^\\s+#?[\\w$\\xa1-\\uffff]/, false))) {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      return cont(classfield, classBody);\n    }\n    if (type == \"number\" || type == \"string\") return cont(classfield, classBody);\n    if (type == \"[\")\n      return cont(expression, maybetype, expect(\"]\"), classfield, classBody)\n    if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (isTS && type == \"(\") return pass(functiondecl, classBody)\n    if (type == \";\" || type == \",\") return cont(classBody);\n    if (type == \"}\") return cont();\n    if (value == \"@\") return cont(expression, classBody)\n  }\n  function classfield(type, value) {\n    if (value == \"!\" || value == \"?\") return cont(classfield)\n    if (type == \":\") return cont(typeexpr, maybeAssign)\n    if (value == \"=\") return cont(expressionNoComma)\n    var context = cx.state.lexical.prev, isInterface = context && context.info == \"interface\"\n    return pass(isInterface ? functiondecl : functiondef)\n  }\n  function afterExport(type, value) {\n    if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n    if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n    if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\n    return pass(statement);\n  }\n  function exportField(type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\n    if (type == \"variable\") return pass(expressionNoComma, exportField);\n  }\n  function afterImport(type) {\n    if (type == \"string\") return cont();\n    if (type == \"(\") return pass(expression);\n    if (type == \".\") return pass(maybeoperatorComma);\n    return pass(importSpec, maybeMoreImports, maybeFrom);\n  }\n  function importSpec(type, value) {\n    if (type == \"{\") return contCommasep(importSpec, \"}\");\n    if (type == \"variable\") register(value);\n    if (value == \"*\") cx.marked = \"keyword\";\n    return cont(maybeAs);\n  }\n  function maybeMoreImports(type) {\n    if (type == \",\") return cont(importSpec, maybeMoreImports)\n  }\n  function maybeAs(_type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\n  }\n  function maybeFrom(_type, value) {\n    if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n  }\n  function arrayLiteral(type) {\n    if (type == \"]\") return cont();\n    return pass(commasep(expressionNoComma, \"]\"));\n  }\n  function enumdef() {\n    return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\n  }\n  function enummember() {\n    return pass(pattern, maybeAssign);\n  }\n\n  function isContinuedStatement(state, textAfter) {\n    return state.lastType == \"operator\" || state.lastType == \",\" ||\n      isOperatorChar.test(textAfter.charAt(0)) ||\n      /[,.]/.test(textAfter.charAt(0));\n  }\n\n  function expressionAllowed(stream, state, backUp) {\n    return state.tokenize == tokenBase &&\n      /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\n      (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\n  }\n\n  // Interface\n\n  return {\n    name: parserConfig.name,\n\n    startState: function(indentUnit) {\n      var state = {\n        tokenize: tokenBase,\n        lastType: \"sof\",\n        cc: [],\n        lexical: new JSLexical(-indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n        context: parserConfig.localVars && new Context(null, null, false),\n        indented: 0\n      };\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n        state.globalVars = parserConfig.globalVars;\n      return state;\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n        findFatArrow(stream, state);\n      }\n      if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n      return parseJS(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter, cx) {\n      if (state.tokenize == tokenComment || state.tokenize == tokenQuasi) return null;\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\n      // Kludge to prevent 'maybelse' from blocking lexical scope pops\n      if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\n        var c = state.cc[i];\n        if (c == poplex) lexical = lexical.prev;\n        else if (c != maybeelse && c != popcontext) break;\n      }\n      while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\n             (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\n                                   (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\n                                   !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\n        lexical = lexical.prev;\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n        lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info.length + 1 : 0);\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"form\") return lexical.indented + cx.unit;\n      else if (type == \"stat\")\n        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || cx.unit : 0);\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? cx.unit : 2 * cx.unit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : cx.unit);\n    },\n\n    languageData: {\n      indentOnInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n      commentTokens: jsonMode ? undefined : {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n      closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"]},\n      wordChars: \"$\"\n    }\n  };\n};\n\nexport const javascript = mkJavaScript({name: \"javascript\"})\nexport const json = mkJavaScript({name: \"json\", json: true})\nexport const jsonld = mkJavaScript({name: \"json\", jsonld: true})\nexport const typescript = mkJavaScript({name: \"typescript\", typescript: true})\n"],"names":["mkJavaScript","parserConfig","statementIndent","jsonldMode","jsonld","jsonMode","json","isTS","typescript","wordRE","wordCharacters","keywords","kw","type","style","A","B","C","D","operator","atom","isOperatorChar","isJsonldKeyword","readRegexp","stream","escaped","next","inSet","content","ret","tp","cont","tokenBase","state","ch","tokenize","tokenString","match","test","eat","tokenComment","skipToEnd","expressionAllowed","current","tokenQuasi","peek","eatWhile","string","slice","start","lexical","word","lastType","propertyIsEnumerable","quote","maybeEnd","brackets","findFatArrow","fatArrowAt","arrow","indexOf","m","exec","index","depth","sawSomething","pos","charAt","bracket","atomicTypes","JSLexical","indented","column","align","prev","info","inScope","varname","v","localVars","name","cx","context","vars","parseJS","cc","marked","hasOwnProperty","combinator","length","pop","expression","statement","lex","pass","i","arguments","push","apply","inList","list","register","block","newContext","registerVarScoped","Var","globalVars","inner","Context","isModifier","defaultVars","pushcontext","pushblockcontext","popcontext","pushlex","result","indent","outer","poplex","expect","wanted","exp","value","vardef","parenExpr","maybeexpression","maybeelse","functiondef","forspec","className","enumdef","typename","typeexpr","pattern","maybelabel","maybeCatchBinding","afterExport","afterImport","funarg","expressionInner","expressionNoComma","noComma","body","arrowBodyNoComma","arrowBody","commasep","maybeop","maybeoperatorNoComma","maybeoperatorComma","classExpression","arrayLiteral","contCommasep","objprop","quasi","maybeTarget","me","expr","property","backUp","continueQuasi","targetNoComma","target","maybeTypeArgs","_","getterSetter","afterprop","maybetype","what","end","sep","proceed","maybetypeOrIn","mayberettype","isKW","afterType","typeprops","typearg","maybeReturnType","quasiType","typeprop","functiondecl","continueQuasiType","typeparam","maybeTypeDefault","maybeAssign","vardefCont","eltpattern","proppattern","_type","forspec1","forspec2","classNameAfter","classBody","classfield","isInterface","maybeFrom","exportField","importSpec","maybeMoreImports","maybeAs","enummember","isContinuedStatement","textAfter","startState","indentUnit","token","sol","indentation","eatSpace","firstChar","top","c","closing","unit","doubleIndentSwitch","languageData","indentOnInput","commentTokens","undefined","line","open","close","closeBrackets","wordChars","javascript"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}