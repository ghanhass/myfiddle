{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_http_js.js","mappings":";;;;;;;;;;;;;AAAA,SAASA,aAAaA,CAACC,MAAM,EAAEC,KAAK,EAAE;EACpCD,MAAM,CAACE,SAAS,CAAC,CAAC;EAClBD,KAAK,CAACE,GAAG,GAAGC,MAAM;EAClB,OAAO,OAAO;AAChB;AAEA,SAASC,KAAKA,CAACL,MAAM,EAAEC,KAAK,EAAE;EAC5B,IAAID,MAAM,CAACM,KAAK,CAAC,eAAe,CAAC,EAAE;IACjCL,KAAK,CAACE,GAAG,GAAGI,kBAAkB;IAC9B,OAAO,SAAS;EAClB,CAAC,MAAM,IAAIP,MAAM,CAACM,KAAK,CAAC,SAAS,CAAC,IAAI,OAAO,CAACE,IAAI,CAACR,MAAM,CAACS,IAAI,CAAC,CAAC,CAAC,EAAE;IACjER,KAAK,CAACE,GAAG,GAAGO,WAAW;IACvB,OAAO,SAAS;EAClB,CAAC,MAAM;IACL,OAAOX,aAAa,CAACC,MAAM,EAAEC,KAAK,CAAC;EACrC;AACF;AAEA,SAASM,kBAAkBA,CAACP,MAAM,EAAEC,KAAK,EAAE;EACzC,IAAIU,IAAI,GAAGX,MAAM,CAACM,KAAK,CAAC,MAAM,CAAC;EAC/B,IAAI,CAACK,IAAI,EAAE,OAAOZ,aAAa,CAACC,MAAM,EAAEC,KAAK,CAAC;EAE9CA,KAAK,CAACE,GAAG,GAAGS,kBAAkB;EAC9B,IAAIC,MAAM,GAAGC,MAAM,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5B,IAAIE,MAAM,IAAI,GAAG,IAAIA,MAAM,GAAG,GAAG,EAAE;IACjC,OAAO,MAAM;EACf,CAAC,MAAM;IACL,OAAO,OAAO;EAChB;AACF;AAEA,SAASD,kBAAkBA,CAACZ,MAAM,EAAEC,KAAK,EAAE;EACzCD,MAAM,CAACE,SAAS,CAAC,CAAC;EAClBD,KAAK,CAACE,GAAG,GAAGC,MAAM;EAClB,OAAO,IAAI;AACb;AAEA,SAASM,WAAWA,CAACV,MAAM,EAAEC,KAAK,EAAE;EAClCD,MAAM,CAACe,QAAQ,CAAC,IAAI,CAAC;EACrBd,KAAK,CAACE,GAAG,GAAGa,eAAe;EAC3B,OAAO,gBAAgB;AACzB;AAEA,SAASA,eAAeA,CAAChB,MAAM,EAAEC,KAAK,EAAE;EACtC,IAAID,MAAM,CAACM,KAAK,CAAC,gBAAgB,CAAC,EAAE;IAClCL,KAAK,CAACE,GAAG,GAAGC,MAAM;IAClB,OAAO,SAAS;EAClB,CAAC,MAAM;IACL,OAAOL,aAAa,CAACC,MAAM,EAAEC,KAAK,CAAC;EACrC;AACF;AAEA,SAASG,MAAMA,CAACJ,MAAM,EAAE;EACtB,IAAIA,MAAM,CAACiB,GAAG,CAAC,CAAC,IAAI,CAACjB,MAAM,CAACkB,GAAG,CAAC,OAAO,CAAC,EAAE;IACxC,IAAIlB,MAAM,CAACM,KAAK,CAAC,OAAO,CAAC,EAAE;MACzB,OAAO,MAAM;IACf,CAAC,MAAM;MACLN,MAAM,CAACE,SAAS,CAAC,CAAC;MAClB,OAAO,OAAO;IAChB;EACF,CAAC,MAAM;IACLF,MAAM,CAACE,SAAS,CAAC,CAAC;IAClB,OAAO,QAAQ;EACjB;AACF;AAEA,SAASiB,IAAIA,CAACnB,MAAM,EAAE;EACpBA,MAAM,CAACE,SAAS,CAAC,CAAC;EAClB,OAAO,IAAI;AACb;AAEO,MAAMkB,IAAI,GAAG;EAClBC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,SAAAA,CAAStB,MAAM,EAAEC,KAAK,EAAE;IAC7B,IAAIE,GAAG,GAAGF,KAAK,CAACE,GAAG;IACnB,IAAIA,GAAG,IAAIC,MAAM,IAAID,GAAG,IAAIgB,IAAI,IAAInB,MAAM,CAACuB,QAAQ,CAAC,CAAC,EAAE,OAAO,IAAI;IAClE,OAAOpB,GAAG,CAACH,MAAM,EAAEC,KAAK,CAAC;EAC3B,CAAC;EAEDuB,SAAS,EAAE,SAAAA,CAASvB,KAAK,EAAE;IACzBA,KAAK,CAACE,GAAG,GAAGgB,IAAI;EAClB,CAAC;EAEDM,UAAU,EAAE,SAAAA,CAAA,EAAW;IACrB,OAAO;MAACtB,GAAG,EAAEE;IAAK,CAAC;EACrB;AACF,CAAC,C","sources":["./node_modules/@codemirror/legacy-modes/mode/http.js"],"sourcesContent":["function failFirstLine(stream, state) {\n  stream.skipToEnd();\n  state.cur = header;\n  return \"error\";\n}\n\nfunction start(stream, state) {\n  if (stream.match(/^HTTP\\/\\d\\.\\d/)) {\n    state.cur = responseStatusCode;\n    return \"keyword\";\n  } else if (stream.match(/^[A-Z]+/) && /[ \\t]/.test(stream.peek())) {\n    state.cur = requestPath;\n    return \"keyword\";\n  } else {\n    return failFirstLine(stream, state);\n  }\n}\n\nfunction responseStatusCode(stream, state) {\n  var code = stream.match(/^\\d+/);\n  if (!code) return failFirstLine(stream, state);\n\n  state.cur = responseStatusText;\n  var status = Number(code[0]);\n  if (status >= 100 && status < 400) {\n    return \"atom\";\n  } else {\n    return \"error\";\n  }\n}\n\nfunction responseStatusText(stream, state) {\n  stream.skipToEnd();\n  state.cur = header;\n  return null;\n}\n\nfunction requestPath(stream, state) {\n  stream.eatWhile(/\\S/);\n  state.cur = requestProtocol;\n  return \"string.special\";\n}\n\nfunction requestProtocol(stream, state) {\n  if (stream.match(/^HTTP\\/\\d\\.\\d$/)) {\n    state.cur = header;\n    return \"keyword\";\n  } else {\n    return failFirstLine(stream, state);\n  }\n}\n\nfunction header(stream) {\n  if (stream.sol() && !stream.eat(/[ \\t]/)) {\n    if (stream.match(/^.*?:/)) {\n      return \"atom\";\n    } else {\n      stream.skipToEnd();\n      return \"error\";\n    }\n  } else {\n    stream.skipToEnd();\n    return \"string\";\n  }\n}\n\nfunction body(stream) {\n  stream.skipToEnd();\n  return null;\n}\n\nexport const http = {\n  name: \"http\",\n  token: function(stream, state) {\n    var cur = state.cur;\n    if (cur != header && cur != body && stream.eatSpace()) return null;\n    return cur(stream, state);\n  },\n\n  blankLine: function(state) {\n    state.cur = body;\n  },\n\n  startState: function() {\n    return {cur: start};\n  }\n};\n"],"names":["failFirstLine","stream","state","skipToEnd","cur","header","start","match","responseStatusCode","test","peek","requestPath","code","responseStatusText","status","Number","eatWhile","requestProtocol","sol","eat","body","http","name","token","eatSpace","blankLine","startState"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}