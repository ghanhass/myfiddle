{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_dylan_js.js","mappings":"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","sources":["./node_modules/@codemirror/legacy-modes/mode/dylan.js"],"sourcesContent":["function forEach(arr, f) {\n  for (var i = 0; i < arr.length; i++) f(arr[i], i)\n}\nfunction some(arr, f) {\n  for (var i = 0; i < arr.length; i++) if (f(arr[i], i)) return true\n  return false\n}\n\n// Words\nvar words = {\n  // Words that introduce unnamed definitions like \"define interface\"\n  unnamedDefinition: [\"interface\"],\n\n  // Words that introduce simple named definitions like \"define library\"\n  namedDefinition: [\"module\", \"library\", \"macro\",\n                    \"C-struct\", \"C-union\",\n                    \"C-function\", \"C-callable-wrapper\"\n                   ],\n\n  // Words that introduce type definitions like \"define class\".\n  // These are also parameterized like \"define method\" and are\n  // appended to otherParameterizedDefinitionWords\n  typeParameterizedDefinition: [\"class\", \"C-subtype\", \"C-mapped-subtype\"],\n\n  // Words that introduce trickier definitions like \"define method\".\n  // These require special definitions to be added to startExpressions\n  otherParameterizedDefinition: [\"method\", \"function\",\n                                 \"C-variable\", \"C-address\"\n                                ],\n\n  // Words that introduce module constant definitions.\n  // These must also be simple definitions and are\n  // appended to otherSimpleDefinitionWords\n  constantSimpleDefinition: [\"constant\"],\n\n  // Words that introduce module variable definitions.\n  // These must also be simple definitions and are\n  // appended to otherSimpleDefinitionWords\n  variableSimpleDefinition: [\"variable\"],\n\n  // Other words that introduce simple definitions\n  // (without implicit bodies).\n  otherSimpleDefinition: [\"generic\", \"domain\",\n                          \"C-pointer-type\",\n                          \"table\"\n                         ],\n\n  // Words that begin statements with implicit bodies.\n  statement: [\"if\", \"block\", \"begin\", \"method\", \"case\",\n              \"for\", \"select\", \"when\", \"unless\", \"until\",\n              \"while\", \"iterate\", \"profiling\", \"dynamic-bind\"\n             ],\n\n  // Patterns that act as separators in compound statements.\n  // This may include any general pattern that must be indented\n  // specially.\n  separator: [\"finally\", \"exception\", \"cleanup\", \"else\",\n              \"elseif\", \"afterwards\"\n             ],\n\n  // Keywords that do not require special indentation handling,\n  // but which should be highlighted\n  other: [\"above\", \"below\", \"by\", \"from\", \"handler\", \"in\",\n          \"instance\", \"let\", \"local\", \"otherwise\", \"slot\",\n          \"subclass\", \"then\", \"to\", \"keyed-by\", \"virtual\"\n         ],\n\n  // Condition signaling function calls\n  signalingCalls: [\"signal\", \"error\", \"cerror\",\n                   \"break\", \"check-type\", \"abort\"\n                  ]\n};\n\nwords[\"otherDefinition\"] =\n  words[\"unnamedDefinition\"]\n  .concat(words[\"namedDefinition\"])\n  .concat(words[\"otherParameterizedDefinition\"]);\n\nwords[\"definition\"] =\n  words[\"typeParameterizedDefinition\"]\n  .concat(words[\"otherDefinition\"]);\n\nwords[\"parameterizedDefinition\"] =\n  words[\"typeParameterizedDefinition\"]\n  .concat(words[\"otherParameterizedDefinition\"]);\n\nwords[\"simpleDefinition\"] =\n  words[\"constantSimpleDefinition\"]\n  .concat(words[\"variableSimpleDefinition\"])\n  .concat(words[\"otherSimpleDefinition\"]);\n\nwords[\"keyword\"] =\n  words[\"statement\"]\n  .concat(words[\"separator\"])\n  .concat(words[\"other\"]);\n\n// Patterns\nvar symbolPattern = \"[-_a-zA-Z?!*@<>$%]+\";\nvar symbol = new RegExp(\"^\" + symbolPattern);\nvar patterns = {\n  // Symbols with special syntax\n  symbolKeyword: symbolPattern + \":\",\n  symbolClass: \"<\" + symbolPattern + \">\",\n  symbolGlobal: \"\\\\*\" + symbolPattern + \"\\\\*\",\n  symbolConstant: \"\\\\$\" + symbolPattern\n};\nvar patternStyles = {\n  symbolKeyword: \"atom\",\n  symbolClass: \"tag\",\n  symbolGlobal: \"variableName.standard\",\n  symbolConstant: \"variableName.constant\"\n};\n\n// Compile all patterns to regular expressions\nfor (var patternName in patterns)\n  if (patterns.hasOwnProperty(patternName))\n    patterns[patternName] = new RegExp(\"^\" + patterns[patternName]);\n\n// Names beginning \"with-\" and \"without-\" are commonly\n// used as statement macro\npatterns[\"keyword\"] = [/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];\n\nvar styles = {};\nstyles[\"keyword\"] = \"keyword\";\nstyles[\"definition\"] = \"def\";\nstyles[\"simpleDefinition\"] = \"def\";\nstyles[\"signalingCalls\"] = \"builtin\";\n\n// protected words lookup table\nvar wordLookup = {};\nvar styleLookup = {};\n\nforEach([\n  \"keyword\",\n  \"definition\",\n  \"simpleDefinition\",\n  \"signalingCalls\"\n], function(type) {\n  forEach(words[type], function(word) {\n    wordLookup[word] = type;\n    styleLookup[word] = styles[type];\n  });\n});\n\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  // String\n  var ch = stream.peek();\n  if (ch == \"'\" || ch == '\"') {\n    stream.next();\n    return chain(stream, state, tokenString(ch, \"string\"));\n  }\n  // Comment\n  else if (ch == \"/\") {\n    stream.next();\n    if (stream.eat(\"*\")) {\n      return chain(stream, state, tokenComment);\n    } else if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    stream.backUp(1);\n  }\n  // Decimal\n  else if (/[+\\-\\d\\.]/.test(ch)) {\n    if (stream.match(/^[+-]?[0-9]*\\.[0-9]*([esdx][+-]?[0-9]+)?/i) ||\n        stream.match(/^[+-]?[0-9]+([esdx][+-]?[0-9]+)/i) ||\n        stream.match(/^[+-]?\\d+/)) {\n      return \"number\";\n    }\n  }\n  // Hash\n  else if (ch == \"#\") {\n    stream.next();\n    // Symbol with string syntax\n    ch = stream.peek();\n    if (ch == '\"') {\n      stream.next();\n      return chain(stream, state, tokenString('\"', \"string\"));\n    }\n    // Binary number\n    else if (ch == \"b\") {\n      stream.next();\n      stream.eatWhile(/[01]/);\n      return \"number\";\n    }\n    // Hex number\n    else if (ch == \"x\") {\n      stream.next();\n      stream.eatWhile(/[\\da-f]/i);\n      return \"number\";\n    }\n    // Octal number\n    else if (ch == \"o\") {\n      stream.next();\n      stream.eatWhile(/[0-7]/);\n      return \"number\";\n    }\n    // Token concatenation in macros\n    else if (ch == '#') {\n      stream.next();\n      return \"punctuation\";\n    }\n    // Sequence literals\n    else if ((ch == '[') || (ch == '(')) {\n      stream.next();\n      return \"bracket\";\n      // Hash symbol\n    } else if (stream.match(/f|t|all-keys|include|key|next|rest/i)) {\n      return \"atom\";\n    } else {\n      stream.eatWhile(/[-a-zA-Z]/);\n      return \"error\";\n    }\n  } else if (ch == \"~\") {\n    stream.next();\n    ch = stream.peek();\n    if (ch == \"=\") {\n      stream.next();\n      ch = stream.peek();\n      if (ch == \"=\") {\n        stream.next();\n        return \"operator\";\n      }\n      return \"operator\";\n    }\n    return \"operator\";\n  } else if (ch == \":\") {\n    stream.next();\n    ch = stream.peek();\n    if (ch == \"=\") {\n      stream.next();\n      return \"operator\";\n    } else if (ch == \":\") {\n      stream.next();\n      return \"punctuation\";\n    }\n  } else if (\"[](){}\".indexOf(ch) != -1) {\n    stream.next();\n    return \"bracket\";\n  } else if (\".,\".indexOf(ch) != -1) {\n    stream.next();\n    return \"punctuation\";\n  } else if (stream.match(\"end\")) {\n    return \"keyword\";\n  }\n  for (var name in patterns) {\n    if (patterns.hasOwnProperty(name)) {\n      var pattern = patterns[name];\n      if ((pattern instanceof Array && some(pattern, function(p) {\n        return stream.match(p);\n      })) || stream.match(pattern))\n        return patternStyles[name];\n    }\n  }\n  if (/[+\\-*\\/^=<>&|]/.test(ch)) {\n    stream.next();\n    return \"operator\";\n  }\n  if (stream.match(\"define\")) {\n    return \"def\";\n  } else {\n    stream.eatWhile(/[\\w\\-]/);\n    // Keyword\n    if (wordLookup.hasOwnProperty(stream.current())) {\n      return styleLookup[stream.current()];\n    } else if (stream.current().match(symbol)) {\n      return \"variable\";\n    } else {\n      stream.next();\n      return \"variableName.standard\";\n    }\n  }\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, maybeNested = false, nestedCount = 0, ch;\n  while ((ch = stream.next())) {\n    if (ch == \"/\" && maybeEnd) {\n      if (nestedCount > 0) {\n        nestedCount--;\n      } else {\n        state.tokenize = tokenBase;\n        break;\n      }\n    } else if (ch == \"*\" && maybeNested) {\n      nestedCount++;\n    }\n    maybeEnd = (ch == \"*\");\n    maybeNested = (ch == \"/\");\n  }\n  return \"comment\";\n}\n\nfunction tokenString(quote, style) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end || !escaped) {\n      state.tokenize = tokenBase;\n    }\n    return style;\n  };\n}\n\n// Interface\nexport const dylan = {\n  name: \"dylan\",\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      currentIndent: 0\n    };\n  },\n  token: function(stream, state) {\n    if (stream.eatSpace())\n      return null;\n    var style = state.tokenize(stream, state);\n    return style;\n  },\n  languageData: {\n    commentTokens: {block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n\n"],"names":["forEach","arr","f","i","length","some","words","unnamedDefinition","namedDefinition","typeParameterizedDefinition","otherParameterizedDefinition","constantSimpleDefinition","variableSimpleDefinition","otherSimpleDefinition","statement","separator","other","signalingCalls","concat","symbolPattern","symbol","RegExp","patterns","symbolKeyword","symbolClass","symbolGlobal","symbolConstant","patternStyles","patternName","hasOwnProperty","styles","wordLookup","styleLookup","type","word","chain","stream","state","tokenize","tokenBase","ch","peek","next","tokenString","eat","tokenComment","skipToEnd","backUp","test","match","eatWhile","indexOf","name","pattern","Array","p","current","maybeEnd","maybeNested","nestedCount","quote","style","escaped","end","dylan","startState","currentIndent","token","eatSpace","languageData","commentTokens","block","open","close"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}