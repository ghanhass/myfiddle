{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_mathematica_js.js","mappings":"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","sources":["./node_modules/@codemirror/legacy-modes/mode/mathematica.js"],"sourcesContent":["// used pattern building blocks\nvar Identifier = '[a-zA-Z\\\\$][a-zA-Z0-9\\\\$]*';\nvar pBase      = \"(?:\\\\d+)\";\nvar pFloat     = \"(?:\\\\.\\\\d+|\\\\d+\\\\.\\\\d*|\\\\d+)\";\nvar pFloatBase = \"(?:\\\\.\\\\w+|\\\\w+\\\\.\\\\w*|\\\\w+)\";\nvar pPrecision = \"(?:`(?:`?\"+pFloat+\")?)\";\n\n// regular expressions\nvar reBaseForm        = new RegExp('(?:'+pBase+'(?:\\\\^\\\\^'+pFloatBase+pPrecision+'?(?:\\\\*\\\\^[+-]?\\\\d+)?))');\nvar reFloatForm       = new RegExp('(?:' + pFloat + pPrecision + '?(?:\\\\*\\\\^[+-]?\\\\d+)?)');\nvar reIdInContext     = new RegExp('(?:`?)(?:' + Identifier + ')(?:`(?:' + Identifier + '))*(?:`?)');\n\nfunction tokenBase(stream, state) {\n  var ch;\n\n  // get next character\n  ch = stream.next();\n\n  // string\n  if (ch === '\"') {\n    state.tokenize = tokenString;\n    return state.tokenize(stream, state);\n  }\n\n  // comment\n  if (ch === '(') {\n    if (stream.eat('*')) {\n      state.commentLevel++;\n      state.tokenize = tokenComment;\n      return state.tokenize(stream, state);\n    }\n  }\n\n  // go back one character\n  stream.backUp(1);\n\n  // look for numbers\n  // Numbers in a baseform\n  if (stream.match(reBaseForm, true, false)) {\n    return 'number';\n  }\n\n  // Mathematica numbers. Floats (1.2, .2, 1.) can have optionally a precision (`float) or an accuracy definition\n  // (``float). Note: while 1.2` is possible 1.2`` is not. At the end an exponent (float*^+12) can follow.\n  if (stream.match(reFloatForm, true, false)) {\n    return 'number';\n  }\n\n  /* In[23] and Out[34] */\n  if (stream.match(/(?:In|Out)\\[[0-9]*\\]/, true, false)) {\n    return 'atom';\n  }\n\n  // usage\n  if (stream.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*(?:`[a-zA-Z0-9\\$]+)*::usage)/, true, false)) {\n    return 'meta';\n  }\n\n  // message\n  if (stream.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*(?:`[a-zA-Z0-9\\$]+)*::[a-zA-Z\\$][a-zA-Z0-9\\$]*):?/, true, false)) {\n    return 'string.special';\n  }\n\n  // this makes a look-ahead match for something like variable:{_Integer}\n  // the match is then forwarded to the mma-patterns tokenizer.\n  if (stream.match(/([a-zA-Z\\$][a-zA-Z0-9\\$]*\\s*:)(?:(?:[a-zA-Z\\$][a-zA-Z0-9\\$]*)|(?:[^:=>~@\\^\\&\\*\\)\\[\\]'\\?,\\|])).*/, true, false)) {\n    return 'variableName.special';\n  }\n\n  // catch variables which are used together with Blank (_), BlankSequence (__) or BlankNullSequence (___)\n  // Cannot start with a number, but can have numbers at any other position. Examples\n  // blub__Integer, a1_, b34_Integer32\n  if (stream.match(/[a-zA-Z\\$][a-zA-Z0-9\\$]*_+[a-zA-Z\\$][a-zA-Z0-9\\$]*/, true, false)) {\n    return 'variableName.special';\n  }\n  if (stream.match(/[a-zA-Z\\$][a-zA-Z0-9\\$]*_+/, true, false)) {\n    return 'variableName.special';\n  }\n  if (stream.match(/_+[a-zA-Z\\$][a-zA-Z0-9\\$]*/, true, false)) {\n    return 'variableName.special';\n  }\n\n  // Named characters in Mathematica, like \\[Gamma].\n  if (stream.match(/\\\\\\[[a-zA-Z\\$][a-zA-Z0-9\\$]*\\]/, true, false)) {\n    return 'character';\n  }\n\n  // Match all braces separately\n  if (stream.match(/(?:\\[|\\]|{|}|\\(|\\))/, true, false)) {\n    return 'bracket';\n  }\n\n  // Catch Slots (#, ##, #3, ##9 and the V10 named slots #name). I have never seen someone using more than one digit after #, so we match\n  // only one.\n  if (stream.match(/(?:#[a-zA-Z\\$][a-zA-Z0-9\\$]*|#+[0-9]?)/, true, false)) {\n    return 'variableName.constant';\n  }\n\n  // Literals like variables, keywords, functions\n  if (stream.match(reIdInContext, true, false)) {\n    return 'keyword';\n  }\n\n  // operators. Note that operators like @@ or /; are matched separately for each symbol.\n  if (stream.match(/(?:\\\\|\\+|\\-|\\*|\\/|,|;|\\.|:|@|~|=|>|<|&|\\||_|`|'|\\^|\\?|!|%)/, true, false)) {\n    return 'operator';\n  }\n\n  // everything else is an error\n  stream.next(); // advance the stream.\n  return 'error';\n}\n\nfunction tokenString(stream, state) {\n  var next, end = false, escaped = false;\n  while ((next = stream.next()) != null) {\n    if (next === '\"' && !escaped) {\n      end = true;\n      break;\n    }\n    escaped = !escaped && next === '\\\\';\n  }\n  if (end && !escaped) {\n    state.tokenize = tokenBase;\n  }\n  return 'string';\n};\n\nfunction tokenComment(stream, state) {\n  var prev, next;\n  while(state.commentLevel > 0 && (next = stream.next()) != null) {\n    if (prev === '(' && next === '*') state.commentLevel++;\n    if (prev === '*' && next === ')') state.commentLevel--;\n    prev = next;\n  }\n  if (state.commentLevel <= 0) {\n    state.tokenize = tokenBase;\n  }\n  return 'comment';\n}\n\nexport const mathematica = {\n  name: \"mathematica\",\n  startState: function() {return {tokenize: tokenBase, commentLevel: 0};},\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  },\n  languageData: {\n    commentTokens: {block: {open: \"(*\", close: \"*)\"}}\n  }\n}\n\n"],"names":["Identifier","pBase","pFloat","pFloatBase","pPrecision","reBaseForm","RegExp","reFloatForm","reIdInContext","tokenBase","stream","state","ch","next","tokenize","tokenString","eat","commentLevel","tokenComment","backUp","match","end","escaped","prev","mathematica","name","startState","token","eatSpace","languageData","commentTokens","block","open","close"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}