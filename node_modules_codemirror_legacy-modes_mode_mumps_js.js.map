{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_mumps_js.js","mappings":"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","sources":["./node_modules/@codemirror/legacy-modes/mode/mumps.js"],"sourcesContent":["function wordRegexp(words) {\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n}\n\nvar singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/&#!_?\\\\\\\\<>=\\\\'\\\\[\\\\]]\");\nvar doubleOperators = new RegExp(\"^(('=)|(<=)|(>=)|('>)|('<)|([[)|(]])|(^$))\");\nvar singleDelimiters = new RegExp(\"^[\\\\.,:]\");\nvar brackets = new RegExp(\"[()]\");\nvar identifiers = new RegExp(\"^[%A-Za-z][A-Za-z0-9]*\");\nvar commandKeywords = [\"break\",\"close\",\"do\",\"else\",\"for\",\"goto\", \"halt\", \"hang\", \"if\", \"job\",\"kill\",\"lock\",\"merge\",\"new\",\"open\", \"quit\", \"read\", \"set\", \"tcommit\", \"trollback\", \"tstart\", \"use\", \"view\", \"write\", \"xecute\", \"b\",\"c\",\"d\",\"e\",\"f\",\"g\", \"h\", \"i\", \"j\",\"k\",\"l\",\"m\",\"n\",\"o\", \"q\", \"r\", \"s\", \"tc\", \"tro\", \"ts\", \"u\", \"v\", \"w\", \"x\"];\n// The following list includes intrinsic functions _and_ special variables\nvar intrinsicFuncsWords = [\"\\\\$ascii\", \"\\\\$char\", \"\\\\$data\", \"\\\\$ecode\", \"\\\\$estack\", \"\\\\$etrap\", \"\\\\$extract\", \"\\\\$find\", \"\\\\$fnumber\", \"\\\\$get\", \"\\\\$horolog\", \"\\\\$io\", \"\\\\$increment\", \"\\\\$job\", \"\\\\$justify\", \"\\\\$length\", \"\\\\$name\", \"\\\\$next\", \"\\\\$order\", \"\\\\$piece\", \"\\\\$qlength\", \"\\\\$qsubscript\", \"\\\\$query\", \"\\\\$quit\", \"\\\\$random\", \"\\\\$reverse\", \"\\\\$select\", \"\\\\$stack\", \"\\\\$test\", \"\\\\$text\", \"\\\\$translate\", \"\\\\$view\", \"\\\\$x\", \"\\\\$y\", \"\\\\$a\", \"\\\\$c\", \"\\\\$d\", \"\\\\$e\", \"\\\\$ec\", \"\\\\$es\", \"\\\\$et\", \"\\\\$f\", \"\\\\$fn\", \"\\\\$g\", \"\\\\$h\", \"\\\\$i\", \"\\\\$j\", \"\\\\$l\", \"\\\\$n\", \"\\\\$na\", \"\\\\$o\", \"\\\\$p\", \"\\\\$q\", \"\\\\$ql\", \"\\\\$qs\", \"\\\\$r\", \"\\\\$re\", \"\\\\$s\", \"\\\\$st\", \"\\\\$t\", \"\\\\$tr\", \"\\\\$v\", \"\\\\$z\"];\nvar intrinsicFuncs = wordRegexp(intrinsicFuncsWords);\nvar command = wordRegexp(commandKeywords);\n\nfunction tokenBase(stream, state) {\n  if (stream.sol()) {\n    state.label = true;\n    state.commandMode = 0;\n  }\n\n  // The <space> character has meaning in MUMPS. Ignoring consecutive\n  // spaces would interfere with interpreting whether the next non-space\n  // character belongs to the command or argument context.\n\n  // Examine each character and update a mode variable whose interpretation is:\n  //   >0 => command    0 => argument    <0 => command post-conditional\n  var ch = stream.peek();\n\n  if (ch == \" \" || ch == \"\\t\") { // Pre-process <space>\n    state.label = false;\n    if (state.commandMode == 0)\n      state.commandMode = 1;\n    else if ((state.commandMode < 0) || (state.commandMode == 2))\n      state.commandMode = 0;\n  } else if ((ch != \".\") && (state.commandMode > 0)) {\n    if (ch == \":\")\n      state.commandMode = -1;   // SIS - Command post-conditional\n    else\n      state.commandMode = 2;\n  }\n\n  // Do not color parameter list as line tag\n  if ((ch === \"(\") || (ch === \"\\u0009\"))\n    state.label = false;\n\n  // MUMPS comment starts with \";\"\n  if (ch === \";\") {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  // Number Literals // SIS/RLM - MUMPS permits canonic number followed by concatenate operator\n  if (stream.match(/^[-+]?\\d+(\\.\\d+)?([eE][-+]?\\d+)?/))\n    return \"number\";\n\n  // Handle Strings\n  if (ch == '\"') {\n    if (stream.skipTo('\"')) {\n      stream.next();\n      return \"string\";\n    } else {\n      stream.skipToEnd();\n      return \"error\";\n    }\n  }\n\n  // Handle operators and Delimiters\n  if (stream.match(doubleOperators) || stream.match(singleOperators))\n    return \"operator\";\n\n  // Prevents leading \".\" in DO block from falling through to error\n  if (stream.match(singleDelimiters))\n    return null;\n\n  if (brackets.test(ch)) {\n    stream.next();\n    return \"bracket\";\n  }\n\n  if (state.commandMode > 0 && stream.match(command))\n    return \"controlKeyword\";\n\n  if (stream.match(intrinsicFuncs))\n    return \"builtin\";\n\n  if (stream.match(identifiers))\n    return \"variable\";\n\n  // Detect dollar-sign when not a documented intrinsic function\n  // \"^\" may introduce a GVN or SSVN - Color same as function\n  if (ch === \"$\" || ch === \"^\") {\n    stream.next();\n    return \"builtin\";\n  }\n\n  // MUMPS Indirection\n  if (ch === \"@\") {\n    stream.next();\n    return \"string.special\";\n  }\n\n  if (/[\\w%]/.test(ch)) {\n    stream.eatWhile(/[\\w%]/);\n    return \"variable\";\n  }\n\n  // Handle non-detected items\n  stream.next();\n  return \"error\";\n}\n\nexport const mumps = {\n  name: \"mumps\",\n  startState: function() {\n    return {\n      label: false,\n      commandMode: 0\n    };\n  },\n\n  token: function(stream, state) {\n    var style = tokenBase(stream, state);\n    if (state.label) return \"tag\";\n    return style;\n  }\n};\n"],"names":["wordRegexp","words","RegExp","join","singleOperators","doubleOperators","singleDelimiters","brackets","identifiers","commandKeywords","intrinsicFuncsWords","intrinsicFuncs","command","tokenBase","stream","state","sol","label","commandMode","ch","peek","skipToEnd","match","skipTo","next","test","eatWhile","mumps","name","startState","token","style"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}