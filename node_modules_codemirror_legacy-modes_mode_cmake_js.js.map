{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_cmake_js.js","mappings":";;;;;;;;;;;;;AAAA,IAAIA,cAAc,GAAG,uBAAuB;AAE5C,SAASC,WAAWA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAClC,IAAIC,OAAO;IAAEC,IAAI;IAAEC,SAAS,GAAG,KAAK;EACpC,OAAO,CAACJ,MAAM,CAACK,GAAG,CAAC,CAAC,IAAI,CAACH,OAAO,GAAGF,MAAM,CAACM,IAAI,CAAC,CAAC,KAAKL,KAAK,CAACM,OAAO,EAAE;IAClE,IAAIL,OAAO,KAAK,GAAG,IAAIC,IAAI,IAAI,IAAI,IAAIF,KAAK,CAACM,OAAO,IAAI,GAAG,EAAE;MAC3DH,SAAS,GAAG,IAAI;MAChB;IACF;IACAD,IAAI,GAAGD,OAAO;EAChB;EACA,IAAIE,SAAS,EAAE;IACbJ,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC;EAClB;EACA,IAAIN,OAAO,IAAID,KAAK,CAACM,OAAO,EAAE;IAC5BN,KAAK,CAACQ,cAAc,GAAG,KAAK;EAC9B,CAAC,MAAM;IACLR,KAAK,CAACQ,cAAc,GAAG,IAAI;EAC7B;EACA,OAAO,QAAQ;AACjB;AAEA,SAASC,QAAQA,CAACV,MAAM,EAAEC,KAAK,EAAE;EAC/B,IAAIU,EAAE,GAAGX,MAAM,CAACM,IAAI,CAAC,CAAC;;EAEtB;EACA,IAAIK,EAAE,KAAK,GAAG,EAAE;IACd,IAAIX,MAAM,CAACY,KAAK,CAACd,cAAc,CAAC,EAAE;MAChC,OAAO,sBAAsB;IAC/B;IACA,OAAO,UAAU;EACnB;EACA;EACA,IAAIG,KAAK,CAACQ,cAAc,EAAE;IACxB;IACAT,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC;IAChB,OAAOT,WAAW,CAACC,MAAM,EAAEC,KAAK,CAAC;EACnC;EACA;EACA;EACA,IAAID,MAAM,CAACY,KAAK,CAAC,aAAa,CAAC,IAAIZ,MAAM,CAACY,KAAK,CAAC,eAAe,CAAC,EAAE;IAChEZ,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC;IAChB,OAAO,KAAK;EACd;EACA,IAAIG,EAAE,IAAI,GAAG,EAAE;IACbX,MAAM,CAACa,SAAS,CAAC,CAAC;IAClB,OAAO,SAAS;EAClB;EACA;EACA,IAAIF,EAAE,IAAI,GAAG,IAAIA,EAAE,IAAI,GAAG,EAAE;IAC1B;IACAV,KAAK,CAACM,OAAO,GAAGI,EAAE;IAClB;IACA,OAAOZ,WAAW,CAACC,MAAM,EAAEC,KAAK,CAAC;EACnC;EACA,IAAIU,EAAE,IAAI,GAAG,IAAIA,EAAE,IAAI,GAAG,EAAE;IAC1B,OAAO,SAAS;EAClB;EACA,IAAIA,EAAE,CAACC,KAAK,CAAC,OAAO,CAAC,EAAE;IACrB,OAAO,QAAQ;EACjB;EACAZ,MAAM,CAACc,QAAQ,CAAC,OAAO,CAAC;EACxB,OAAO,IAAI;AACb;AACO,MAAMC,KAAK,GAAG;EACnBC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE,SAAAA,CAAA,EAAY;IACtB,IAAIhB,KAAK,GAAG,CAAC,CAAC;IACdA,KAAK,CAACiB,YAAY,GAAG,KAAK;IAC1BjB,KAAK,CAACkB,SAAS,GAAG,KAAK;IACvBlB,KAAK,CAACQ,cAAc,GAAG,KAAK;IAC5BR,KAAK,CAACM,OAAO,GAAG,KAAK;IACrB,OAAON,KAAK;EACd,CAAC;EACDmB,KAAK,EAAE,SAAAA,CAAUpB,MAAM,EAAEC,KAAK,EAAE;IAC9B,IAAID,MAAM,CAACqB,QAAQ,CAAC,CAAC,EAAE,OAAO,IAAI;IAClC,OAAOX,QAAQ,CAACV,MAAM,EAAEC,KAAK,CAAC;EAChC;AACF,CAAC,C","sources":["./node_modules/@codemirror/legacy-modes/mode/cmake.js"],"sourcesContent":["var variable_regex = /({)?[a-zA-Z0-9_]+(})?/;\n\nfunction tokenString(stream, state) {\n  var current, prev, found_var = false;\n  while (!stream.eol() && (current = stream.next()) != state.pending) {\n    if (current === '$' && prev != '\\\\' && state.pending == '\"') {\n      found_var = true;\n      break;\n    }\n    prev = current;\n  }\n  if (found_var) {\n    stream.backUp(1);\n  }\n  if (current == state.pending) {\n    state.continueString = false;\n  } else {\n    state.continueString = true;\n  }\n  return \"string\";\n}\n\nfunction tokenize(stream, state) {\n  var ch = stream.next();\n\n  // Have we found a variable?\n  if (ch === '$') {\n    if (stream.match(variable_regex)) {\n      return 'variableName.special';\n    }\n    return 'variable';\n  }\n  // Should we still be looking for the end of a string?\n  if (state.continueString) {\n    // If so, go through the loop again\n    stream.backUp(1);\n    return tokenString(stream, state);\n  }\n  // Do we just have a function on our hands?\n  // In 'cmake_minimum_required (VERSION 2.8.8)', 'cmake_minimum_required' is matched\n  if (stream.match(/(\\s+)?\\w+\\(/) || stream.match(/(\\s+)?\\w+\\ \\(/)) {\n    stream.backUp(1);\n    return 'def';\n  }\n  if (ch == \"#\") {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  // Have we found a string?\n  if (ch == \"'\" || ch == '\"') {\n    // Store the type (single or double)\n    state.pending = ch;\n    // Perform the looping function to find the end\n    return tokenString(stream, state);\n  }\n  if (ch == '(' || ch == ')') {\n    return 'bracket';\n  }\n  if (ch.match(/[0-9]/)) {\n    return 'number';\n  }\n  stream.eatWhile(/[\\w-]/);\n  return null;\n}\nexport const cmake = {\n  name: \"cmake\",\n  startState: function () {\n    var state = {};\n    state.inDefinition = false;\n    state.inInclude = false;\n    state.continueString = false;\n    state.pending = false;\n    return state;\n  },\n  token: function (stream, state) {\n    if (stream.eatSpace()) return null;\n    return tokenize(stream, state);\n  }\n};\n\n"],"names":["variable_regex","tokenString","stream","state","current","prev","found_var","eol","next","pending","backUp","continueString","tokenize","ch","match","skipToEnd","eatWhile","cmake","name","startState","inDefinition","inInclude","token","eatSpace"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}