{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_mbox_js.js","mappings":"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","sources":["./node_modules/@codemirror/legacy-modes/mode/mbox.js"],"sourcesContent":["var rfc2822 = [\n  \"From\", \"Sender\", \"Reply-To\", \"To\", \"Cc\", \"Bcc\", \"Message-ID\",\n  \"In-Reply-To\", \"References\", \"Resent-From\", \"Resent-Sender\", \"Resent-To\",\n  \"Resent-Cc\", \"Resent-Bcc\", \"Resent-Message-ID\", \"Return-Path\", \"Received\"\n];\nvar rfc2822NoEmail = [\n  \"Date\", \"Subject\", \"Comments\", \"Keywords\", \"Resent-Date\"\n];\n\nvar whitespace = /^[ \\t]/;\nvar separator = /^From /; // See RFC 4155\nvar rfc2822Header = new RegExp(\"^(\" + rfc2822.join(\"|\") + \"): \");\nvar rfc2822HeaderNoEmail = new RegExp(\"^(\" + rfc2822NoEmail.join(\"|\") + \"): \");\nvar header = /^[^:]+:/; // Optional fields defined in RFC 2822\nvar email = /^[^ ]+@[^ ]+/;\nvar untilEmail = /^.*?(?=[^ ]+?@[^ ]+)/;\nvar bracketedEmail = /^<.*?>/;\nvar untilBracketedEmail = /^.*?(?=<.*>)/;\n\nfunction styleForHeader(header) {\n  if (header === \"Subject\") return \"header\";\n  return \"string\";\n}\n\nfunction readToken(stream, state) {\n  if (stream.sol()) {\n    // From last line\n    state.inSeparator = false;\n    if (state.inHeader && stream.match(whitespace)) {\n      // Header folding\n      return null;\n    } else {\n      state.inHeader = false;\n      state.header = null;\n    }\n\n    if (stream.match(separator)) {\n      state.inHeaders = true;\n      state.inSeparator = true;\n      return \"atom\";\n    }\n\n    var match;\n    var emailPermitted = false;\n    if ((match = stream.match(rfc2822HeaderNoEmail)) ||\n        (emailPermitted = true) && (match = stream.match(rfc2822Header))) {\n      state.inHeaders = true;\n      state.inHeader = true;\n      state.emailPermitted = emailPermitted;\n      state.header = match[1];\n      return \"atom\";\n    }\n\n    // Use vim's heuristics: recognize custom headers only if the line is in a\n    // block of legitimate headers.\n    if (state.inHeaders && (match = stream.match(header))) {\n      state.inHeader = true;\n      state.emailPermitted = true;\n      state.header = match[1];\n      return \"atom\";\n    }\n\n    state.inHeaders = false;\n    stream.skipToEnd();\n    return null;\n  }\n\n  if (state.inSeparator) {\n    if (stream.match(email)) return \"link\";\n    if (stream.match(untilEmail)) return \"atom\";\n    stream.skipToEnd();\n    return \"atom\";\n  }\n\n  if (state.inHeader) {\n    var style = styleForHeader(state.header);\n\n    if (state.emailPermitted) {\n      if (stream.match(bracketedEmail)) return style + \" link\";\n      if (stream.match(untilBracketedEmail)) return style;\n    }\n    stream.skipToEnd();\n    return style;\n  }\n\n  stream.skipToEnd();\n  return null;\n};\n\nexport const mbox = {\n  name: \"mbox\",\n  startState: function() {\n    return {\n      // Is in a mbox separator\n      inSeparator: false,\n      // Is in a mail header\n      inHeader: false,\n      // If bracketed email is permitted. Only applicable when inHeader\n      emailPermitted: false,\n      // Name of current header\n      header: null,\n      // Is in a region of mail headers\n      inHeaders: false\n    };\n  },\n  token: readToken,\n  blankLine: function(state) {\n    state.inHeaders = state.inSeparator = state.inHeader = false;\n  },\n  languageData: {\n    autocomplete: rfc2822.concat(rfc2822NoEmail)\n  }\n}\n\n"],"names":["rfc2822","rfc2822NoEmail","whitespace","separator","rfc2822Header","RegExp","join","rfc2822HeaderNoEmail","header","email","untilEmail","bracketedEmail","untilBracketedEmail","styleForHeader","readToken","stream","state","sol","inSeparator","inHeader","match","inHeaders","emailPermitted","skipToEnd","style","mbox","name","startState","token","blankLine","languageData","autocomplete","concat"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}