{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_pig_js.js","mappings":"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","sources":["./node_modules/@codemirror/legacy-modes/mode/pig.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\n// builtin funcs taken from trunk revision 1303237\nvar pBuiltins = \"ABS ACOS ARITY ASIN ATAN AVG BAGSIZE BINSTORAGE BLOOM BUILDBLOOM CBRT CEIL \"\n    + \"CONCAT COR COS COSH COUNT COUNT_STAR COV CONSTANTSIZE CUBEDIMENSIONS DIFF DISTINCT DOUBLEABS \"\n    + \"DOUBLEAVG DOUBLEBASE DOUBLEMAX DOUBLEMIN DOUBLEROUND DOUBLESUM EXP FLOOR FLOATABS FLOATAVG \"\n    + \"FLOATMAX FLOATMIN FLOATROUND FLOATSUM GENERICINVOKER INDEXOF INTABS INTAVG INTMAX INTMIN \"\n    + \"INTSUM INVOKEFORDOUBLE INVOKEFORFLOAT INVOKEFORINT INVOKEFORLONG INVOKEFORSTRING INVOKER \"\n    + \"ISEMPTY JSONLOADER JSONMETADATA JSONSTORAGE LAST_INDEX_OF LCFIRST LOG LOG10 LOWER LONGABS \"\n    + \"LONGAVG LONGMAX LONGMIN LONGSUM MAX MIN MAPSIZE MONITOREDUDF NONDETERMINISTIC OUTPUTSCHEMA  \"\n    + \"PIGSTORAGE PIGSTREAMING RANDOM REGEX_EXTRACT REGEX_EXTRACT_ALL REPLACE ROUND SIN SINH SIZE \"\n    + \"SQRT STRSPLIT SUBSTRING SUM STRINGCONCAT STRINGMAX STRINGMIN STRINGSIZE TAN TANH TOBAG \"\n    + \"TOKENIZE TOMAP TOP TOTUPLE TRIM TEXTLOADER TUPLESIZE UCFIRST UPPER UTF8STORAGECONVERTER \";\n\n// taken from QueryLexer.g\nvar pKeywords = \"VOID IMPORT RETURNS DEFINE LOAD FILTER FOREACH ORDER CUBE DISTINCT COGROUP \"\n    + \"JOIN CROSS UNION SPLIT INTO IF OTHERWISE ALL AS BY USING INNER OUTER ONSCHEMA PARALLEL \"\n    + \"PARTITION GROUP AND OR NOT GENERATE FLATTEN ASC DESC IS STREAM THROUGH STORE MAPREDUCE \"\n    + \"SHIP CACHE INPUT OUTPUT STDERROR STDIN STDOUT LIMIT SAMPLE LEFT RIGHT FULL EQ GT LT GTE LTE \"\n    + \"NEQ MATCHES TRUE FALSE DUMP\";\n\n// data types\nvar pTypes = \"BOOLEAN INT LONG FLOAT DOUBLE CHARARRAY BYTEARRAY BAG TUPLE MAP \";\n\nvar builtins = words(pBuiltins), keywords = words(pKeywords), types = words(pTypes)\n\nvar isOperatorChar = /[*+\\-%<>=&?:\\/!|]/;\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\n\nfunction tokenComment(stream, state) {\n  var isEnd = false;\n  var ch;\n  while(ch = stream.next()) {\n    if(ch == \"/\" && isEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    isEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        end = true; break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end || !escaped)\n      state.tokenize = tokenBase;\n    return \"error\";\n  };\n}\n\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  // is a start of string?\n  if (ch == '\"' || ch == \"'\")\n    return chain(stream, state, tokenString(ch));\n  // is it one of the special chars\n  else if(/[\\[\\]{}\\(\\),;\\.]/.test(ch))\n    return null;\n  // is it a number?\n  else if(/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n  // multi line comment or operator\n  else if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      return chain(stream, state, tokenComment);\n    }\n    else {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n  }\n  // single line comment or operator\n  else if (ch==\"-\") {\n    if(stream.eat(\"-\")){\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    else {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n  }\n  // is it an operator\n  else if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  else {\n    // get the while word\n    stream.eatWhile(/[\\w\\$_]/);\n    // is it one of the listed keywords?\n    if (keywords && keywords.propertyIsEnumerable(stream.current().toUpperCase())) {\n      //keywords can be used as variables like flatten(group), group.$0 etc..\n      if (!stream.eat(\")\") && !stream.eat(\".\"))\n        return \"keyword\";\n    }\n    // is it one of the builtin functions?\n    if (builtins && builtins.propertyIsEnumerable(stream.current().toUpperCase()))\n      return \"builtin\";\n    // is it one of the listed types?\n    if (types && types.propertyIsEnumerable(stream.current().toUpperCase()))\n      return \"type\";\n    // default is a 'variable'\n    return \"variable\";\n  }\n}\n\n// Interface\nexport const pig = {\n  name: \"pig\",\n\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    if(stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n    return style;\n  },\n\n  languageData: {\n    autocomplete: (pBuiltins + pTypes + pKeywords).split(\" \")\n  }\n};\n"],"names":["words","str","obj","split","i","length","pBuiltins","pKeywords","pTypes","builtins","keywords","types","isOperatorChar","chain","stream","state","f","tokenize","tokenComment","isEnd","ch","next","tokenBase","tokenString","quote","escaped","end","test","eatWhile","eat","skipToEnd","propertyIsEnumerable","current","toUpperCase","pig","name","startState","startOfLine","token","eatSpace","style","languageData","autocomplete"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}