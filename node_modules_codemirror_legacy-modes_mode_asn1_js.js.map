{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_asn1_js.js","mappings":";;;;;;;;;;;;;AAAA,SAASA,KAAKA,CAACC,GAAG,EAAE;EAClB,IAAIC,GAAG,GAAG,CAAC,CAAC;IAAEF,KAAK,GAAGC,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;EACpC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACK,MAAM,EAAE,EAAED,CAAC,EAAEF,GAAG,CAACF,KAAK,CAACI,CAAC,CAAC,CAAC,GAAG,IAAI;EAC3D,OAAOF,GAAG;AACZ;AAEA,MAAMI,QAAQ,GAAG;EACfC,QAAQ,EAAEP,KAAK,CAAC,mDAAmD,GACnD,qDAAqD,GACrD,kDAAkD,GAClD,kDAAkD,GAClD,kDAAkD,GAClD,sDAAsD,GACtD,0DAA0D,GAC1D,kBAAkB,CAAC;EACnCQ,SAAS,EAAER,KAAK,CAAC,8CAA8C,CAAC;EAChES,YAAY,EAAET,KAAK,CAAC,sDAAsD,GACtD,gDAAgD,GAChD,+CAA+C,GAC/C,6CAA6C,GAC7C,qBAAqB,CAAC;EAC1CU,MAAM,EAAEV,KAAK,CAAC,uCAAuC,CAAC;EACtDW,IAAI,EAAEX,KAAK,CAAC,sDAAsD,GACtD,YAAY,CAAC;EACzBY,OAAO,EAAEZ,KAAK,CAAC,oDAAoD,GACpD,mDAAmD,GACnD,8CAA8C,GAC9C,oDAAoD,GACpD,mDAAmD,GACnD,wCAAwC,GACxC,gDAAgD,GAChD,sDAAsD,GACtD,oDAAoD,GACpD,sDAAsD,CAAC;EACtEa,QAAQ,EAAEb,KAAK,CAAC,uDAAuD,GACvD,qDAAqD,GACrD,UAAU,CAAC;EAC3Bc,WAAW,EAAEd,KAAK,CAAC,gDAAgD,GAChD,yBAAyB,CAAC;EAC7Ce,gBAAgB,EAAE;AACpB,CAAC;AAEM,SAASC,IAAIA,CAACC,YAAY,EAAE;EACjC,IAAIV,QAAQ,GAAGU,YAAY,CAACV,QAAQ,IAAID,QAAQ,CAACC,QAAQ;IACrDC,SAAS,GAAGS,YAAY,CAACT,SAAS,IAAIF,QAAQ,CAACE,SAAS;IACxDC,YAAY,GAAGQ,YAAY,CAACR,YAAY,IAAIH,QAAQ,CAACG,YAAY;IACjEC,MAAM,GAAGO,YAAY,CAACP,MAAM,IAAIJ,QAAQ,CAACI,MAAM;IAC/CC,IAAI,GAAGM,YAAY,CAACN,IAAI,IAAIL,QAAQ,CAACK,IAAI;IACzCC,OAAO,GAAGK,YAAY,CAACL,OAAO,IAAIN,QAAQ,CAACM,OAAO;IAClDC,QAAQ,GAAGI,YAAY,CAACJ,QAAQ,IAAIP,QAAQ,CAACO,QAAQ;IACrDC,WAAW,GAAGG,YAAY,CAACH,WAAW,IAAGR,QAAQ,CAACQ,WAAW;IAC7DC,gBAAgB,GAAGE,YAAY,CAACF,gBAAgB,IAAIT,QAAQ,CAACS,gBAAgB;IAC7EG,gBAAgB,GAAGD,YAAY,CAACC,gBAAgB,KAAK,KAAK;EAC9D,IAAIC,cAAc,GAAG,QAAQ;EAC7B,IAAIC,OAAO;EAEX,SAASC,SAASA,CAACC,MAAM,EAAEC,KAAK,EAAE;IAChC,IAAIC,EAAE,GAAGF,MAAM,CAACG,IAAI,CAAC,CAAC;IACtB,IAAID,EAAE,IAAI,GAAG,IAAIA,EAAE,IAAI,GAAG,EAAE;MAC1BD,KAAK,CAACG,QAAQ,GAAGC,WAAW,CAACH,EAAE,CAAC;MAChC,OAAOD,KAAK,CAACG,QAAQ,CAACJ,MAAM,EAAEC,KAAK,CAAC;IACtC;IACA,IAAI,kBAAkB,CAACK,IAAI,CAACJ,EAAE,CAAC,EAAE;MAC/BJ,OAAO,GAAGI,EAAE;MACZ,OAAO,aAAa;IACtB;IACA,IAAIA,EAAE,IAAI,GAAG,EAAC;MACZ,IAAIF,MAAM,CAACO,GAAG,CAAC,GAAG,CAAC,EAAE;QACnBP,MAAM,CAACQ,SAAS,CAAC,CAAC;QAClB,OAAO,SAAS;MAClB;IACF;IACA,IAAI,IAAI,CAACF,IAAI,CAACJ,EAAE,CAAC,EAAE;MACjBF,MAAM,CAACS,QAAQ,CAAC,QAAQ,CAAC;MACzB,OAAO,QAAQ;IACjB;IACA,IAAIZ,cAAc,CAACS,IAAI,CAACJ,EAAE,CAAC,EAAE;MAC3BF,MAAM,CAACS,QAAQ,CAACZ,cAAc,CAAC;MAC/B,OAAO,UAAU;IACnB;IAEAG,MAAM,CAACS,QAAQ,CAAC,QAAQ,CAAC;IACzB,IAAIC,GAAG,GAAGV,MAAM,CAACW,OAAO,CAAC,CAAC;IAC1B,IAAI1B,QAAQ,CAAC2B,oBAAoB,CAACF,GAAG,CAAC,EAAE,OAAO,SAAS;IACxD,IAAIxB,SAAS,CAAC0B,oBAAoB,CAACF,GAAG,CAAC,EAAE,OAAO,cAAc;IAC9D,IAAIvB,YAAY,CAACyB,oBAAoB,CAACF,GAAG,CAAC,EAAE,OAAO,MAAM;IACzD,IAAItB,MAAM,CAACwB,oBAAoB,CAACF,GAAG,CAAC,EAAE,OAAO,SAAS;IACtD,IAAIrB,IAAI,CAACuB,oBAAoB,CAACF,GAAG,CAAC,EAAE,OAAO,UAAU;IACrD,IAAIpB,OAAO,CAACsB,oBAAoB,CAACF,GAAG,CAAC,EAAE,OAAO,UAAU;IACxD,IAAInB,QAAQ,CAACqB,oBAAoB,CAACF,GAAG,CAAC,EAAE,OAAO,UAAU;IACzD,IAAIlB,WAAW,CAACoB,oBAAoB,CAACF,GAAG,CAAC,EAAE,OAAO,UAAU;IAE5D,OAAO,cAAc;EACvB;EAEA,SAASL,WAAWA,CAACQ,KAAK,EAAE;IAC1B,OAAO,UAASb,MAAM,EAAEC,KAAK,EAAE;MAC7B,IAAIa,OAAO,GAAG,KAAK;QAAEX,IAAI;QAAEY,GAAG,GAAG,KAAK;MACtC,OAAO,CAACZ,IAAI,GAAGH,MAAM,CAACG,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE;QACrC,IAAIA,IAAI,IAAIU,KAAK,IAAI,CAACC,OAAO,EAAC;UAC5B,IAAIE,SAAS,GAAGhB,MAAM,CAACiB,IAAI,CAAC,CAAC;UAC7B;UACA,IAAID,SAAS,EAAC;YACZA,SAAS,GAAGA,SAAS,CAACE,WAAW,CAAC,CAAC;YACnC,IAAGF,SAAS,IAAI,GAAG,IAAIA,SAAS,IAAI,GAAG,IAAIA,SAAS,IAAI,GAAG,EACzDhB,MAAM,CAACG,IAAI,CAAC,CAAC;UACjB;UACAY,GAAG,GAAG,IAAI;UAAE;QACd;QACAD,OAAO,GAAG,CAACA,OAAO,IAAIX,IAAI,IAAI,IAAI;MACpC;MACA,IAAIY,GAAG,IAAI,EAAED,OAAO,IAAIrB,gBAAgB,CAAC,EACvCQ,KAAK,CAACG,QAAQ,GAAG,IAAI;MACvB,OAAO,QAAQ;IACjB,CAAC;EACH;EAEA,SAASe,OAAOA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAE;IACpD,IAAI,CAACJ,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,IAAI,GAAGA,IAAI;EAClB;EACA,SAASC,WAAWA,CAACxB,KAAK,EAAEyB,GAAG,EAAEJ,IAAI,EAAE;IACrC,IAAIK,MAAM,GAAG1B,KAAK,CAACmB,QAAQ;IAC3B,IAAInB,KAAK,CAAC2B,OAAO,IAAI3B,KAAK,CAAC2B,OAAO,CAACN,IAAI,IAAI,WAAW,EACpDK,MAAM,GAAG1B,KAAK,CAAC2B,OAAO,CAACR,QAAQ;IACjC,OAAOnB,KAAK,CAAC2B,OAAO,GAAG,IAAIT,OAAO,CAACQ,MAAM,EAAED,GAAG,EAAEJ,IAAI,EAAE,IAAI,EAAErB,KAAK,CAAC2B,OAAO,CAAC;EAC5E;EACA,SAASC,UAAUA,CAAC5B,KAAK,EAAE;IACzB,IAAI6B,CAAC,GAAG7B,KAAK,CAAC2B,OAAO,CAACN,IAAI;IAC1B,IAAIQ,CAAC,IAAI,GAAG,IAAIA,CAAC,IAAI,GAAG,IAAIA,CAAC,IAAI,GAAG,EAClC7B,KAAK,CAACmB,QAAQ,GAAGnB,KAAK,CAAC2B,OAAO,CAACR,QAAQ;IACzC,OAAOnB,KAAK,CAAC2B,OAAO,GAAG3B,KAAK,CAAC2B,OAAO,CAACJ,IAAI;EAC3C;;EAEA;EACA,OAAO;IACLO,IAAI,EAAE,MAAM;IACZC,UAAU,EAAE,SAAAA,CAAA,EAAW;MACrB,OAAO;QACL5B,QAAQ,EAAE,IAAI;QACdwB,OAAO,EAAE,IAAIT,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC;QACzCC,QAAQ,EAAE,CAAC;QACXa,WAAW,EAAE;MACf,CAAC;IACH,CAAC;IAEDC,KAAK,EAAE,SAAAA,CAASlC,MAAM,EAAEC,KAAK,EAAE;MAC7B,IAAIkC,GAAG,GAAGlC,KAAK,CAAC2B,OAAO;MACvB,IAAI5B,MAAM,CAACoC,GAAG,CAAC,CAAC,EAAE;QAChB,IAAID,GAAG,CAACZ,KAAK,IAAI,IAAI,EAAEY,GAAG,CAACZ,KAAK,GAAG,KAAK;QACxCtB,KAAK,CAACmB,QAAQ,GAAGpB,MAAM,CAACqC,WAAW,CAAC,CAAC;QACrCpC,KAAK,CAACgC,WAAW,GAAG,IAAI;MAC1B;MACA,IAAIjC,MAAM,CAACsC,QAAQ,CAAC,CAAC,EAAE,OAAO,IAAI;MAClCxC,OAAO,GAAG,IAAI;MACd,IAAIyC,KAAK,GAAG,CAACtC,KAAK,CAACG,QAAQ,IAAIL,SAAS,EAAEC,MAAM,EAAEC,KAAK,CAAC;MACxD,IAAIsC,KAAK,IAAI,SAAS,EAAE,OAAOA,KAAK;MACpC,IAAIJ,GAAG,CAACZ,KAAK,IAAI,IAAI,EAAEY,GAAG,CAACZ,KAAK,GAAG,IAAI;MAEvC,IAAI,CAACzB,OAAO,IAAI,GAAG,IAAIA,OAAO,IAAI,GAAG,IAAIA,OAAO,IAAI,GAAG,KAChDqC,GAAG,CAACb,IAAI,IAAI,WAAW,EAAC;QAC7BO,UAAU,CAAC5B,KAAK,CAAC;MACnB,CAAC,MACI,IAAIH,OAAO,IAAI,GAAG,EAAE2B,WAAW,CAACxB,KAAK,EAAED,MAAM,CAACqB,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,KAC7D,IAAIvB,OAAO,IAAI,GAAG,EAAE2B,WAAW,CAACxB,KAAK,EAAED,MAAM,CAACqB,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,KAC7D,IAAIvB,OAAO,IAAI,GAAG,EAAE2B,WAAW,CAACxB,KAAK,EAAED,MAAM,CAACqB,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,KAC7D,IAAIvB,OAAO,IAAI,GAAG,EAAE;QACvB,OAAOqC,GAAG,CAACb,IAAI,IAAI,WAAW,EAAEa,GAAG,GAAGN,UAAU,CAAC5B,KAAK,CAAC;QACvD,IAAIkC,GAAG,CAACb,IAAI,IAAI,GAAG,EAAEa,GAAG,GAAGN,UAAU,CAAC5B,KAAK,CAAC;QAC5C,OAAOkC,GAAG,CAACb,IAAI,IAAI,WAAW,EAAEa,GAAG,GAAGN,UAAU,CAAC5B,KAAK,CAAC;MACzD,CAAC,MACI,IAAIH,OAAO,IAAIqC,GAAG,CAACb,IAAI,EAAEO,UAAU,CAAC5B,KAAK,CAAC,CAAC,KAC3C,IAAIL,gBAAgB,KAAM,CAACuC,GAAG,CAACb,IAAI,IAAI,GAAG,IAAIa,GAAG,CAACb,IAAI,IAAI,KAAK,KAClCxB,OAAO,IAAI,GAAG,IAAMqC,GAAG,CAACb,IAAI,IAAI,WAAW,IACpBxB,OAAO,IAAI,cAAe,CAAC,EAClF2B,WAAW,CAACxB,KAAK,EAAED,MAAM,CAACqB,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC;MAElDpB,KAAK,CAACgC,WAAW,GAAG,KAAK;MACzB,OAAOM,KAAK;IACd,CAAC;IAEDC,YAAY,EAAE;MACZC,aAAa,EAAE,WAAW;MAC1BC,aAAa,EAAE;QAACC,IAAI,EAAE;MAAI;IAC5B;EACF,CAAC;AACH;AAAC,C","sources":["./node_modules/@codemirror/legacy-modes/mode/asn1.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\nconst defaults = {\n  keywords: words(\"DEFINITIONS OBJECTS IF DERIVED INFORMATION ACTION\" +\n                  \" REPLY ANY NAMED CHARACTERIZED BEHAVIOUR REGISTERED\" +\n                  \" WITH AS IDENTIFIED CONSTRAINED BY PRESENT BEGIN\" +\n                  \" IMPORTS FROM UNITS SYNTAX MIN-ACCESS MAX-ACCESS\" +\n                  \" MINACCESS MAXACCESS REVISION STATUS DESCRIPTION\" +\n                  \" SEQUENCE SET COMPONENTS OF CHOICE DistinguishedName\" +\n                  \" ENUMERATED SIZE MODULE END INDEX AUGMENTS EXTENSIBILITY\" +\n                  \" IMPLIED EXPORTS\"),\n  cmipVerbs: words(\"ACTIONS ADD GET NOTIFICATIONS REPLACE REMOVE\"),\n  compareTypes: words(\"OPTIONAL DEFAULT MANAGED MODULE-TYPE MODULE_IDENTITY\" +\n                      \" MODULE-COMPLIANCE OBJECT-TYPE OBJECT-IDENTITY\" +\n                      \" OBJECT-COMPLIANCE MODE CONFIRMED CONDITIONAL\" +\n                      \" SUBORDINATE SUPERIOR CLASS TRUE FALSE NULL\" +\n                      \" TEXTUAL-CONVENTION\"),\n  status: words(\"current deprecated mandatory obsolete\"),\n  tags: words(\"APPLICATION AUTOMATIC EXPLICIT IMPLICIT PRIVATE TAGS\" +\n              \" UNIVERSAL\"),\n  storage: words(\"BOOLEAN INTEGER OBJECT IDENTIFIER BIT OCTET STRING\" +\n                 \" UTCTime InterfaceIndex IANAifType CMIP-Attribute\" +\n                 \" REAL PACKAGE PACKAGES IpAddress PhysAddress\" +\n                 \" NetworkAddress BITS BMPString TimeStamp TimeTicks\" +\n                 \" TruthValue RowStatus DisplayString GeneralString\" +\n                 \" GraphicString IA5String NumericString\" +\n                 \" PrintableString SnmpAdminString TeletexString\" +\n                 \" UTF8String VideotexString VisibleString StringStore\" +\n                 \" ISO646String T61String UniversalString Unsigned32\" +\n                 \" Integer32 Gauge Gauge32 Counter Counter32 Counter64\"),\n  modifier: words(\"ATTRIBUTE ATTRIBUTES MANDATORY-GROUP MANDATORY-GROUPS\" +\n                  \" GROUP GROUPS ELEMENTS EQUALITY ORDERING SUBSTRINGS\" +\n                  \" DEFINED\"),\n  accessTypes: words(\"not-accessible accessible-for-notify read-only\" +\n                     \" read-create read-write\"),\n  multiLineStrings: true\n}\n\nexport function asn1(parserConfig) {\n  var keywords = parserConfig.keywords || defaults.keywords,\n      cmipVerbs = parserConfig.cmipVerbs || defaults.cmipVerbs,\n      compareTypes = parserConfig.compareTypes || defaults.compareTypes,\n      status = parserConfig.status || defaults.status,\n      tags = parserConfig.tags || defaults.tags,\n      storage = parserConfig.storage || defaults.storage,\n      modifier = parserConfig.modifier || defaults.modifier,\n      accessTypes = parserConfig.accessTypes|| defaults.accessTypes,\n      multiLineStrings = parserConfig.multiLineStrings || defaults.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false;\n  var isOperatorChar = /[\\|\\^]/;\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]\\(\\){}:=,;]/.test(ch)) {\n      curPunc = ch;\n      return \"punctuation\";\n    }\n    if (ch == \"-\"){\n      if (stream.eat(\"-\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w\\.]/);\n      return \"number\";\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n\n    stream.eatWhile(/[\\w\\-]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur)) return \"keyword\";\n    if (cmipVerbs.propertyIsEnumerable(cur)) return \"variableName\";\n    if (compareTypes.propertyIsEnumerable(cur)) return \"atom\";\n    if (status.propertyIsEnumerable(cur)) return \"comment\";\n    if (tags.propertyIsEnumerable(cur)) return \"typeName\";\n    if (storage.propertyIsEnumerable(cur)) return \"modifier\";\n    if (modifier.propertyIsEnumerable(cur)) return \"modifier\";\n    if (accessTypes.propertyIsEnumerable(cur)) return \"modifier\";\n\n    return \"variableName\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped){\n          var afterNext = stream.peek();\n          //look if the character if the quote is like the B in '10100010'B\n          if (afterNext){\n            afterNext = afterNext.toLowerCase();\n            if(afterNext == \"b\" || afterNext == \"h\" || afterNext == \"o\")\n              stream.next();\n          }\n          end = true; break;\n        }\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    var indent = state.indented;\n    if (state.context && state.context.type == \"statement\")\n      indent = state.context.indented;\n    return state.context = new Context(indent, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  //Interface\n  return {\n    name: \"asn1\",\n    startState: function() {\n      return {\n        tokenize: null,\n        context: new Context(-2, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\" || curPunc == \",\")\n          && ctx.type == \"statement\"){\n        popContext(state);\n      }\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (indentStatements && (((ctx.type == \"}\" || ctx.type == \"top\")\n                                     && curPunc != ';') || (ctx.type == \"statement\"\n                                                            && curPunc == \"newstatement\")))\n        pushContext(state, stream.column(), \"statement\");\n\n      state.startOfLine = false;\n      return style;\n    },\n\n    languageData: {\n      indentOnInput: /^\\s*[{}]$/,\n      commentTokens: {line: \"--\"}\n    }\n  };\n};\n"],"names":["words","str","obj","split","i","length","defaults","keywords","cmipVerbs","compareTypes","status","tags","storage","modifier","accessTypes","multiLineStrings","asn1","parserConfig","indentStatements","isOperatorChar","curPunc","tokenBase","stream","state","ch","next","tokenize","tokenString","test","eat","skipToEnd","eatWhile","cur","current","propertyIsEnumerable","quote","escaped","end","afterNext","peek","toLowerCase","Context","indented","column","type","align","prev","pushContext","col","indent","context","popContext","t","name","startState","startOfLine","token","ctx","sol","indentation","eatSpace","style","languageData","indentOnInput","commentTokens","line"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}