{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_vb_js.js","mappings":"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","sources":["./node_modules/@codemirror/legacy-modes/mode/vb.js"],"sourcesContent":["var ERRORCLASS = 'error';\n\nfunction wordRegexp(words) {\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n}\n\nvar singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/%&\\\\\\\\|\\\\^~<>!]\");\nvar singleDelimiters = new RegExp('^[\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}@,:`=;\\\\.]');\nvar doubleOperators = new RegExp(\"^((==)|(<>)|(<=)|(>=)|(<>)|(<<)|(>>)|(//)|(\\\\*\\\\*))\");\nvar doubleDelimiters = new RegExp(\"^((\\\\+=)|(\\\\-=)|(\\\\*=)|(%=)|(/=)|(&=)|(\\\\|=)|(\\\\^=))\");\nvar tripleDelimiters = new RegExp(\"^((//=)|(>>=)|(<<=)|(\\\\*\\\\*=))\");\nvar identifiers = new RegExp(\"^[_A-Za-z][_A-Za-z0-9]*\");\n\nvar openingKeywords = ['class','module', 'sub','enum','select','while','if','function', 'get','set','property', 'try', 'structure', 'synclock', 'using', 'with'];\nvar middleKeywords = ['else','elseif','case', 'catch', 'finally'];\nvar endKeywords = ['next','loop'];\n\nvar operatorKeywords = ['and', \"andalso\", 'or', 'orelse', 'xor', 'in', 'not', 'is', 'isnot', 'like'];\nvar wordOperators = wordRegexp(operatorKeywords);\n\nvar commonKeywords = [\"#const\", \"#else\", \"#elseif\", \"#end\", \"#if\", \"#region\", \"addhandler\", \"addressof\", \"alias\", \"as\", \"byref\", \"byval\", \"cbool\", \"cbyte\", \"cchar\", \"cdate\", \"cdbl\", \"cdec\", \"cint\", \"clng\", \"cobj\", \"compare\", \"const\", \"continue\", \"csbyte\", \"cshort\", \"csng\", \"cstr\", \"cuint\", \"culng\", \"cushort\", \"declare\", \"default\", \"delegate\", \"dim\", \"directcast\", \"each\", \"erase\", \"error\", \"event\", \"exit\", \"explicit\", \"false\", \"for\", \"friend\", \"gettype\", \"goto\", \"handles\", \"implements\", \"imports\", \"infer\", \"inherits\", \"interface\", \"isfalse\", \"istrue\", \"lib\", \"me\", \"mod\", \"mustinherit\", \"mustoverride\", \"my\", \"mybase\", \"myclass\", \"namespace\", \"narrowing\", \"new\", \"nothing\", \"notinheritable\", \"notoverridable\", \"of\", \"off\", \"on\", \"operator\", \"option\", \"optional\", \"out\", \"overloads\", \"overridable\", \"overrides\", \"paramarray\", \"partial\", \"private\", \"protected\", \"public\", \"raiseevent\", \"readonly\", \"redim\", \"removehandler\", \"resume\", \"return\", \"shadows\", \"shared\", \"static\", \"step\", \"stop\", \"strict\", \"then\", \"throw\", \"to\", \"true\", \"trycast\", \"typeof\", \"until\", \"until\", \"when\", \"widening\", \"withevents\", \"writeonly\"];\n\nvar commontypes = ['object', 'boolean', 'char', 'string', 'byte', 'sbyte', 'short', 'ushort', 'int16', 'uint16', 'integer', 'uinteger', 'int32', 'uint32', 'long', 'ulong', 'int64', 'uint64', 'decimal', 'single', 'double', 'float', 'date', 'datetime', 'intptr', 'uintptr'];\n\nvar keywords = wordRegexp(commonKeywords);\nvar types = wordRegexp(commontypes);\nvar stringPrefixes = '\"';\n\nvar opening = wordRegexp(openingKeywords);\nvar middle = wordRegexp(middleKeywords);\nvar closing = wordRegexp(endKeywords);\nvar doubleClosing = wordRegexp(['end']);\nvar doOpening = wordRegexp(['do']);\n\nvar indentInfo = null;\n\nfunction indent(_stream, state) {\n  state.currentIndent++;\n}\n\nfunction dedent(_stream, state) {\n  state.currentIndent--;\n}\n// tokenizers\nfunction tokenBase(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  var ch = stream.peek();\n\n  // Handle Comments\n  if (ch === \"'\") {\n    stream.skipToEnd();\n    return 'comment';\n  }\n\n\n  // Handle Number Literals\n  if (stream.match(/^((&H)|(&O))?[0-9\\.a-f]/i, false)) {\n    var floatLiteral = false;\n    // Floats\n    if (stream.match(/^\\d*\\.\\d+F?/i)) { floatLiteral = true; }\n    else if (stream.match(/^\\d+\\.\\d*F?/)) { floatLiteral = true; }\n    else if (stream.match(/^\\.\\d+F?/)) { floatLiteral = true; }\n\n    if (floatLiteral) {\n      // Float literals may be \"imaginary\"\n      stream.eat(/J/i);\n      return 'number';\n    }\n    // Integers\n    var intLiteral = false;\n    // Hex\n    if (stream.match(/^&H[0-9a-f]+/i)) { intLiteral = true; }\n    // Octal\n    else if (stream.match(/^&O[0-7]+/i)) { intLiteral = true; }\n    // Decimal\n    else if (stream.match(/^[1-9]\\d*F?/)) {\n      // Decimal literals may be \"imaginary\"\n      stream.eat(/J/i);\n      // TODO - Can you have imaginary longs?\n      intLiteral = true;\n    }\n    // Zero by itself with no other piece of number.\n    else if (stream.match(/^0(?![\\dx])/i)) { intLiteral = true; }\n    if (intLiteral) {\n      // Integer literals may be \"long\"\n      stream.eat(/L/i);\n      return 'number';\n    }\n  }\n\n  // Handle Strings\n  if (stream.match(stringPrefixes)) {\n    state.tokenize = tokenStringFactory(stream.current());\n    return state.tokenize(stream, state);\n  }\n\n  // Handle operators and Delimiters\n  if (stream.match(tripleDelimiters) || stream.match(doubleDelimiters)) {\n    return null;\n  }\n  if (stream.match(doubleOperators)\n      || stream.match(singleOperators)\n      || stream.match(wordOperators)) {\n    return 'operator';\n  }\n  if (stream.match(singleDelimiters)) {\n    return null;\n  }\n  if (stream.match(doOpening)) {\n    indent(stream,state);\n    state.doInCurrentLine = true;\n    return 'keyword';\n  }\n  if (stream.match(opening)) {\n    if (! state.doInCurrentLine)\n      indent(stream,state);\n    else\n      state.doInCurrentLine = false;\n    return 'keyword';\n  }\n  if (stream.match(middle)) {\n    return 'keyword';\n  }\n\n  if (stream.match(doubleClosing)) {\n    dedent(stream,state);\n    dedent(stream,state);\n    return 'keyword';\n  }\n  if (stream.match(closing)) {\n    dedent(stream,state);\n    return 'keyword';\n  }\n\n  if (stream.match(types)) {\n    return 'keyword';\n  }\n\n  if (stream.match(keywords)) {\n    return 'keyword';\n  }\n\n  if (stream.match(identifiers)) {\n    return 'variable';\n  }\n\n  // Handle non-detected items\n  stream.next();\n  return ERRORCLASS;\n}\n\nfunction tokenStringFactory(delimiter) {\n  var singleline = delimiter.length == 1;\n  var OUTCLASS = 'string';\n\n  return function(stream, state) {\n    while (!stream.eol()) {\n      stream.eatWhile(/[^'\"]/);\n      if (stream.match(delimiter)) {\n        state.tokenize = tokenBase;\n        return OUTCLASS;\n      } else {\n        stream.eat(/['\"]/);\n      }\n    }\n    if (singleline) {\n      state.tokenize = tokenBase;\n    }\n    return OUTCLASS;\n  };\n}\n\n\nfunction tokenLexer(stream, state) {\n  var style = state.tokenize(stream, state);\n  var current = stream.current();\n\n  // Handle '.' connected identifiers\n  if (current === '.') {\n    style = state.tokenize(stream, state);\n    if (style === 'variable') {\n      return 'variable';\n    } else {\n      return ERRORCLASS;\n    }\n  }\n\n\n  var delimiter_index = '[({'.indexOf(current);\n  if (delimiter_index !== -1) {\n    indent(stream, state );\n  }\n  if (indentInfo === 'dedent') {\n    if (dedent(stream, state)) {\n      return ERRORCLASS;\n    }\n  }\n  delimiter_index = '])}'.indexOf(current);\n  if (delimiter_index !== -1) {\n    if (dedent(stream, state)) {\n      return ERRORCLASS;\n    }\n  }\n\n  return style;\n}\n\nexport const vb = {\n  name: \"vb\",\n\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      lastToken: null,\n      currentIndent: 0,\n      nextLineIndent: 0,\n      doInCurrentLine: false\n\n\n    };\n  },\n\n  token: function(stream, state) {\n    if (stream.sol()) {\n      state.currentIndent += state.nextLineIndent;\n      state.nextLineIndent = 0;\n      state.doInCurrentLine = 0;\n    }\n    var style = tokenLexer(stream, state);\n\n    state.lastToken = {style:style, content: stream.current()};\n\n\n\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    var trueText = textAfter.replace(/^\\s+|\\s+$/g, '') ;\n    if (trueText.match(closing) || trueText.match(doubleClosing) || trueText.match(middle)) return cx.unit*(state.currentIndent-1);\n    if(state.currentIndent < 0) return 0;\n    return state.currentIndent * cx.unit;\n  },\n\n  languageData: {\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", '\"']},\n    commentTokens: {line: \"'\"},\n    autocomplete: openingKeywords.concat(middleKeywords).concat(endKeywords)\n      .concat(operatorKeywords).concat(commonKeywords).concat(commontypes)\n  }\n};\n"],"names":["ERRORCLASS","wordRegexp","words","RegExp","join","singleOperators","singleDelimiters","doubleOperators","doubleDelimiters","tripleDelimiters","identifiers","openingKeywords","middleKeywords","endKeywords","operatorKeywords","wordOperators","commonKeywords","commontypes","keywords","types","stringPrefixes","opening","middle","closing","doubleClosing","doOpening","indentInfo","indent","_stream","state","currentIndent","dedent","tokenBase","stream","eatSpace","ch","peek","skipToEnd","match","floatLiteral","eat","intLiteral","tokenize","tokenStringFactory","current","doInCurrentLine","next","delimiter","singleline","length","OUTCLASS","eol","eatWhile","tokenLexer","style","delimiter_index","indexOf","vb","name","startState","lastToken","nextLineIndent","token","sol","content","textAfter","cx","trueText","replace","unit","languageData","closeBrackets","brackets","commentTokens","line","autocomplete","concat"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}