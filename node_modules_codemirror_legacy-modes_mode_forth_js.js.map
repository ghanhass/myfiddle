{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_forth_js.js","mappings":"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","sources":["./node_modules/@codemirror/legacy-modes/mode/forth.js"],"sourcesContent":["function toWordList(words) {\n  var ret = [];\n  words.split(' ').forEach(function(e){\n    ret.push({name: e});\n  });\n  return ret;\n}\n\nvar coreWordList = toWordList(\n  'INVERT AND OR XOR\\\n 2* 2/ LSHIFT RSHIFT\\\n 0= = 0< < > U< MIN MAX\\\n 2DROP 2DUP 2OVER 2SWAP ?DUP DEPTH DROP DUP OVER ROT SWAP\\\n >R R> R@\\\n + - 1+ 1- ABS NEGATE\\\n S>D * M* UM*\\\n FM/MOD SM/REM UM/MOD */ */MOD / /MOD MOD\\\n HERE , @ ! CELL+ CELLS C, C@ C! CHARS 2@ 2!\\\n ALIGN ALIGNED +! ALLOT\\\n CHAR [CHAR] [ ] BL\\\n FIND EXECUTE IMMEDIATE COUNT LITERAL STATE\\\n ; DOES> >BODY\\\n EVALUATE\\\n SOURCE >IN\\\n <# # #S #> HOLD SIGN BASE >NUMBER HEX DECIMAL\\\n FILL MOVE\\\n . CR EMIT SPACE SPACES TYPE U. .R U.R\\\n ACCEPT\\\n TRUE FALSE\\\n <> U> 0<> 0>\\\n NIP TUCK ROLL PICK\\\n 2>R 2R@ 2R>\\\n WITHIN UNUSED MARKER\\\n I J\\\n TO\\\n COMPILE, [COMPILE]\\\n SAVE-INPUT RESTORE-INPUT\\\n PAD ERASE\\\n 2LITERAL DNEGATE\\\n D- D+ D0< D0= D2* D2/ D< D= DMAX DMIN D>S DABS\\\n M+ M*/ D. D.R 2ROT DU<\\\n CATCH THROW\\\n FREE RESIZE ALLOCATE\\\n CS-PICK CS-ROLL\\\n GET-CURRENT SET-CURRENT FORTH-WORDLIST GET-ORDER SET-ORDER\\\n PREVIOUS SEARCH-WORDLIST WORDLIST FIND ALSO ONLY FORTH DEFINITIONS ORDER\\\n -TRAILING /STRING SEARCH COMPARE CMOVE CMOVE> BLANK SLITERAL');\n\nvar immediateWordList = toWordList('IF ELSE THEN BEGIN WHILE REPEAT UNTIL RECURSE [IF] [ELSE] [THEN] ?DO DO LOOP +LOOP UNLOOP LEAVE EXIT AGAIN CASE OF ENDOF ENDCASE');\n\nfunction searchWordList (wordList, word) {\n  var i;\n  for (i = wordList.length - 1; i >= 0; i--) {\n    if (wordList[i].name === word.toUpperCase()) {\n      return wordList[i];\n    }\n  }\n  return undefined;\n}\nexport const forth = {\n  name: \"forth\",\n  startState: function() {\n    return {\n      state: '',\n      base: 10,\n      coreWordList: coreWordList,\n      immediateWordList: immediateWordList,\n      wordList: []\n    };\n  },\n  token: function (stream, stt) {\n    var mat;\n    if (stream.eatSpace()) {\n      return null;\n    }\n    if (stt.state === '') { // interpretation\n      if (stream.match(/^(\\]|:NONAME)(\\s|$)/i)) {\n        stt.state = ' compilation';\n        return 'builtin';\n      }\n      mat = stream.match(/^(\\:)\\s+(\\S+)(\\s|$)+/);\n      if (mat) {\n        stt.wordList.push({name: mat[2].toUpperCase()});\n        stt.state = ' compilation';\n        return 'def';\n      }\n      mat = stream.match(/^(VARIABLE|2VARIABLE|CONSTANT|2CONSTANT|CREATE|POSTPONE|VALUE|WORD)\\s+(\\S+)(\\s|$)+/i);\n      if (mat) {\n        stt.wordList.push({name: mat[2].toUpperCase()});\n        return 'def';\n      }\n      mat = stream.match(/^(\\'|\\[\\'\\])\\s+(\\S+)(\\s|$)+/);\n      if (mat) {\n        return 'builtin'\n      }\n    } else { // compilation\n      // ; [\n      if (stream.match(/^(\\;|\\[)(\\s)/)) {\n        stt.state = '';\n        stream.backUp(1);\n        return 'builtin';\n      }\n      if (stream.match(/^(\\;|\\[)($)/)) {\n        stt.state = '';\n        return 'builtin';\n      }\n      if (stream.match(/^(POSTPONE)\\s+\\S+(\\s|$)+/)) {\n        return 'builtin';\n      }\n    }\n\n    // dynamic wordlist\n    mat = stream.match(/^(\\S+)(\\s+|$)/);\n    if (mat) {\n      if (searchWordList(stt.wordList, mat[1]) !== undefined) {\n        return 'variable';\n      }\n\n      // comments\n      if (mat[1] === '\\\\') {\n        stream.skipToEnd();\n        return 'comment';\n      }\n\n      // core words\n      if (searchWordList(stt.coreWordList, mat[1]) !== undefined) {\n        return 'builtin';\n      }\n      if (searchWordList(stt.immediateWordList, mat[1]) !== undefined) {\n        return 'keyword';\n      }\n\n      if (mat[1] === '(') {\n        stream.eatWhile(function (s) { return s !== ')'; });\n        stream.eat(')');\n        return 'comment';\n      }\n\n      // // strings\n      if (mat[1] === '.(') {\n        stream.eatWhile(function (s) { return s !== ')'; });\n        stream.eat(')');\n        return 'string';\n      }\n      if (mat[1] === 'S\"' || mat[1] === '.\"' || mat[1] === 'C\"') {\n        stream.eatWhile(function (s) { return s !== '\"'; });\n        stream.eat('\"');\n        return 'string';\n      }\n\n      // numbers\n      if (mat[1] - 0xfffffffff) {\n        return 'number';\n      }\n      // if (mat[1].match(/^[-+]?[0-9]+\\.[0-9]*/)) {\n      //     return 'number';\n      // }\n\n      return 'atom';\n    }\n  }\n};\n"],"names":["toWordList","words","ret","split","forEach","e","push","name","coreWordList","immediateWordList","searchWordList","wordList","word","i","length","toUpperCase","undefined","forth","startState","state","base","token","stream","stt","mat","eatSpace","match","backUp","skipToEnd","eatWhile","s","eat"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}