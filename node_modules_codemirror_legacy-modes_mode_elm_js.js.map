{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_elm_js.js","mappings":"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","sources":["./node_modules/@codemirror/legacy-modes/mode/elm.js"],"sourcesContent":["function switchState(source, setState, f)\n{\n  setState(f);\n  return f(source, setState);\n}\n\nvar lowerRE = /[a-z]/;\nvar upperRE = /[A-Z]/;\nvar innerRE = /[a-zA-Z0-9_]/;\n\nvar digitRE = /[0-9]/;\nvar hexRE = /[0-9A-Fa-f]/;\nvar symbolRE = /[-&*+.\\\\/<>=?^|:]/;\nvar specialRE = /[(),[\\]{}]/;\nvar spacesRE = /[ \\v\\f]/; // newlines are handled in tokenizer\n\nfunction normal()\n{\n  return function(source, setState)\n  {\n    if (source.eatWhile(spacesRE))\n    {\n      return null;\n    }\n\n    var char = source.next();\n\n    if (specialRE.test(char))\n    {\n      return (char === '{' && source.eat('-'))\n        ? switchState(source, setState, chompMultiComment(1))\n        : (char === '[' && source.match('glsl|'))\n        ? switchState(source, setState, chompGlsl)\n        : 'builtin';\n    }\n\n    if (char === '\\'')\n    {\n      return switchState(source, setState, chompChar);\n    }\n\n    if (char === '\"')\n    {\n      return source.eat('\"')\n        ? source.eat('\"')\n        ? switchState(source, setState, chompMultiString)\n        : 'string'\n      : switchState(source, setState, chompSingleString);\n    }\n\n    if (upperRE.test(char))\n    {\n      source.eatWhile(innerRE);\n      return 'type';\n    }\n\n    if (lowerRE.test(char))\n    {\n      var isDef = source.pos === 1;\n      source.eatWhile(innerRE);\n      return isDef ? \"def\" : \"variable\";\n    }\n\n    if (digitRE.test(char))\n    {\n      if (char === '0')\n      {\n        if (source.eat(/[xX]/))\n        {\n          source.eatWhile(hexRE); // should require at least 1\n          return \"number\";\n        }\n      }\n      else\n      {\n        source.eatWhile(digitRE);\n      }\n      if (source.eat('.'))\n      {\n        source.eatWhile(digitRE); // should require at least 1\n      }\n      if (source.eat(/[eE]/))\n      {\n        source.eat(/[-+]/);\n        source.eatWhile(digitRE); // should require at least 1\n      }\n      return \"number\";\n    }\n\n    if (symbolRE.test(char))\n    {\n      if (char === '-' && source.eat('-'))\n      {\n        source.skipToEnd();\n        return \"comment\";\n      }\n      source.eatWhile(symbolRE);\n      return \"keyword\";\n    }\n\n    if (char === '_')\n    {\n      return \"keyword\";\n    }\n\n    return \"error\";\n  }\n}\n\nfunction chompMultiComment(nest)\n{\n  if (nest == 0)\n  {\n    return normal();\n  }\n  return function(source, setState)\n  {\n    while (!source.eol())\n    {\n      var char = source.next();\n      if (char == '{' && source.eat('-'))\n      {\n        ++nest;\n      }\n      else if (char == '-' && source.eat('}'))\n      {\n        --nest;\n        if (nest === 0)\n        {\n          setState(normal());\n          return 'comment';\n        }\n      }\n    }\n    setState(chompMultiComment(nest));\n    return 'comment';\n  }\n}\n\nfunction chompMultiString(source, setState)\n{\n  while (!source.eol())\n  {\n    var char = source.next();\n    if (char === '\"' && source.eat('\"') && source.eat('\"'))\n    {\n      setState(normal());\n      return 'string';\n    }\n  }\n  return 'string';\n}\n\nfunction chompSingleString(source, setState)\n{\n  while (source.skipTo('\\\\\"')) { source.next(); source.next(); }\n  if (source.skipTo('\"'))\n  {\n    source.next();\n    setState(normal());\n    return 'string';\n  }\n  source.skipToEnd();\n  setState(normal());\n  return 'error';\n}\n\nfunction chompChar(source, setState)\n{\n  while (source.skipTo(\"\\\\'\")) { source.next(); source.next(); }\n  if (source.skipTo(\"'\"))\n  {\n    source.next();\n    setState(normal());\n    return 'string';\n  }\n  source.skipToEnd();\n  setState(normal());\n  return 'error';\n}\n\nfunction chompGlsl(source, setState)\n{\n  while (!source.eol())\n  {\n    var char = source.next();\n    if (char === '|' && source.eat(']'))\n    {\n      setState(normal());\n      return 'string';\n    }\n  }\n  return 'string';\n}\n\nvar wellKnownWords = {\n  case: 1,\n  of: 1,\n  as: 1,\n  if: 1,\n  then: 1,\n  else: 1,\n  let: 1,\n    in: 1,\n  type: 1,\n  alias: 1,\n  module: 1,\n  where: 1,\n  import: 1,\n  exposing: 1,\n  port: 1\n};\n\nexport const elm = {\n  name: \"elm\",\n  startState: function ()  { return { f: normal() }; },\n  copyState:  function (s) { return { f: s.f }; },\n\n  token: function(stream, state) {\n    var type = state.f(stream, function(s) { state.f = s; });\n    var word = stream.current();\n    return (wellKnownWords.hasOwnProperty(word)) ? 'keyword' : type;\n  },\n\n  languageData: {\n    commentTokens: {line: \"--\"}\n  }\n};\n"],"names":["switchState","source","setState","f","lowerRE","upperRE","innerRE","digitRE","hexRE","symbolRE","specialRE","spacesRE","normal","eatWhile","char","next","test","eat","chompMultiComment","match","chompGlsl","chompChar","chompMultiString","chompSingleString","isDef","pos","skipToEnd","nest","eol","skipTo","wellKnownWords","case","of","as","if","then","else","let","in","type","alias","module","where","import","exposing","port","elm","name","startState","copyState","s","token","stream","state","word","current","hasOwnProperty","languageData","commentTokens","line"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}