{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_velocity_js.js","mappings":"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","sources":["./node_modules/@codemirror/legacy-modes/mode/velocity.js"],"sourcesContent":["function parseWords(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\nvar keywords = parseWords(\"#end #else #break #stop #[[ #]] \" +\n                          \"#{end} #{else} #{break} #{stop}\");\nvar functions = parseWords(\"#if #elseif #foreach #set #include #parse #macro #define #evaluate \" +\n                           \"#{if} #{elseif} #{foreach} #{set} #{include} #{parse} #{macro} #{define} #{evaluate}\");\nvar specials = parseWords(\"$foreach.count $foreach.hasNext $foreach.first $foreach.last $foreach.topmost $foreach.parent.count $foreach.parent.hasNext $foreach.parent.first $foreach.parent.last $foreach.parent $velocityCount $!bodyContent $bodyContent\");\nvar isOperatorChar = /[+\\-*&%=<>!?:\\/|]/;\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\nfunction tokenBase(stream, state) {\n  var beforeParams = state.beforeParams;\n  state.beforeParams = false;\n  var ch = stream.next();\n  // start of unparsed string?\n  if ((ch == \"'\") && !state.inString && state.inParams) {\n    state.lastTokenWasBuiltin = false;\n    return chain(stream, state, tokenString(ch));\n  }\n  // start of parsed string?\n  else if ((ch == '\"')) {\n    state.lastTokenWasBuiltin = false;\n    if (state.inString) {\n      state.inString = false;\n      return \"string\";\n    }\n    else if (state.inParams)\n      return chain(stream, state, tokenString(ch));\n  }\n  // is it one of the special signs []{}().,;? Separator?\n  else if (/[\\[\\]{}\\(\\),;\\.]/.test(ch)) {\n    if (ch == \"(\" && beforeParams)\n      state.inParams = true;\n    else if (ch == \")\") {\n      state.inParams = false;\n      state.lastTokenWasBuiltin = true;\n    }\n    return null;\n  }\n  // start of a number value?\n  else if (/\\d/.test(ch)) {\n    state.lastTokenWasBuiltin = false;\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  }\n  // multi line comment?\n  else if (ch == \"#\" && stream.eat(\"*\")) {\n    state.lastTokenWasBuiltin = false;\n    return chain(stream, state, tokenComment);\n  }\n  // unparsed content?\n  else if (ch == \"#\" && stream.match(/ *\\[ *\\[/)) {\n    state.lastTokenWasBuiltin = false;\n    return chain(stream, state, tokenUnparsed);\n  }\n  // single line comment?\n  else if (ch == \"#\" && stream.eat(\"#\")) {\n    state.lastTokenWasBuiltin = false;\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  // variable?\n  else if (ch == \"$\") {\n    stream.eat(\"!\");\n    stream.eatWhile(/[\\w\\d\\$_\\.{}-]/);\n    // is it one of the specials?\n    if (specials && specials.propertyIsEnumerable(stream.current())) {\n      return \"keyword\";\n    }\n    else {\n      state.lastTokenWasBuiltin = true;\n      state.beforeParams = true;\n      return \"builtin\";\n    }\n  }\n  // is it a operator?\n  else if (isOperatorChar.test(ch)) {\n    state.lastTokenWasBuiltin = false;\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  else {\n    // get the whole word\n    stream.eatWhile(/[\\w\\$_{}@]/);\n    var word = stream.current();\n    // is it one of the listed keywords?\n    if (keywords && keywords.propertyIsEnumerable(word))\n      return \"keyword\";\n    // is it one of the listed functions?\n    if (functions && functions.propertyIsEnumerable(word) ||\n        (stream.current().match(/^#@?[a-z0-9_]+ *$/i) && stream.peek()==\"(\") &&\n        !(functions && functions.propertyIsEnumerable(word.toLowerCase()))) {\n      state.beforeParams = true;\n      state.lastTokenWasBuiltin = false;\n      return \"keyword\";\n    }\n    if (state.inString) {\n      state.lastTokenWasBuiltin = false;\n      return \"string\";\n    }\n    if (stream.pos > word.length && stream.string.charAt(stream.pos-word.length-1)==\".\" && state.lastTokenWasBuiltin)\n      return \"builtin\";\n    // default: just a \"word\"\n    state.lastTokenWasBuiltin = false;\n    return null;\n  }\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if ((next == quote) && !escaped) {\n        end = true;\n        break;\n      }\n      if (quote=='\"' && stream.peek() == '$' && !escaped) {\n        state.inString = true;\n        end = true;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end) state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"#\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction tokenUnparsed(stream, state) {\n  var maybeEnd = 0, ch;\n  while (ch = stream.next()) {\n    if (ch == \"#\" && maybeEnd == 2) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    if (ch == \"]\")\n      maybeEnd++;\n    else if (ch != \" \")\n      maybeEnd = 0;\n  }\n  return \"meta\";\n}\n// Interface\n\nexport const velocity = {\n  name: \"velocity\",\n\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      beforeParams: false,\n      inParams: false,\n      inString: false,\n      lastTokenWasBuiltin: false\n    };\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  },\n  languageData: {\n    commentTokens: {line: \"##\", block: {open: \"#*\", close: \"*#\"}}\n  }\n};\n"],"names":["parseWords","str","obj","words","split","i","length","keywords","functions","specials","isOperatorChar","chain","stream","state","f","tokenize","tokenBase","beforeParams","ch","next","inString","inParams","lastTokenWasBuiltin","tokenString","test","eatWhile","eat","tokenComment","match","tokenUnparsed","skipToEnd","propertyIsEnumerable","current","word","peek","toLowerCase","pos","string","charAt","quote","escaped","end","maybeEnd","velocity","name","startState","token","eatSpace","languageData","commentTokens","line","block","open","close"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}