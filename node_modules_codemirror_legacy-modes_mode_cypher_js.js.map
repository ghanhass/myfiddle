{"version":3,"file":"node_modules_codemirror_legacy-modes_mode_cypher_js.js","mappings":"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","sources":["./node_modules/@codemirror/legacy-modes/mode/cypher.js"],"sourcesContent":["var wordRegexp = function(words) {\n  return new RegExp(\"^(?:\" + words.join(\"|\") + \")$\", \"i\");\n};\n\nvar tokenBase = function(stream/*, state*/) {\n  curPunc = null;\n  var ch = stream.next();\n  if (ch ==='\"') {\n    stream.match(/^.*?\"/);\n    return \"string\";\n  }\n  if (ch === \"'\") {\n    stream.match(/^.*?'/);\n    return \"string\";\n  }\n  if (/[{}\\(\\),\\.;\\[\\]]/.test(ch)) {\n    curPunc = ch;\n    return \"punctuation\";\n  } else if (ch === \"/\" && stream.eat(\"/\")) {\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (operatorChars.test(ch)) {\n    stream.eatWhile(operatorChars);\n    return null;\n  } else {\n    stream.eatWhile(/[_\\w\\d]/);\n    if (stream.eat(\":\")) {\n      stream.eatWhile(/[\\w\\d_\\-]/);\n      return \"atom\";\n    }\n    var word = stream.current();\n    if (funcs.test(word)) return \"builtin\";\n    if (preds.test(word)) return \"def\";\n    if (keywords.test(word) || systemKeywords.test(word)) return \"keyword\";\n    return \"variable\";\n  }\n};\nvar pushContext = function(state, type, col) {\n  return state.context = {\n    prev: state.context,\n    indent: state.indent,\n    col: col,\n    type: type\n  };\n};\nvar popContext = function(state) {\n  state.indent = state.context.indent;\n  return state.context = state.context.prev;\n};\nvar curPunc;\nvar funcs = wordRegexp([\"abs\", \"acos\", \"allShortestPaths\", \"asin\", \"atan\", \"atan2\", \"avg\", \"ceil\", \"coalesce\", \"collect\", \"cos\", \"cot\", \"count\", \"degrees\", \"e\", \"endnode\", \"exp\", \"extract\", \"filter\", \"floor\", \"haversin\", \"head\", \"id\", \"keys\", \"labels\", \"last\", \"left\", \"length\", \"log\", \"log10\", \"lower\", \"ltrim\", \"max\", \"min\", \"node\", \"nodes\", \"percentileCont\", \"percentileDisc\", \"pi\", \"radians\", \"rand\", \"range\", \"reduce\", \"rel\", \"relationship\", \"relationships\", \"replace\", \"reverse\", \"right\", \"round\", \"rtrim\", \"shortestPath\", \"sign\", \"sin\", \"size\", \"split\", \"sqrt\", \"startnode\", \"stdev\", \"stdevp\", \"str\", \"substring\", \"sum\", \"tail\", \"tan\", \"timestamp\", \"toFloat\", \"toInt\", \"toString\", \"trim\", \"type\", \"upper\"]);\nvar preds = wordRegexp([\"all\", \"and\", \"any\", \"contains\", \"exists\", \"has\", \"in\", \"none\", \"not\", \"or\", \"single\", \"xor\"]);\nvar keywords = wordRegexp([\"as\", \"asc\", \"ascending\", \"assert\", \"by\", \"case\", \"commit\", \"constraint\", \"create\", \"csv\", \"cypher\", \"delete\", \"desc\", \"descending\", \"detach\", \"distinct\", \"drop\", \"else\", \"end\", \"ends\", \"explain\", \"false\", \"fieldterminator\", \"foreach\", \"from\", \"headers\", \"in\", \"index\", \"is\", \"join\", \"limit\", \"load\", \"match\", \"merge\", \"null\", \"on\", \"optional\", \"order\", \"periodic\", \"profile\", \"remove\", \"return\", \"scan\", \"set\", \"skip\", \"start\", \"starts\", \"then\", \"true\", \"union\", \"unique\", \"unwind\", \"using\", \"when\", \"where\", \"with\", \"call\", \"yield\"]);\nvar systemKeywords = wordRegexp([\"access\", \"active\", \"assign\", \"all\", \"alter\", \"as\", \"catalog\", \"change\", \"copy\", \"create\", \"constraint\", \"constraints\", \"current\", \"database\", \"databases\", \"dbms\", \"default\", \"deny\", \"drop\", \"element\", \"elements\", \"exists\", \"from\", \"grant\", \"graph\", \"graphs\", \"if\", \"index\", \"indexes\", \"label\", \"labels\", \"management\", \"match\", \"name\", \"names\", \"new\", \"node\", \"nodes\", \"not\", \"of\", \"on\", \"or\", \"password\", \"populated\", \"privileges\", \"property\", \"read\", \"relationship\", \"relationships\", \"remove\", \"replace\", \"required\", \"revoke\", \"role\", \"roles\", \"set\", \"show\", \"start\", \"status\", \"stop\", \"suspended\", \"to\", \"traverse\", \"type\", \"types\", \"user\", \"users\", \"with\", \"write\"]);\nvar operatorChars = /[*+\\-<>=&|~%^]/;\n\nexport const cypher = {\n  name: \"cypher\",\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      context: null,\n      indent: 0,\n      col: 0\n    };\n  },\n  token: function(stream, state) {\n    if (stream.sol()) {\n      if (state.context && (state.context.align == null)) {\n        state.context.align = false;\n      }\n      state.indent = stream.indentation();\n    }\n    if (stream.eatSpace()) {\n      return null;\n    }\n    var style = state.tokenize(stream, state);\n    if (style !== \"comment\" && state.context && (state.context.align == null) && state.context.type !== \"pattern\") {\n      state.context.align = true;\n    }\n    if (curPunc === \"(\") {\n      pushContext(state, \")\", stream.column());\n    } else if (curPunc === \"[\") {\n      pushContext(state, \"]\", stream.column());\n    } else if (curPunc === \"{\") {\n      pushContext(state, \"}\", stream.column());\n    } else if (/[\\]\\}\\)]/.test(curPunc)) {\n      while (state.context && state.context.type === \"pattern\") {\n        popContext(state);\n      }\n      if (state.context && curPunc === state.context.type) {\n        popContext(state);\n      }\n    } else if (curPunc === \".\" && state.context && state.context.type === \"pattern\") {\n      popContext(state);\n    } else if (/atom|string|variable/.test(style) && state.context) {\n      if (/[\\}\\]]/.test(state.context.type)) {\n        pushContext(state, \"pattern\", stream.column());\n      } else if (state.context.type === \"pattern\" && !state.context.align) {\n        state.context.align = true;\n        state.context.col = stream.column();\n      }\n    }\n    return style;\n  },\n  indent: function(state, textAfter, cx) {\n    var firstChar = textAfter && textAfter.charAt(0);\n    var context = state.context;\n    if (/[\\]\\}]/.test(firstChar)) {\n      while (context && context.type === \"pattern\") {\n        context = context.prev;\n      }\n    }\n    var closing = context && firstChar === context.type;\n    if (!context) return 0;\n    if (context.type === \"keywords\") return null\n    if (context.align) return context.col + (closing ? 0 : 1);\n    return context.indent + (closing ? 0 : cx.unit);\n  }\n};\n"],"names":["wordRegexp","words","RegExp","join","tokenBase","stream","curPunc","ch","next","match","test","eat","skipToEnd","operatorChars","eatWhile","word","current","funcs","preds","keywords","systemKeywords","pushContext","state","type","col","context","prev","indent","popContext","cypher","name","startState","tokenize","token","sol","align","indentation","eatSpace","style","column","textAfter","cx","firstChar","charAt","closing","unit"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}